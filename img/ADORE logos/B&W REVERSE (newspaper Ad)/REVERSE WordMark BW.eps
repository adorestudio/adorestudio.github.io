%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Adore REVERSE WordMark BW.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Stephanie Mason
%%CreationDate: 8/21/13
%%BoundingBox: 0 0 793 612
%%HiResBoundingBox: 0 0 792.1949 611.5054
%%CropBox: 0 0 792.1949 611.5054
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 28010 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4527F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F8F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F82727F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F8F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F82727F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F82727F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F82127F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F8F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F82727F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F8F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F82727F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F8F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F82727F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F8F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F82127F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F8F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F82727F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F8F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F82727F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F8F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F82727%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F8F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F82127F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F8F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%2727F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F8F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F82727F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F8F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F82727F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F8F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F82127F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F8F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F82727F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8F821F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F8522727F821F827F82752%7D527D527D7D52F827F821F827F821277D527D7D7D2721F827F852527D52%7D537D2821F827F821277D527D5253527DF827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F82727F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827FFFF%F827F827F827F852FFFF5227277DFFFF5227F827F8277EA827272752FFFF%5227F827207DFFFF27287DFF7D27F827F8277DFFA8272752A827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F82753FFFF52F827F827F827F8A8FF27F827F827A9FF2727F8277D%FFF827F827F827AFFF2727F827F8FFA827F827A8FFF827F827F852FF59F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F82727F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827277DF8FFA927F827F827F8277DFF2727F827%F87DFF7DF82727FFA827F827F827F87DFF7DF827F827FFFF272727FF5227%F827F82727FFA85253FF2727F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F8F827F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827F8A852277DFF5227F821F8%27F8A8FF27F821F82752FF5227F852FFA8F821F827F82127FF5221F827F8%FFA87D7DFF5327F821F827F852FFA8527DA827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F82127F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F852A87D%7D7DFFFF2727F827F8277EFF2727F827F87DFF52F82727FFFF27F827F827%F87DFF52F827F827FFFFF827FFFF2727F827F82728FF7D27F8522727F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F8277D27F827F852FFA8F827F827F8A8FF27F827F852FF7DF827F8%277DFF7D27F827F827A8A8F827F827F8FFA827F852FFFFF827F827F852FF%7DF827F8275227F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F82727F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F8277DFF2727F82752FFFF7D2727F852A8FF7D52%527DA87DF827F827F8277DFF7D522752A8A8F827F827F852FFFF5227F87D%FFFF5227F8277DFFA852527DA87DF827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F8F821F827F821F827F821F827F8%21F827F821F827F821F827F821F827F821F827275227522721F852275252%28F8212752275252522827F827F821F827F821275952595252F821F827F8%27FD04522727F8525252F82127532852527D5352F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F82727F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F8272027F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F8FD0527F827F827F827F827F8272727F827%2727F8272727F827F827F827F8272727F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82727F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F852F8522727F8272727F8%27F82752525228F82753272727F82727275227F85252272727F827F82752%2727272027F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F82728FD%04275227522752F82727525252F821F8522727F85227272752F821F852F8%5227522727275227272752F821F827F821F827F821F827F821F827F821F8%27F821F827F821F827F821F827F821F827F821F827F82127F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F8272752F85227FD065227F85227522727F85227FD055227525227F8%2728522728527D2752525228525227F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F8FD0B27F82727522727F8272727F8272752FD0427F82727%522727275227272752FD0427F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F82727F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F8F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F82727F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F8F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F82727F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F8F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F82127F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F8F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F82727F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F8F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F82727F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F8F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F8F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F82127F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F8F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F82727F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F8F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F82727F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F8F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F82727F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F8F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F82127F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F8F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F82727F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F8F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F82727F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F82727F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F8F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F82127F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F82727F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F8F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F82727F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F8F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F82727F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F8F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F82127F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F8F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F82727F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F8F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F8F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F82727F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F8F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F821F827F821F827F821F827F821F827F821F827F821F827F821F827F821%F827F821F827F821F827F821F827F821F827F821F827F821F827F821F827%F82127F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827F827F827F8F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827%F827F827F827F827F827F827F827F827F827282752272827522728275227%282752272827522728275227282752272827522728275227282752272827%522728275227282752272827522728275227282752272827522728275227%282752272827522728275227282752272827522728275227282752272827%5227282752272827522728275227282752272827522728275227FFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068119457F77A548AA4A4</stEvt:instanceID>
                  <stEvt:when>2013-08-02T14:21:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03801174072068119457F77A548AA4A4</stEvt:instanceID>
                  <stEvt:when>2013-08-02T17:08:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811AB08984B6CFD48A5</stEvt:instanceID>
                  <stEvt:when>2013-08-07T12:19:50-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197A5B65486A382ED</stEvt:instanceID>
                  <stEvt:when>2013-08-08T13:46:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811AB08E80F231C7E94</stEvt:instanceID>
                  <stEvt:when>2013-08-14T14:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811AB08A26748D715E1</stEvt:instanceID>
                  <stEvt:when>2013-08-15T15:32:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:32:48-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AEA058AE0920681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:53:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B0A058AE0920681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:56:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B6A058AE0920681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T12:02:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>xmp.did:01801174072068119457F77A548AA4A4</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:B6A058AE0920681197A5E80F29C0D37F</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:B6A058AE0920681197A5E80F29C0D37F</xmpMM:DocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:B0A058AE0920681197A5E80F29C0D37F</stRef:instanceID>
            <stRef:documentID>xmp.did:B0A058AE0920681197A5E80F29C0D37F</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:01801174072068119457F77A548AA4A4</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2013-08-21T12:02:13-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2013-08-21T12:02:13-04:00</xmp:MetadataDate>
         <xmp:CreateDate>2013-08-21T12:02:13-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A86YsnYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUSdN1AacNTNtJ+jjN9WF3xPpesF5+nz6cuO9MUIb&#xA;FKbaN5R8165DJNoui3+qQxNwlksraa4VGIrxYxKwBp44oTQflV+ZReOM+WdSWWUVjie2kRyP9RgG&#xA;7eGK2lGt+WPMegyrFrWl3emyNXgt3DJDyp/LzA5fRiqWYpR2kaHrWs3X1XSLC41C56+jaxPMwHiQ&#xA;gNB74oT2T8qvzHS0a7Hly+kgQcpGhhaUqOvxLHyZfpGK2xaSN43aORSjoSrowoQRsQQcUpvo/kzz&#xA;hrVs11o2hahqVqrmNp7O1nnjDgAlS0aMK0I2xQma/lN+Z7RmQeVNVoByKmzmD03/AGCvLtttitsZ&#xA;u7S7s7mS1u4ZLe5iPGWCVSjo3gysAQfnilGaH5a8wa9PJBounXGpTxLzkitY2lcL48VBPbFCa/8A&#xA;Kr/zL/6lLWv+4fdf9U8VS3W/KvmbQRbnXNJvNL+tczbC8gkgL+mQH4iQKTx5CvzxVKsUuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVMfL2g6l5g1yx0XTI/Vvr+ZYIE7VY/aY9lUbsewxQ+mvJa+&#xA;UvOXlrzB+T1vZfVLXTY+WhatJGytdTw7S3bVGzmf4qDrG3HthQ+X9X0q/wBI1S70vUIjBe2UrwXE&#xA;TdVeM8T+rAlmf5D3l1bfm15a+rzPF6t2IpQhI5I6MrK1OoIOKlO/+coJZT+cepVc/uoLQR7/AGR6&#xA;Ctt4bknFQzT/AJxv843Xm/8ASf5deb/9zWjS2bXFmt3WV4/TdUaNXPxgUk5Ia/AV+GmKl4f5i8uL&#xA;YeedT8t2bmRbTU59Ot5H2LCO4aFGb503xV7J/wA5E2yeQvLvlzyD5crZ6TPA9zqssfwSX0ykIGuG&#xA;G778m4k03HZRioeJ+WvNGveWdWh1XRLySzvYGDB4yQGA6o69HU91O2KvdP8AnIrTtB178uvK35l2&#xA;tolnqurNBBfCIACT17d5TzP7RieEqG60O/bFQwj/AJxmuriH85tDiikZI7lbyOdAdnVbOaQBvkyA&#xA;4qWYfmB+Xn5nat+e2q6j5VKpdevBNDeRXtsskEaxRrykj9X1VVafZZNx2IIxQkn/ADlH5s8va550&#xA;tbPTU9TUNGiez1e+MbQ+pOrj93xbekRDb++1RikPLvKVxNb+atGuIHMc0V9bPHIpoVZZlIIPtipf&#xA;Rn/OTfka/wDMXnXRpV13SdNtFsVhWHVb+G0KuZ5C8qRyHkwZWUEqv7OKHi/5sQazoWrQ+RrvVTrG&#xA;n+XQsun3RFP+OjbW9xMENWPp8/sb/rxSGC4pdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir1j&#xA;8urax8veVdT1+y8xaXaedr+FbXRIJblVktYJTS5lLkcIp2T4U5MOIr3OFCB8pfnB+aUXmrTvV80T&#xA;SRx3C+smoXn+hsin94sruSnAqCKjf+XemBWXf85DW35e+adS/wAV+U/MWnzagIeOq2Bk9J5hEPgl&#xA;i5hQ8nEcSlamgpXfFQ8//JebT7P8xtH1XUr+207T9LlF1dXF1IIxxUEcUG7O5J2CjFSzD87tP0Lz&#xA;j5/u/MGgeZ9Hms7mCEMk9z9XkRoYxGRSRQGrxqOJwoUfJXnHyl+U9jqF/pd9H5k87ajbm1he1SRd&#xA;Pso2YMeUsqxtM5ZVNEXjtTl3wJeSTXt3PeyX0srNdyyGd5ujGRm5Ftu/LfFXvfmvz15G/OHyZp9v&#xA;rOpw+W/POkAmKa8VlsrguoEq+qgYIrlFYct1OwqKnFDzK3/LRI7xF1fzPoVjp1SZr2G/gvmCL1KQ&#xA;WjSysx/ZBUfRim03/N/8z9N8y2ujeV/LcUtv5S8uQrBYmfaW4dEEfrSKOlFHw99yT1oFQ7/nHm50&#xA;vTfzM0/XdW1K00zTtLWdppLuZIi5ntpYUWNWNWPJ6mnQde2KlNvzM8zPoP5wTef/AClrdlqMFxcR&#xA;ywfVZw70WFUlhniBD8G4EV6EEd8VTb82Zfyt/MbT7bztpGvWegeYXjCavpN/6vORkXanoRyszrx4&#xA;hlQhhSvEjFXknkaxgvPNmlpcXtvp9rHcxTXN3dyLFGkUcis5qxFTToo3OKl7P/zkCvlrz/5n07VP&#xA;L3mvR2htrQWdxHdXXocGWV5Oa8loykSU+Enpih5x528v+XdG0SL6z5og8z+a5migRdPlaezs7K3Q&#xA;oAbhh+8Y8URFWgVQfbFLAsUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVNdK0qO907U&#xA;pyHaa1WL0ArKqlpH4kNyBrtU9R0xQr33lucXtrZWMTvcS20E86u6UV56cRyoigHkoFT1NMVtQi8u&#xA;anPDE1tE08snrMUTgQI4WVC/IMf2m3qBTrittaForajqRt5GEUEIZ7mYsqqoXZRzb4RzcqgPicVR&#xA;nmXQLLSre3ZTNFdXJLrazmNnENSAxMe3UU8TvsKbqgqkPlm0mg0i8jeRre7eOLUYAy+rAZJWjSQE&#xA;qBwcIStRt3O4wraVx6LfzRpcRwlLaaVIoi7oGJlLemPiKVrwb4qAbHAq/U9Mt7SygkRnaZ7i5iYt&#xA;QK0cJQIwUD4SSzV+I4qjn8tQS22miydpLnUQpind41t6qjG4jYkKY3ibjsSeQNfDCtpXLo+pRQmd&#xA;4CIRGZvUBBX0xIIeQIJBHMgD7+mBUfJ5dZLS2aQPFcvHdT3MdY2KpABx+CqsrcqhgTUdaYraXXel&#xA;ahZwwzXMDRRT/wB2xpv8KtQgGqni6mh7EHFUJil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KoyHUni0y508RRlLqSOR5jy9QGLlxC0YLT4zWq4oTODzjfQXQuY7W25qbMopWQqpsE9&#xA;OEisn8vX7xQ74rSEHmC7WONEihQRRXMKFFYHhd8hIDRuwchfDFaUdL1aWwFxH6UdxbXaCO5tpuXB&#xA;1DB1PwMjAqy1BBxVbqeqXepXInuWqyrwRQWIValqAsWY1ZiSSSanFUXD5mv7eZZbZI4aWn1J41Dl&#xA;HSho7B2b4w1HBFByFaYrSqPNt6scCC2tgYGtJFfg5YtZIEjJJfuoo1Ke1KmqtIC91Wa7tobd440W&#xA;BpHRkB5H1W5kEknYE7fjXFUZD5mng9NYLS3ijST1niUS8Xf0zESf3lVqrH7BXf5CitL4vNt9Fpw0&#xA;9Le2EAXjvGSaCdp16sR8LOQNunvvja06582Xk9f9FtowYp4aIrn4blzIx+J2NQzEj8a7YrSE1TXL&#xA;vUURJlRFV2lYRhhzkZVQu3ItvxjA22HYYrSXYpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdir1f/AKFg/OP/AKtMP/SXbf8ANeKLd/0LB+cf/Vph/wCku2/5&#xA;rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFb&#xA;d/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9Cw&#xA;fnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf&#xA;/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWm&#xA;H/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCk&#xA;u2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8A&#xA;mvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3&#xA;f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0L&#xA;B+cf/Vph/wCku2/5rxW3f9CwfnH/ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3f9CwfnH/&#xA;ANWmH/pLtv8AmvFbd/0LB+cf/Vph/wCku2/5rxW3/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -611.505 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 611.505 li
792.195 611.505 li
792.195 0 li
cp
clp
[1 0 0 1 0 0 ]ct
792.195 611.505 mo
0 611.505 li
0 0 li
792.195 0 li
792.195 611.505 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
264.795 293.23 mo
275.69 293.23 li
276.078 293.23 276.326 293.191 276.435 293.111 cv
276.543 293.031 276.614 292.82 276.648 292.479 cv
277.417 286.275 li
277.463 285.876 277.486 285.535 277.486 285.25 cv
277.486 284.236 276.95 283.626 275.879 283.421 cv
275.23 283.296 274.905 283.136 274.905 282.942 cv
274.905 282.703 275.082 282.583 275.435 282.583 cv
275.572 282.583 275.743 282.595 275.948 282.618 cv
276.711 282.709 277.542 282.754 278.443 282.754 cv
279.263 282.754 279.941 282.726 280.477 282.669 cv
280.989 282.618 li
281.263 282.595 281.439 282.583 281.519 282.583 cv
281.94 282.583 282.151 282.7 282.151 282.933 cv
282.151 283.108 282.037 283.224 281.81 283.282 cv
281.536 283.37 li
280.909 283.541 280.511 283.754 280.34 284.01 cv
280.169 284.266 280.026 284.883 279.913 285.861 cv
277.879 302.446 li
277.822 302.89 277.793 303.226 277.793 303.453 cv
277.793 304.477 278.329 305.091 279.4 305.296 cv
280.049 305.421 280.374 305.581 280.374 305.774 cv
280.374 306.014 280.174 306.133 279.776 306.133 cv
279.708 306.133 279.559 306.123 279.332 306.103 cv
278.545 306.009 277.713 305.962 276.836 305.962 cv
276.027 305.962 275.35 305.988 274.803 306.04 cv
274.307 306.086 li
274.034 306.118 273.857 306.133 273.777 306.133 cv
273.355 306.133 273.145 306.017 273.145 305.784 cv
273.145 305.609 273.35 305.463 273.76 305.347 cv
274.375 305.188 274.769 304.976 274.939 304.708 cv
275.11 304.441 275.258 303.825 275.384 302.86 cv
276.238 295.808 li
276.261 295.649 276.272 295.484 276.272 295.313 cv
276.272 294.905 276.021 294.7 275.52 294.7 cv
264.336 294.7 li
264.085 294.7 263.938 294.882 263.892 295.246 cv
263.011 302.446 li
262.965 302.856 262.942 303.192 262.942 303.453 cv
262.942 304.466 263.478 305.08 264.549 305.296 cv
265.198 305.421 265.523 305.581 265.523 305.774 cv
265.523 306.014 265.323 306.133 264.925 306.133 cv
264.845 306.133 264.691 306.123 264.463 306.103 cv
263.666 306.009 262.828 305.962 261.951 305.962 cv
261.188 305.962 260.527 305.988 259.969 306.04 cv
259.473 306.086 li
259.188 306.118 259.006 306.133 258.926 306.133 cv
258.504 306.133 258.294 306.017 258.294 305.784 cv
258.294 305.609 258.493 305.463 258.892 305.347 cv
259.792 305.12 260.299 304.585 260.413 303.743 cv
260.516 302.856 li
262.549 286.271 li
262.595 285.918 262.618 285.577 262.618 285.247 cv
262.618 284.234 262.088 283.625 261.028 283.421 cv
260.379 283.296 260.054 283.136 260.054 282.942 cv
260.054 282.703 260.247 282.583 260.634 282.583 cv
260.713 282.583 260.873 282.595 261.111 282.618 cv
261.873 282.709 262.708 282.754 263.618 282.754 cv
264.379 282.754 265.032 282.726 265.578 282.669 cv
266.089 282.618 li
266.374 282.595 266.556 282.583 266.635 282.583 cv
267.056 282.583 267.266 282.7 267.266 282.933 cv
267.266 283.108 267.152 283.224 266.924 283.282 cv
266.651 283.37 li
266.036 283.54 265.643 283.753 265.472 284.009 cv
265.301 284.265 265.158 284.882 265.044 285.86 cv
264.248 292.292 li
264.225 292.485 264.214 292.622 264.214 292.702 cv
264.214 293.054 264.408 293.23 264.795 293.23 cv
cp
0 0 0 .4 cmyk
f
293.361 292.889 mo
292.155 292.889 291.006 293.572 289.914 294.939 cv
289.197 295.84 288.588 296.976 288.087 298.349 cv
287.586 299.722 287.336 300.944 287.336 302.015 cv
287.336 303.712 288.096 304.561 289.615 304.561 cv
290.579 304.561 291.56 304.045 292.557 303.012 cv
293.555 301.98 294.127 300.888 294.275 299.735 cv
294.356 299.098 294.444 298.563 294.537 298.13 cv
294.851 296.593 li
295.037 295.74 295.171 295.165 295.253 294.869 cv
295.334 294.551 295.375 294.266 295.375 294.016 cv
295.375 293.731 295.165 293.472 294.744 293.239 cv
294.322 293.005 293.861 292.889 293.361 292.889 cv
cp
294.087 302.388 mo
292.104 304.976 290.071 306.27 287.986 306.27 cv
287.154 306.27 286.473 305.951 285.944 305.313 cv
285.414 304.675 285.149 303.849 285.149 302.835 cv
285.149 301.491 285.468 300.058 286.107 298.537 cv
286.746 297.016 287.574 295.703 288.589 294.598 cv
290.107 292.969 291.693 292.154 293.348 292.154 cv
293.93 292.154 294.569 292.265 295.265 292.486 cv
295.516 292.568 295.722 292.609 295.881 292.609 cv
296.214 292.609 296.624 292.213 297.112 291.422 cv
297.356 291.033 297.548 290.844 297.688 290.855 cv
297.828 290.867 297.898 290.975 297.898 291.18 cv
297.898 291.271 297.881 291.369 297.847 291.471 cv
297.824 291.551 297.75 291.871 297.625 292.429 cv
297.231 294.294 li
296.992 295.367 296.758 296.742 296.531 298.418 cv
296.303 300.096 296.189 301.242 296.189 301.858 cv
296.189 303.273 296.411 303.98 296.855 303.98 cv
297.083 303.98 297.376 303.792 297.736 303.416 cv
298.094 303.04 298.371 302.636 298.564 302.203 cv
298.724 301.827 298.895 301.639 299.077 301.639 cv
299.271 301.639 299.368 301.758 299.368 301.996 cv
299.368 302.723 298.915 303.591 298.009 304.601 cv
297.103 305.611 296.331 306.116 295.693 306.116 cv
295.249 306.116 294.918 305.861 294.702 305.35 cv
294.485 304.839 294.28 303.852 294.087 302.388 cv
cp
f
307.844 285.147 mo
307.947 285.159 308.044 285.261 308.136 285.455 cv
308.319 285.808 308.434 286.013 308.48 286.07 cv
308.858 286.634 li
308.961 286.782 309.013 286.896 309.013 286.976 cv
309.013 287.078 308.927 287.209 308.755 287.369 cv
308.503 287.62 308.199 287.967 307.844 288.411 cv
307.706 288.582 307.58 288.667 307.465 288.667 cv
307.328 288.667 307.207 288.56 307.104 288.343 cv
306.863 287.842 306.651 287.471 306.468 287.232 cv
306.365 287.084 306.313 286.964 306.313 286.873 cv
306.313 286.748 306.37 286.623 306.485 286.497 cv
306.966 286.001 li
307.023 285.945 307.173 285.757 307.414 285.438 cv
307.585 285.232 307.729 285.136 307.844 285.147 cv
cp
304.912 299.033 mo
305.629 294.801 li
305.686 294.494 305.715 294.215 305.715 293.964 cv
305.715 293.509 305.378 293.282 304.707 293.282 cv
303.784 293.282 li
303.282 293.282 303.037 293.166 303.049 292.932 cv
303.06 292.664 303.304 292.53 303.781 292.53 cv
304.826 292.53 305.836 292.433 306.813 292.239 cv
307.188 292.171 307.477 292.137 307.682 292.137 cv
307.92 292.137 308.039 292.273 308.039 292.547 cv
308.022 292.735 li
307.075 297.452 li
306.601 299.788 306.364 301.565 306.364 302.784 cv
306.364 303.467 306.541 303.821 306.894 303.843 cv
307.407 303.877 307.914 303.405 308.415 302.425 cv
308.54 302.163 308.677 302.032 308.825 302.032 cv
309.007 302.032 309.093 302.151 309.082 302.391 cv
309.036 303.131 308.597 303.943 307.766 304.826 cv
306.934 305.709 306.193 306.15 305.544 306.15 cv
305.202 306.15 304.923 305.897 304.707 305.391 cv
304.49 304.885 304.382 304.233 304.382 303.437 cv
304.382 302.538 304.558 301.07 304.912 299.033 cv
cp
f
317.587 295.64 mo
318.839 293.305 320.16 292.137 321.548 292.137 cv
322.345 292.137 322.743 292.409 322.743 292.953 cv
322.743 293.089 322.709 293.264 322.641 293.479 cv
322.561 293.729 322.515 293.888 322.504 293.956 cv
322.299 294.772 li
322.217 295.146 322.043 295.338 321.776 295.35 cv
321.637 295.361 321.515 295.236 321.41 294.974 cv
321.149 294.324 320.747 294 320.203 294 cv
319.671 294 319.212 294.582 318.826 295.745 cv
318.441 296.909 318.097 298.757 317.795 301.29 cv
317.308 305.294 li
317.292 305.483 li
317.246 305.928 316.887 306.15 316.215 306.15 cv
315.611 306.15 315.309 305.968 315.309 305.603 cv
315.309 305.523 315.314 305.42 315.326 305.294 cv
316.164 298.603 li
316.209 298.226 316.232 297.77 316.232 297.233 cv
316.232 295.544 315.844 294.7 315.07 294.7 cv
314.728 294.7 314.415 294.89 314.13 295.268 cv
313.845 295.646 313.663 296.111 313.583 296.661 cv
313.526 297.097 313.389 297.315 313.173 297.315 cv
312.911 297.315 312.78 297.042 312.78 296.495 cv
312.78 295.333 313.069 294.375 313.649 293.624 cv
313.922 293.271 314.257 292.952 314.655 292.667 cv
315.053 292.382 315.371 292.239 315.61 292.239 cv
316.349 292.239 317.008 293.373 317.587 295.64 cv
cp
f
342.456 291.539 mo
342.91 292.689 343.568 293.265 344.431 293.265 cv
344.76 293.265 345.041 293.145 345.274 292.906 cv
345.507 292.667 345.623 292.376 345.623 292.034 cv
345.623 291.351 345.203 291.009 344.363 291.009 cv
343.852 291.009 343.216 291.186 342.456 291.539 cv
cp
353.792 293.948 mo
354.51 294.427 355.005 294.925 355.279 295.444 cv
355.552 295.962 355.689 296.648 355.689 297.503 cv
355.689 299.873 354.618 301.946 352.476 303.724 cv
350.334 305.501 347.839 306.39 344.991 306.39 cv
342.336 306.39 340.208 305.706 338.607 304.339 cv
337.007 302.972 336.207 301.149 336.207 298.87 cv
336.207 297.229 336.591 295.802 337.36 294.589 cv
338.129 293.375 339.396 292.194 341.162 291.043 cv
340.991 290.292 340.906 289.639 340.906 289.082 cv
340.906 287.239 341.556 285.656 342.854 284.332 cv
344.153 283.007 345.703 282.344 347.503 282.344 cv
348.619 282.344 349.522 282.605 350.212 283.128 cv
350.901 283.65 351.246 284.343 351.246 285.206 cv
351.246 285.865 351.025 286.43 350.583 286.901 cv
350.143 287.373 349.618 287.608 349.011 287.608 cv
348.564 287.608 348.34 287.443 348.34 287.112 cv
348.34 286.999 348.414 286.811 348.563 286.548 cv
348.745 286.218 348.836 285.933 348.836 285.694 cv
348.836 285.284 348.638 284.942 348.241 284.668 cv
347.844 284.395 347.351 284.258 346.762 284.258 cv
345.56 284.258 344.486 284.788 343.54 285.848 cv
342.593 286.907 342.12 288.121 342.12 289.488 cv
342.12 289.727 342.135 290.069 342.167 290.513 cv
342.896 290.16 343.694 289.983 344.561 289.983 cv
345.428 289.983 346.123 290.188 346.647 290.599 cv
347.172 291.009 347.435 291.562 347.435 292.256 cv
347.435 292.929 347.198 293.473 346.725 293.888 cv
346.252 294.305 345.628 294.512 344.853 294.512 cv
343.428 294.512 342.312 293.704 341.502 292.085 cv
339.749 293.428 338.873 295.18 338.873 297.342 cv
338.873 299.401 339.608 301.179 341.081 302.676 cv
342.552 304.172 344.312 304.92 346.358 304.92 cv
348.358 304.92 350.112 304.246 351.618 302.898 cv
353.124 301.551 353.877 299.979 353.877 298.181 cv
353.877 297.362 353.592 296.649 353.023 296.04 cv
352.453 295.432 351.787 295.127 351.023 295.127 cv
350.294 295.127 349.67 295.382 349.152 295.891 cv
348.633 296.4 348.375 297.015 348.375 297.736 cv
348.375 298.182 348.503 298.56 348.759 298.868 cv
349.016 299.177 349.332 299.332 349.708 299.332 cv
350.038 299.332 350.306 299.149 350.511 298.785 cv
350.639 298.58 350.772 298.477 350.912 298.477 cv
351.203 298.477 351.336 298.646 351.314 298.985 cv
351.291 299.392 351.111 299.734 350.775 300.01 cv
350.439 300.287 350.032 300.425 349.554 300.425 cv
348.802 300.425 348.152 300.089 347.605 299.417 cv
347.059 298.745 346.785 297.942 346.785 297.007 cv
346.785 295.105 348.234 293.538 351.132 292.308 cv
353.579 291.263 li
357.355 289.654 359.244 287.799 359.244 285.698 cv
359.244 285.025 359.022 284.451 358.58 283.978 cv
358.138 283.504 357.601 283.267 356.968 283.267 cv
356.509 283.267 356.104 283.449 355.753 283.813 cv
355.403 284.176 355.228 284.589 355.228 285.051 cv
355.228 285.478 355.489 285.744 356.014 285.848 cv
356.64 285.961 356.954 286.181 356.954 286.509 cv
356.954 286.882 356.798 287.221 356.486 287.526 cv
356.174 287.832 355.831 287.984 355.458 287.984 cv
354.902 287.984 354.457 287.779 354.123 287.369 cv
353.788 286.958 353.621 286.423 353.621 285.762 cv
353.621 284.862 353.963 284.073 354.646 283.395 cv
355.33 282.718 356.127 282.378 357.039 282.378 cv
358.099 282.378 358.967 282.752 359.646 283.498 cv
360.323 284.244 360.662 285.193 360.662 286.343 cv
360.662 287.847 360.081 289.237 358.919 290.513 cv
358.224 291.288 356.896 292.217 354.937 293.299 cv
354.686 293.447 354.305 293.664 353.792 293.948 cv
cp
f
376.638 300.678 mo
378.193 289.886 li
378.33 288.985 378.398 288.102 378.398 287.235 cv
378.398 286.254 378.087 285.402 377.466 284.678 cv
376.845 283.954 376.108 283.592 375.253 283.592 cv
375.083 283.592 374.929 283.609 374.792 283.643 cv
374.644 283.666 374.519 283.677 374.416 283.677 cv
374.165 283.666 374.04 283.565 374.04 283.374 cv
374.04 283.207 374.219 283.044 374.577 282.887 cv
374.935 282.73 375.319 282.652 375.728 282.652 cv
377.297 282.72 li
378.439 282.737 li
378.894 282.737 379.241 282.903 379.479 283.233 cv
383.392 288.753 li
384.712 290.61 386.091 292.684 387.526 294.974 cv
391.318 301.006 li
391.523 301.297 li
391.66 301.491 391.756 301.587 391.813 301.587 cv
391.998 301.587 392.131 301.218 392.212 300.478 cv
392.235 300.33 392.282 300.074 392.351 299.709 cv
392.744 297.604 393.14 294.969 393.539 291.804 cv
393.938 288.64 394.138 286.534 394.138 285.487 cv
394.138 284.269 393.557 283.58 392.395 283.421 cv
391.791 283.34 391.483 283.171 391.472 282.915 cv
391.46 282.694 391.67 282.583 392.103 282.583 cv
392.239 282.583 392.386 282.595 392.545 282.618 cv
393.17 282.709 393.875 282.754 394.659 282.754 cv
395.352 282.754 395.926 282.726 396.38 282.669 cv
396.806 282.618 li
397.045 282.595 397.21 282.583 397.3 282.583 cv
397.733 282.583 397.949 282.724 397.949 283.003 cv
397.949 283.178 397.744 283.294 397.333 283.353 cv
396.604 283.455 396.128 283.763 395.907 284.275 cv
395.684 284.787 395.465 286.091 395.249 288.185 cv
394.656 293.787 393.916 298.955 393.027 303.691 cv
392.801 304.921 392.652 305.638 392.579 305.843 cv
392.506 306.048 392.346 306.15 392.098 306.15 cv
391.929 306.15 391.76 306.02 391.591 305.757 cv
387.649 299.571 li
385.558 296.358 li
384.198 294.273 383.381 293.031 383.107 292.632 cv
380.536 288.958 li
380.422 288.799 380.33 288.667 380.262 288.565 cv
380.125 288.337 380.016 288.229 379.936 288.24 cv
379.788 288.263 379.68 288.508 379.611 288.975 cv
378.039 301.861 li
377.948 302.636 377.902 303.166 377.902 303.45 cv
377.902 304.521 378.483 305.125 379.646 305.262 cv
380.204 305.329 380.483 305.48 380.483 305.714 cv
380.483 305.994 380.233 306.133 379.733 306.133 cv
379.596 306.133 379.437 306.123 379.256 306.103 cv
378.562 306.009 377.79 305.962 376.937 305.962 cv
376.198 305.962 375.573 305.988 375.062 306.04 cv
374.602 306.086 li
374.352 306.118 374.187 306.133 374.107 306.133 cv
373.823 306.133 373.681 306.033 373.681 305.832 cv
373.681 305.62 373.932 305.441 374.433 305.296 cv
375.06 305.091 375.501 304.8 375.757 304.424 cv
376.014 304.047 376.216 303.386 376.364 302.44 cv
376.638 300.678 li
cp
f
407.45 292.889 mo
406.244 292.889 405.094 293.572 404.001 294.939 cv
403.285 295.84 402.676 296.976 402.175 298.349 cv
401.675 299.722 401.425 300.944 401.425 302.015 cv
401.425 303.712 402.184 304.561 403.704 304.561 cv
404.667 304.561 405.648 304.045 406.646 303.012 cv
407.643 301.98 408.216 300.888 408.363 299.735 cv
408.445 299.098 408.533 298.563 408.625 298.13 cv
408.939 296.593 li
409.125 295.74 409.259 295.165 409.341 294.869 cv
409.422 294.551 409.463 294.266 409.463 294.016 cv
409.463 293.731 409.253 293.472 408.832 293.239 cv
408.411 293.005 407.95 292.889 407.45 292.889 cv
cp
408.175 302.388 mo
406.193 304.976 404.16 306.27 402.074 306.27 cv
401.242 306.27 400.562 305.951 400.033 305.313 cv
399.501 304.675 399.238 303.849 399.238 302.835 cv
399.238 301.491 399.556 300.058 400.196 298.537 cv
400.834 297.016 401.662 295.703 402.677 294.598 cv
404.195 292.969 405.782 292.154 407.437 292.154 cv
408.018 292.154 408.658 292.265 409.353 292.486 cv
409.605 292.568 409.81 292.609 409.97 292.609 cv
410.302 292.609 410.712 292.213 411.201 291.422 cv
411.445 291.033 411.636 290.844 411.777 290.855 cv
411.917 290.867 411.986 290.975 411.986 291.18 cv
411.986 291.271 411.969 291.369 411.935 291.471 cv
411.912 291.551 411.837 291.871 411.712 292.429 cv
411.32 294.294 li
411.081 295.367 410.847 296.742 410.619 298.418 cv
410.391 300.096 410.277 301.242 410.277 301.858 cv
410.277 303.273 410.5 303.98 410.944 303.98 cv
411.171 303.98 411.464 303.792 411.824 303.416 cv
412.183 303.04 412.458 302.636 412.653 302.203 cv
412.812 301.827 412.983 301.639 413.166 301.639 cv
413.359 301.639 413.457 301.758 413.457 301.996 cv
413.457 302.723 413.003 303.591 412.097 304.601 cv
411.191 305.611 410.419 306.116 409.782 306.116 cv
409.337 306.116 409.007 305.861 408.791 305.35 cv
408.574 304.839 408.369 303.852 408.175 302.388 cv
cp
f
421.932 285.147 mo
422.035 285.159 422.132 285.261 422.224 285.455 cv
422.408 285.808 422.523 286.013 422.568 286.07 cv
422.947 286.634 li
423.05 286.782 423.101 286.896 423.101 286.976 cv
423.101 287.078 423.015 287.209 422.843 287.369 cv
422.591 287.62 422.288 287.967 421.932 288.411 cv
421.794 288.582 421.667 288.667 421.554 288.667 cv
421.416 288.667 421.295 288.56 421.193 288.343 cv
420.952 287.842 420.74 287.471 420.556 287.232 cv
420.453 287.084 420.402 286.964 420.402 286.873 cv
420.402 286.748 420.458 286.623 420.574 286.497 cv
421.054 286.001 li
421.112 285.945 421.261 285.757 421.501 285.438 cv
421.673 285.232 421.818 285.136 421.932 285.147 cv
cp
419 299.033 mo
419.718 294.801 li
419.775 294.494 419.803 294.215 419.803 293.964 cv
419.803 293.509 419.466 293.282 418.794 293.282 cv
417.873 293.282 li
417.371 293.282 417.125 293.166 417.137 292.932 cv
417.148 292.664 417.392 292.53 417.87 292.53 cv
418.914 292.53 419.925 292.433 420.902 292.239 cv
421.276 292.171 421.566 292.137 421.77 292.137 cv
422.008 292.137 422.127 292.273 422.127 292.547 cv
422.111 292.735 li
421.164 297.452 li
420.689 299.788 420.453 301.565 420.453 302.784 cv
420.453 303.467 420.628 303.821 420.982 303.843 cv
421.496 303.877 422.001 303.405 422.503 302.425 cv
422.628 302.163 422.765 302.032 422.914 302.032 cv
423.095 302.032 423.181 302.151 423.169 302.391 cv
423.125 303.131 422.685 303.943 421.854 304.826 cv
421.022 305.709 420.282 306.15 419.632 306.15 cv
419.291 306.15 419.011 305.897 418.794 305.391 cv
418.578 304.885 418.47 304.233 418.47 303.437 cv
418.47 302.538 418.646 301.07 419 299.033 cv
cp
f
428.542 301.813 mo
430.679 284.411 li
430.736 283.933 430.77 283.625 430.782 283.489 cv
430.804 283.09 430.486 282.891 429.825 282.891 cv
428.953 282.891 li
428.486 282.891 428.257 282.78 428.269 282.559 cv
428.281 282.302 428.507 282.168 428.951 282.156 cv
430.267 282.088 431.22 281.991 431.811 281.866 cv
432.14 281.797 432.402 281.763 432.594 281.763 cv
432.81 281.763 432.917 281.895 432.917 282.157 cv
432.902 282.362 li
430.507 302.184 li
430.451 302.606 430.423 302.914 430.423 303.107 cv
430.423 303.746 430.639 304.065 431.072 304.065 cv
431.449 304.065 431.853 303.869 432.286 303.476 cv
432.718 303.083 433.1 302.573 433.431 301.946 cv
433.559 301.707 433.693 301.587 433.833 301.587 cv
434.066 301.587 434.183 301.707 434.183 301.945 cv
434.183 302.115 434.042 302.453 433.761 302.958 cv
433.48 303.463 433.203 303.892 432.927 304.244 cv
432.492 304.777 431.985 305.229 431.406 305.597 cv
430.828 305.966 430.332 306.15 429.919 306.15 cv
428.933 306.15 428.441 305.223 428.441 303.367 cv
428.441 302.9 428.474 302.382 428.542 301.813 cv
cp
f
453.872 291.06 mo
457.81 295.162 li
459.579 296.996 460.463 298.831 460.463 300.665 cv
460.463 302.374 459.774 303.755 458.396 304.809 cv
457.017 305.863 455.21 306.39 452.978 306.39 cv
450.654 306.39 449.218 306.156 448.671 305.689 cv
448.42 305.473 448.173 304.928 447.927 304.057 cv
447.683 303.185 447.56 302.431 447.56 301.792 cv
447.56 301.394 447.695 301.194 447.962 301.194 cv
448.136 301.194 448.277 301.342 448.38 301.637 cv
448.79 302.794 449.488 303.716 450.476 304.403 cv
451.463 305.089 452.582 305.433 453.832 305.433 cv
455.125 305.433 456.193 305.061 457.033 304.315 cv
457.873 303.571 458.292 302.625 458.292 301.476 cv
458.292 300.84 458.14 300.237 457.833 299.669 cv
457.525 299.1 456.968 298.378 456.161 297.503 cv
452.272 293.299 li
451.123 292.057 450.335 291 449.91 290.128 cv
449.482 289.257 449.269 288.263 449.269 287.146 cv
449.269 285.757 449.761 284.609 450.746 283.703 cv
451.729 282.797 452.972 282.344 454.473 282.344 cv
455.394 282.344 456.628 282.606 458.175 283.13 cv
458.63 283.279 458.886 283.353 458.943 283.353 cv
459.057 283.341 459.239 283.262 459.49 283.113 cv
459.617 283.034 459.74 282.988 459.856 282.977 cv
460.147 282.965 460.292 283.301 460.292 283.985 cv
460.292 284.549 li
460.652 287.864 li
460.673 288.218 460.526 288.394 460.207 288.394 cv
459.933 288.394 459.728 288.131 459.591 287.605 cv
459.238 286.336 458.558 285.282 457.554 284.442 cv
456.548 283.602 455.458 283.182 454.283 283.182 cv
453.427 283.182 452.727 283.461 452.185 284.021 cv
451.642 284.581 451.372 285.3 451.372 286.179 cv
451.372 287.709 452.205 289.336 453.872 291.06 cv
cp
f
468.656 294.307 mo
467.769 301.211 li
467.734 301.531 467.716 301.873 467.716 302.237 cv
467.716 302.784 467.853 303.24 468.128 303.604 cv
468.403 303.969 468.746 304.151 469.159 304.151 cv
469.891 304.151 470.652 303.729 471.442 302.886 cv
471.652 302.659 471.832 302.544 471.983 302.544 cv
472.169 302.544 472.262 302.635 472.262 302.816 cv
472.262 303.44 471.734 304.152 470.677 304.952 cv
469.621 305.751 468.681 306.15 467.859 306.15 cv
467.208 306.15 466.682 305.849 466.283 305.246 cv
465.882 304.643 465.683 303.858 465.683 302.891 cv
465.683 302.447 465.722 301.884 465.802 301.201 cv
466.605 294.682 li
466.64 294.42 466.673 294.209 466.708 294.05 cv
466.719 293.959 466.725 293.885 466.725 293.828 cv
466.713 293.578 466.52 293.453 466.144 293.453 cv
465.187 293.453 li
464.925 293.453 464.794 293.354 464.794 293.157 cv
464.794 292.925 465.033 292.682 465.511 292.427 cv
466.753 291.755 467.745 290.833 468.486 289.659 cv
468.671 289.363 468.863 289.214 469.06 289.214 cv
469.315 289.214 469.443 289.323 469.443 289.539 cv
469.443 289.653 469.408 289.813 469.339 290.018 cv
469.317 290.098 469.259 290.314 469.169 290.667 cv
469.049 291.231 li
468.947 291.675 li
468.923 291.778 468.913 291.858 468.913 291.915 cv
468.913 292.188 469.14 292.325 469.596 292.325 cv
469.75 292.325 li
472.091 292.256 li
472.478 292.256 472.672 292.407 472.672 292.707 cv
472.672 293.204 472.382 293.453 471.8 293.453 cv
469.767 293.367 li
469.528 293.367 li
469.208 293.367 468.996 293.424 468.887 293.538 cv
468.779 293.652 468.702 293.909 468.656 294.307 cv
cp
f
485.537 299.024 mo
484.091 301.257 482.959 302.807 482.14 303.672 cv
481.525 304.311 480.834 304.869 480.066 305.347 cv
479.298 305.826 478.705 306.065 478.283 306.065 cv
477.919 306.065 477.623 305.874 477.396 305.492 cv
477.167 305.109 477.054 304.616 477.054 304.011 cv
477.054 303.099 477.191 301.923 477.464 300.485 cv
478.148 296.943 li
478.319 296.076 478.404 295.459 478.404 295.094 cv
478.404 294.661 478.285 294.438 478.045 294.427 cv
477.829 294.416 477.567 294.572 477.259 294.897 cv
476.952 295.221 476.707 295.612 476.525 296.067 cv
476.353 296.455 476.171 296.648 475.978 296.648 cv
475.761 296.648 475.653 296.512 475.653 296.24 cv
475.653 295.332 476.042 294.415 476.82 293.49 cv
477.597 292.565 478.372 292.103 479.144 292.103 cv
480.041 292.103 480.49 292.821 480.49 294.259 cv
480.49 294.624 480.457 295.012 480.389 295.423 cv
479.441 301.327 li
479.417 301.521 479.379 301.806 479.324 302.183 cv
479.241 302.936 li
479.218 303.119 479.208 303.284 479.208 303.432 cv
479.208 303.911 479.377 304.151 479.718 304.151 cv
480.092 304.151 480.662 303.768 481.427 303.001 cv
482.193 302.235 482.973 301.262 483.767 300.083 cv
485.208 297.976 486.246 295.703 486.88 293.265 cv
486.996 292.843 487.117 292.57 487.244 292.444 cv
487.369 292.319 487.587 292.256 487.898 292.256 cv
488.507 292.256 488.812 292.49 488.812 292.958 cv
488.812 293.083 488.794 293.226 488.761 293.386 cv
487.906 297.356 li
487.347 299.924 487.069 301.846 487.069 303.124 cv
487.069 303.683 487.296 303.963 487.752 303.963 cv
488.424 303.963 489.097 303.331 489.769 302.066 cv
489.917 301.781 490.077 301.639 490.248 301.639 cv
490.475 301.639 490.589 301.764 490.589 302.013 cv
490.589 302.842 490.066 303.739 489.021 304.703 cv
487.975 305.668 486.996 306.15 486.082 306.15 cv
485.304 306.15 484.916 305.552 484.916 304.356 cv
484.916 303.456 485.019 302.379 485.226 301.126 cv
485.398 300.152 li
485.433 299.958 485.479 299.583 485.537 299.024 cv
cp
f
502.641 299.1 mo
503.189 294.718 li
503.212 294.524 503.224 294.37 503.224 294.256 cv
503.224 293.333 502.539 292.872 501.168 292.872 cv
500.095 292.872 499.08 293.441 498.121 294.581 cv
497.47 295.367 496.924 296.387 496.485 297.64 cv
496.045 298.893 495.826 300.072 495.826 301.177 cv
495.826 302.214 496.056 303.043 496.519 303.664 cv
496.982 304.285 497.595 304.595 498.36 304.595 cv
499.445 304.595 500.41 304.082 501.253 303.055 cv
501.962 302.176 502.424 300.858 502.641 299.1 cv
cp
502.201 302.715 mo
500.935 305.085 499.318 306.27 497.347 306.27 cv
496.253 306.27 495.396 305.877 494.775 305.091 cv
494.154 304.305 493.843 303.223 493.843 301.844 cv
493.843 299.417 494.619 297.198 496.171 295.187 cv
497.724 293.177 499.431 292.171 501.291 292.171 cv
501.896 292.171 502.609 292.371 503.431 292.769 cv
504.472 284.41 li
504.529 283.955 504.558 283.642 504.558 283.471 cv
504.558 283.084 504.251 282.891 503.636 282.891 cv
502.798 282.891 li
502.342 282.891 502.121 282.78 502.132 282.559 cv
502.143 282.314 502.365 282.18 502.796 282.156 cv
504.101 282.077 505.032 281.98 505.588 281.866 cv
505.917 281.797 506.178 281.763 506.372 281.763 cv
506.587 281.763 506.695 281.895 506.695 282.157 cv
506.695 282.236 506.689 282.305 506.677 282.362 cv
504.388 301.021 li
504.308 301.717 504.268 302.281 504.268 302.714 cv
504.268 303.729 504.542 304.236 505.088 304.236 cv
505.704 304.236 506.307 303.752 506.9 302.784 cv
507.208 302.271 li
507.333 302.089 507.453 301.998 507.566 301.998 cv
507.738 301.998 507.823 302.088 507.823 302.27 cv
507.823 302.792 507.508 303.479 506.88 304.329 cv
506.023 305.509 505.109 306.099 504.137 306.099 cv
503.532 306.099 503.103 305.921 502.851 305.563 cv
502.6 305.207 502.412 304.523 502.287 303.515 cv
502.263 303.333 502.234 303.067 502.201 302.715 cv
cp
f
515.735 285.147 mo
515.837 285.159 515.935 285.261 516.027 285.455 cv
516.21 285.808 516.326 286.013 516.371 286.07 cv
516.75 286.634 li
516.853 286.782 516.904 286.896 516.904 286.976 cv
516.904 287.078 516.818 287.209 516.646 287.369 cv
516.394 287.62 516.09 287.967 515.735 288.411 cv
515.597 288.582 515.47 288.667 515.357 288.667 cv
515.218 288.667 515.098 288.56 514.996 288.343 cv
514.754 287.842 514.542 287.471 514.359 287.232 cv
514.255 287.084 514.205 286.964 514.205 286.873 cv
514.205 286.748 514.261 286.623 514.376 286.497 cv
514.857 286.001 li
514.915 285.945 515.064 285.757 515.304 285.438 cv
515.476 285.232 515.621 285.136 515.735 285.147 cv
cp
512.802 299.033 mo
513.521 294.801 li
513.578 294.494 513.606 294.215 513.606 293.964 cv
513.606 293.509 513.269 293.282 512.597 293.282 cv
511.675 293.282 li
511.173 293.282 510.928 293.166 510.94 292.932 cv
510.951 292.664 511.195 292.53 511.672 292.53 cv
512.716 292.53 513.728 292.433 514.705 292.239 cv
515.079 292.171 515.369 292.137 515.573 292.137 cv
515.811 292.137 515.93 292.273 515.93 292.547 cv
515.914 292.735 li
514.966 297.452 li
514.492 299.788 514.255 301.565 514.255 302.784 cv
514.255 303.467 514.431 303.821 514.785 303.843 cv
515.298 303.877 515.804 303.405 516.306 302.425 cv
516.431 302.163 516.568 302.032 516.716 302.032 cv
516.898 302.032 516.984 302.151 516.972 302.391 cv
516.927 303.131 516.488 303.943 515.657 304.826 cv
514.825 305.709 514.084 306.15 513.435 306.15 cv
513.093 306.15 512.814 305.897 512.597 305.391 cv
512.38 304.885 512.273 304.233 512.273 303.437 cv
512.273 302.538 512.449 301.07 512.802 299.033 cv
cp
f
528.116 292.854 mo
526.814 292.854 525.726 293.588 524.853 295.056 cv
523.978 296.524 523.542 298.344 523.542 300.518 cv
523.542 303.703 524.513 305.296 526.455 305.296 cv
527.63 305.296 528.644 304.514 529.495 302.949 cv
530.345 301.385 530.771 299.51 530.771 297.326 cv
530.771 294.345 529.886 292.854 528.116 292.854 cv
cp
528.071 292.017 mo
529.585 292.017 530.793 292.521 531.694 293.53 cv
532.593 294.538 533.044 295.891 533.044 297.588 cv
533.044 299.993 532.372 302.041 531.027 303.732 cv
529.683 305.424 528.054 306.27 526.14 306.27 cv
524.693 306.27 523.516 305.732 522.611 304.655 cv
521.705 303.579 521.251 302.186 521.251 300.477 cv
521.251 299.212 521.517 297.933 522.046 296.64 cv
522.577 295.347 523.251 294.324 524.072 293.572 cv
525.2 292.536 526.533 292.017 528.071 292.017 cv
cp
f
240.182 245.626 mo
234.212 234.897 li
232.784 232.327 231.766 231.041 231.159 231.041 cv
230.794 231.041 230.125 231.871 229.153 233.53 cv
228.287 235.003 li
222.953 244.364 li
222.45 245.24 li
222.237 245.591 222.13 245.895 222.13 246.152 cv
222.13 246.947 223.225 247.344 225.415 247.344 cv
238.905 247.344 li
240.06 247.344 240.637 247.099 240.637 246.608 cv
240.637 246.491 240.561 246.292 240.409 246.012 cv
240.182 245.626 li
cp
238.467 223.647 mo
259.262 260.357 li
260.297 262.207 261.516 263.589 262.918 264.502 cv
264.319 265.416 266.132 266.024 268.357 266.329 cv
268.905 266.4 269.179 266.734 269.179 267.331 cv
269.179 267.975 268.828 268.285 268.127 268.262 cv
267.73 268.239 267.149 268.168 266.387 268.051 cv
264.036 267.653 260.252 267.454 255.034 267.454 cv
249.783 267.454 246.213 267.639 244.321 268.009 cv
243.863 268.107 243.466 268.157 243.131 268.157 cv
242.276 268.157 241.849 267.822 241.849 267.152 cv
241.849 266.817 242.184 266.566 242.854 266.399 cv
244.317 266.071 245.528 265.485 246.488 264.641 cv
247.448 263.797 247.927 262.907 247.927 261.969 cv
247.927 260.657 246.605 257.774 243.963 253.321 cv
243.143 251.962 242.239 251.182 241.251 250.983 cv
240.264 250.784 236.762 250.684 230.745 250.684 cv
224.547 250.684 li
220.444 251.246 li
219.32 251.643 218.044 253.186 216.616 255.875 cv
215.203 258.576 li
214.777 259.348 214.564 260.131 214.564 260.926 cv
214.564 263.873 217.245 265.58 222.608 266.047 cv
223.766 266.167 224.329 266.513 224.299 267.085 cv
224.237 267.707 223.688 268.016 222.65 268.016 cv
222.1 268.016 221.322 267.946 220.314 267.805 cv
218.299 267.501 216.498 267.348 214.911 267.348 cv
213.475 267.348 211.155 267.466 207.949 267.7 cv
205.567 267.887 204.087 267.981 203.507 267.981 cv
202.652 267.981 202.224 267.695 202.224 267.122 cv
202.224 266.645 202.651 266.286 203.504 266.047 cv
205.149 265.65 206.467 264.918 207.458 263.854 cv
208.447 262.79 209.917 260.549 211.868 257.132 cv
224.345 235.018 li
225.35 233.264 226.051 232.059 226.447 231.402 cv
230.697 224.699 li
232.891 221.399 li
232.891 221.504 li
233.866 219.724 234.521 218.833 234.856 218.833 cv
235.343 218.833 236.182 219.817 237.37 221.786 cv
238.467 223.647 li
cp
0 0 0 0 cmyk
f
303.649 227.125 mo
303.649 257.967 li
304.196 261.164 li
305.201 263.881 308.958 265.239 315.47 265.239 cv
322.53 265.239 328.128 263.359 332.267 259.601 cv
336.405 255.843 338.475 250.767 338.475 244.373 cv
338.475 237.675 335.986 232.219 331.011 228.003 cv
326.036 223.788 319.608 221.68 311.728 221.68 cv
308.502 221.68 306.296 222.008 305.109 222.664 cv
304.135 223.179 303.649 224.667 303.649 227.125 cv
cp
293.137 229.022 mo
293.137 226.774 292.33 225.042 290.715 223.824 cv
289.1 222.606 286.814 221.997 283.859 221.997 cv
282.915 221.997 282.442 221.687 282.442 221.066 cv
282.442 220.636 282.64 220.356 283.037 220.225 cv
283.432 220.094 284.301 220.028 285.642 220.028 cv
292.588 220.098 li
294.172 220.098 295.589 220.075 296.839 220.028 cv
298.758 219.935 301.394 219.77 304.746 219.536 cv
309.254 219.208 312.835 219.043 315.486 219.043 cv
325.815 219.043 334.094 221.078 340.326 225.147 cv
346.556 229.217 349.672 234.629 349.672 241.384 cv
349.672 250.085 345.482 257.016 337.104 262.176 cv
330.949 265.952 324.017 267.84 316.309 267.84 cv
315.029 267.84 312.454 267.747 308.584 267.559 cv
306.391 267.466 304.136 267.418 301.821 267.418 cv
296.397 267.418 292.787 267.536 290.989 267.77 cv
289.587 267.958 288.643 268.051 288.155 268.051 cv
287.454 268.051 287.104 267.705 287.104 267.013 cv
287.104 266.536 287.485 266.237 288.247 266.118 cv
290.136 265.837 291.423 265.24 292.109 264.326 cv
292.794 263.414 293.137 261.844 293.137 259.619 cv
293.137 229.022 li
cp
f
401.097 221.399 mo
394.973 221.399 390.189 223.145 386.746 226.637 cv
383.303 230.13 381.582 234.993 381.582 241.227 cv
381.582 248.587 383.745 254.569 388.072 259.174 cv
392.397 263.78 398.019 266.083 404.936 266.083 cv
411.181 266.083 416.179 264.179 419.927 260.37 cv
423.674 256.561 425.548 251.47 425.548 245.094 cv
425.548 241.415 424.679 237.823 422.943 234.319 cv
421.207 230.815 418.89 228.032 415.996 225.969 cv
411.792 222.923 406.825 221.399 401.097 221.399 cv
cp
404.388 218.762 mo
413.894 218.762 421.572 220.891 427.421 225.147 cv
433.272 229.405 436.197 234.992 436.197 241.912 cv
436.197 249.44 433.181 255.82 427.148 261.05 cv
421.267 266.163 413.163 268.719 402.833 268.719 cv
392.962 268.719 385.07 266.497 379.16 262.053 cv
373.248 257.608 370.293 251.668 370.293 244.233 cv
370.293 241.043 371.04 237.871 372.533 234.716 cv
374.025 231.563 376.052 228.918 378.611 226.783 cv
381.566 224.274 385.322 222.31 389.877 220.891 cv
394.432 219.472 399.269 218.762 404.388 218.762 cv
cp
f
475.237 226.637 mo
475.237 238.801 li
475.237 240.301 475.488 241.25 475.992 241.649 cv
476.497 242.048 477.695 242.247 479.587 242.247 cv
485.023 242.247 488.388 242.171 489.687 242.018 cv
490.984 241.866 492.199 241.391 493.328 240.594 cv
495.556 239.047 496.671 236.915 496.671 234.196 cv
496.671 230.657 495.167 227.733 492.16 225.424 cv
489.152 223.116 485.328 221.961 480.687 221.961 cv
478.611 221.961 477.183 222.295 476.404 222.963 cv
475.626 223.631 475.237 224.856 475.237 226.637 cv
cp
475.237 254.079 mo
475.237 258.525 475.769 261.538 476.836 263.117 cv
477.903 264.696 480.005 265.603 483.144 265.836 cv
484.423 265.932 485.063 266.313 485.063 266.98 cv
485.063 267.647 484.544 267.981 483.509 267.981 cv
483.173 267.981 482.549 267.946 481.635 267.875 cv
479.015 267.712 476.486 267.629 474.048 267.629 cv
472.007 267.629 470.194 267.674 468.61 267.763 cv
464.771 268.031 li
461.708 268.232 li
460.855 268.299 460.261 268.333 459.926 268.333 cv
458.83 268.333 458.281 268.01 458.281 267.366 cv
458.281 266.841 458.585 266.507 459.195 266.364 cv
461.267 265.873 462.699 265.212 463.492 264.382 cv
464.283 263.552 464.679 262.284 464.679 260.577 cv
464.679 257.245 li
464.725 255.877 li
464.725 230.484 li
464.725 227.678 464.268 225.796 463.354 224.837 cv
461.861 223.271 459.423 222.324 456.042 221.997 cv
454.792 221.854 454.167 221.449 454.167 220.782 cv
454.167 220.115 454.594 219.782 455.447 219.782 cv
455.783 219.782 456.331 219.817 457.093 219.887 cv
459.439 220.075 462.013 220.168 464.816 220.168 cv
467.894 220.168 471.626 220.04 476.013 219.782 cv
481.163 219.478 484.712 219.325 486.663 219.325 cv
492.451 219.325 497.25 220.539 501.059 222.967 cv
504.868 225.395 506.772 228.449 506.772 232.132 cv
506.772 234.455 505.926 236.565 504.236 238.465 cv
502.544 240.365 500.22 241.808 497.265 242.792 cv
496.656 242.98 496.367 243.215 496.398 243.496 cv
496.427 243.73 496.58 244.012 496.855 244.339 cv
497.128 244.667 497.541 245.218 498.088 245.99 cv
502.156 251.54 li
506.863 257.968 li
508.478 260.146 509.917 261.657 511.182 262.5 cv
512.447 263.342 513.931 263.764 515.638 263.764 cv
516.339 263.764 516.994 263.717 517.603 263.623 cv
517.969 263.553 518.304 263.518 518.609 263.518 cv
519.158 263.518 519.431 263.788 519.431 264.326 cv
519.431 265.005 518.184 265.778 515.691 266.645 cv
513.197 267.512 510.986 267.946 509.057 267.946 cv
505.925 267.946 503.037 266.763 500.392 264.395 cv
497.748 262.028 494.312 257.552 490.085 250.965 cv
488.443 248.364 487.089 246.717 486.023 246.026 cv
484.957 245.335 483.219 244.989 480.812 244.989 cv
477.979 244.989 li
475.922 245.27 li
475.465 245.457 475.237 246.018 475.237 246.954 cv
475.237 254.079 li
cp
f
553.901 227.797 mo
553.901 235.426 li
553.901 237.606 554.107 238.989 554.518 239.575 cv
554.929 240.161 555.927 240.454 557.511 240.454 cv
558.882 240.418 li
560.894 240.383 li
564.779 240.383 li
567.794 240.383 570.125 239.106 571.771 236.551 cv
572.822 234.829 li
573.096 234.407 573.553 234.184 574.193 234.161 cv
574.863 234.138 575.199 234.455 575.199 235.112 cv
575.199 235.3 575.153 235.817 575.062 236.662 cv
575 237.273 574.97 237.79 574.97 238.212 cv
574.97 238.964 575.107 240.726 575.381 243.497 cv
575.564 245.305 575.656 246.879 575.656 248.218 cv
575.701 250.015 li
575.701 250.343 575.656 250.566 575.564 250.684 cv
575.442 250.825 575.199 250.907 574.833 250.93 cv
574.071 250.978 573.599 250.532 573.416 249.594 cv
573.02 247.603 572.106 246.091 570.673 245.059 cv
569.881 244.497 568.915 244.133 567.772 243.969 cv
566.629 243.806 564.488 243.723 561.351 243.723 cv
558.243 243.723 li
556.781 243.723 555.782 243.893 555.25 244.232 cv
554.716 244.572 554.358 245.256 554.175 246.285 cv
553.992 247.455 553.901 249.304 553.901 251.831 cv
553.901 254.99 li
553.901 258.289 554.236 260.664 554.906 262.114 cv
555.424 263.167 556.033 263.881 556.734 264.255 cv
557.435 264.63 558.517 264.817 559.98 264.817 cv
572.349 264.817 580.439 261.922 584.248 256.133 cv
584.46 255.852 584.644 255.7 584.796 255.676 cv
585.101 255.629 585.382 255.706 585.642 255.906 cv
585.9 256.106 586.031 256.358 586.031 256.664 cv
586.031 258.967 585.222 261.199 583.608 263.361 cv
582.267 265.195 580.591 266.505 578.581 267.292 cv
576.57 268.079 573.904 268.473 570.583 268.473 cv
568.632 268.473 566.469 268.379 564.093 268.192 cv
558.791 267.805 li
556.841 267.665 554.205 267.594 550.884 267.594 cv
548.66 267.594 545.278 267.7 540.738 267.911 cv
539.489 267.981 538.59 268.016 538.042 268.016 cv
537.31 268.016 536.915 267.753 536.853 267.227 cv
536.823 266.796 537.158 266.474 537.859 266.258 cv
539.595 265.744 540.777 265.2 541.401 264.626 cv
542.025 264.053 542.521 263.029 542.886 261.555 cv
543.221 260.315 543.389 258.63 543.389 256.5 cv
543.389 228.665 li
543.389 226.044 542.833 224.265 541.721 223.329 cv
540.609 222.393 538.3 221.738 534.796 221.364 cv
533.974 221.268 533.563 220.922 533.563 220.325 cv
533.563 219.775 534.066 219.5 535.072 219.5 cv
535.285 219.5 535.742 219.524 536.443 219.571 cv
536.991 219.594 537.737 219.606 538.681 219.606 cv
543.298 219.747 li
560.619 219.887 li
570.583 219.887 576.722 219.782 579.038 219.571 cv
579.281 219.548 579.495 219.536 579.677 219.536 cv
580.561 219.536 581.003 219.922 581.003 220.696 cv
581.003 221.235 581.094 222.196 581.277 223.579 cv
581.521 225.618 581.642 227.083 581.642 227.973 cv
581.642 229.754 581.048 230.668 579.861 230.715 cv
579.281 230.739 578.992 230.221 578.992 229.162 cv
578.992 226.832 577.887 225.143 575.678 224.096 cv
573.468 223.048 569.897 222.524 564.96 222.524 cv
559.385 222.524 li
556.277 222.805 li
554.724 223.18 553.947 224.364 553.947 226.356 cv
553.901 227.797 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Stephanie Mason) ()%%Title: (Adore REVERSE WordMark BW.eps)%%CreationDate: 8/21/13 12:02 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6kuuiadO>%LJFC;c*+ksk+CPHV@8$q5";51Z+U#$+D:[S0rGf"=eBfeTA4`'l:;ZmUfm=UKe73W$F]ERL\l;jM4OpWRlSkl(%s3;EnoqGK/IA?#i7\Nf8])>H@713d?h7#Ma.V`P<[rb7Z`V$P*q_lr,Dd5FgeEZG=B&foBC99A])pQr]EV7%lF]TunCtfbkg\Y0N%d<qn$Mn2s?&?$NaX&$5!fDA>SQaPt'd<&UrRho'&\5g5AbnoV+K=C/JpJ9DK6YNiM^&7ql>PQ"IT^PCYFrLVo^$7;E[Ct$0FYEe1%s-l"F:qO8T[@>_?D57)Q;KUT.4?c`6G>MRDZ%:4befGn$X6gha_XsCnWB'OQ-ioO,Vn.Z`GAX*gq\DC(;,dAT[e??hia2<C[bbo/%Ie#T3Dm(!F/'[e8mJjtdFj&2iro>FKT'gC=j8*U37u&4ZX6qjJC\REh,H+t[YMP'Q5Qfsm(\h*LhUL8`\;gA5SGR]]P<H\olrO.g%iL1Y>_80W`riu!M7Qd^jA_SAecsOKQ!%(FhL8EBORPaYGq*j-/K$JN7aZX$YfUD0H2.;a[@GME^[l:ehGqhqc@^C?,*Nl5qQk5lH%Q*R=ckKEmMbV9!=]2g9d+S&^j$X;&do%kO6naRu'>ePFk\AJpEd(0IW=TuC8Y?0IY5_>ou>&gV:hr<q9D'UnHrg>*^3Y$W85(9Z:%8Z6@_?dlrkVMS)CPFkl*=IX(d%[M,Tr8fn?b&OYMj&@M6:#EuH^5liU]6p^IqcM#8YnVZ):Fro^L8EJPYiaXX5$;+-16i21X]-8F%CKE"\]Md]L4CT?bO,&)CVcZk]2dqR4'2.;Sn.SIRSE*B>)9rLPYmen`5B5Nm'3l@:KV/#IB7uo0''"gQ`Ym__c5Zd-'^(-t1,c[m%/;<]4:FoGD+AApKNgt+5=C`uA-eIFIoB:Jd4>uUJ7kWCaQJd6p$Km2:fFkA1c^LKrMW%nnL%CKYbZNi83'[>Z?T:,RJ,JAi,6U69%'[@4RGnl`>(pD^Zp*aVT7kX$rXr3:]Z&YXtD\=]cEumK)SB&VIEm&L:\:jd8AT2gU13%J>RqKuAEIR\>V3nu:IZ+rCMk=)UB3-KQ%b*K]XR,]6T\g7eY>*7<h,A0VW>*++Tf9GgNULUBH^Pk)k\Qf_,2]b&HP.br&>b@Y[59;h+-;u_(3TGiuW6dc+hiQU':8&rD2<6<F%Vi^V?\g?0foS9hA)NpU3Y-Pud\.1JBM+Och@RH/UN`Yqtm;bp,fB==UAZ;VdItkd8_S?!Z[k[dsroJW`P&3!#r6,+FQ[ad?q4Hj?%DpOVqHfEr*$9njso"W^TrZ2""Itc>I3^^d!r,6(tItrOLT,.?7H&cZqT=h?)>Q3Ws0L*HYZY[O]GeO+^/(7"j^U\O%qLqiI4hls0%05&7q[l/X!!S2>nn*r'\m^)'5eFuU=Z0/:G^&C[_n%ieSS/$D-g4'Wgroq.(b)/?+mHg`(KtdkrrGks*\SG:G&e=lhID;9eHf!K@%:L4Z`%po.pXOqUG(;Kl/L]6PP?d=NlDs_*!9B5KWCVQASHg]UQ^P"uSFPe`a`LaP^-fcTEpY`GdcAFc/D=R"SF6K7aqrOp3o@As$%HE$g*N7opr`La\bjY,T>5Mc(W=g@.l*Idn7*;ZRK^Q]I[mb6[T+6V!8h=o)qZ0/50i4SNMs0pL,.4b,I[4=W*:tlP+Q#P>5$70oP%2Y]N7N7Tmkq93-"g-JA:LME=J,bYF,1%B2YR!Olg6cD&S@RZtEF83cmJh`2Po!uB;6=W9>aZ(n=V](nVD]X?p/-WH>2qPBqPp'#J%0R:l#H(NCr.iuu*ra,,/DIPdH)lT'/WJ"&UC_\s'Ca4gAgE3k?l)fCqc=rhgm!]Y/X/C83H$)R%Q'FljiA4&49J&q,@Gb<'3CCbi%^E]'Z6/Mm4%P&eHE$g1F!tGbgJkFI+)KK+b+qdMl39V<RUZ;ERWV4:g;*(eSNi?*nV)PKPrJ-o#FO$YAY*-DjranjG<E4<6;N&Cp%'u:Ec((F&3N'K93kPTZ44;LPp@%CRp.H,+5RA>53*LD=-Sm#(`%80P5lR5\!%T6kVmir@IgCr/$T;YY<7nrlRTG7<X]-(%X+osf_%$(M<f<3[#&2&/p.e6ocE4bNL\G`07p>f$9PdXbJQBN/VJ`=YFRC0Nm@ru#7k$>8'V4N%2X8De;r?*bg<F+$pB1o-.?G3U?h]R-qT%\l$XYZo4H.LA(YAmsaS8lDa)Q8lU-cfAsCdcKrQQ_q)&aB>'F.6V5RQASoO2o\Bpg/@g[!+GpKb0nOMFN;c:!^*RenmlVrs_CS!U%BiZW@jA$S5H&*n0lO]($%j[19rlmBR5GL<YC\)dbD:^X8Y-FKknALX@;m)M((a8i+U`3HG30]js"2d;E>LunC4N)N;E3kQ=_S:?/%@r!)In$VWPrsb!rs"1W/II_X_dK0@P/,%TerGks*H#'<@q--!mcW0l(XOqUG(9g$KTmsZBQa:/I><</fo([S$g+R*XT"B1-0B(8B%h=o)qZ0/50LV-=[*_,O`Z=;-c>C?>.*;ZT1IQ8qP]X?9s0:BQ[YPh@"m($n5rXo_>ds]!$'mnfko%Tf"cp(h5V6&<jf,!9C3/@Lt%^0f0C4`B]fkC*+(^SUWs=g@.m?27,QoM>5[E`VP;C\M31DrU6%CVQASHf!K9gE5V*5Mc(W=g@.mh/E8,Mn]M#rGks*H#$L\&e=lh%ID;9eHg]VdeGoF@Hgo`BB>pIO[eTR:3V6,ArGks*\SLqCs6o%;_/$fU'mnfkQ+qu>s*W]WA]:7QFt`Og?N)"Yp<-UDkH->Mr<42;%Vu(ol/,%c+o@ErRq0VVbQpJgh0@@P%D4(5HcX2fAdUrr;U2S6_`=,\j&#G6]55l<irRUmnqC\"))te!ZKT3aK2'28X]U$4%mBG9R%Dqsigi&a(^WjSH?q5uaSIBh[[d^OA3riND#:V;V'q^6Wqfk`c6DV'@p$54rANQYMq@h\=l]."e+ri083-]8W>&:Q]e\o$'Ae_A-d%b_@VAeRkr)&"tcWP^g<s?Ea<@1`sU"%,Il^;nHs1.a80ZCAka=\_;GthXocT[9d\c#p-IdHi"=9W</*s[R4/W7]YpK`RXihrON`N%aZlQf0s#_K7osqb?aI8rHtrU2IV^k/K4^m>K%:*mTNM3^ki7aSe.:i'T[',sJTss@c1YMr$^=ET!?V6bXfkanmr*-5e]4;k=%ODX%4:cbtB>"l-^CQZjqqK[h85BTRYhEpN?JX4nrb]&Y%p?"X2LaH4YCR6Vk_,^J4?VW*XMps,e]/T9g&>-JP".fjp&t^k<V4P]B$8,a%/,9#FD_#])HXCP'k'$$Ls4$:'EP=,H##_Q!FPm'Y=e+6M51GHGKt3u5LI[`D.&%Fe$<ij8U=>)=?gaTJ#:SijRc,IGEICnIl&00+%pr1j,hm//%"aSq'<]p0oI_::d^B!nuU/fu!Spf.Hf)Ru0:r$:':Tb(H/G7j6MK:IVpe)8&9SCm[MOVNKI17$pJ=R`f(=MW;`?DVr%*Oj<8?53rOK2,r]]jQ:*RT%Vi0aB2TcP#O^5@O]6B)Y!qL5'0QPfC[EjlNtaTjQ$ch`qA?lh1[j;/Q<U^JFQHpD__l`.r8g'E<Kj%YJ]C'&8TPFbGTLmG+BL%]$bCqs5,XfK_C[/=$LWlYFDp\QSFA=gOP^M.=SZ(78Cn$'<g`(MgqbOef3PJ,A8+IPt9;PWqT;p/AbU?%jm'XF>YL*P(&@MhYu>SjCH2rIhmg7u?0B%_/33<7kB2&Cf5U%9jp&a)3q,=-UAOl<dR.4;!AU9\@NsG%Dl]6![60-"F]Dc]UX/t(%S(4e-+/W_AhUPQ*h0A_$P3i#.E5#=@FU.Y'@'RB*q!<A/A,2%;o"T`K><i,Y([o@nQjm6n[oY4g(-B*6[Pcehc@)Wkn'gIrZZ^]e%1Cn[5-3(%XG($+oL6L5+?N7RLDZ@p:/Q)#`c>$D'26$W<@`:Pp)6I`NQJQI2s5o`m^OLP^0TFUP,@_XYNAfu&]<raJKB=c]?b4R`%Zd)p^pQNrcC-4AWC9-R!q;[r/Cf,\.#S4=dobqqG6-%pp30%(l_YK:K\s1(=&_OO+MuHedrF31f^2-c<f>Xf1IA9rpMjH^oRO%Tl%D-\g;Ar=("`dP7#K7YtdkV<P'e\V)u4LL)+m'!<uYVdj=E!1Nqf$E?2C9(WUhYn$GQ&6Yud)QfKjVkR9).*04%;<FUb?MD(NF>bD%N8riqr<NMM*f6Stghp0YXiDnBld`a(K%oU#lh5gC3Ca[U\a,,$PNuC1R%,4#O2GS3<GVS4.t4Su[p@e!^26q)DsqW!rs"B/RY7tt%B8b'/MS%F8bu=;4<]k1\aq^F+gT+W;5!:=X5pto:rUpT>:Qf6dCR'6gjk"9B*`BTeg?ilGDE;f\*imoE0e.OK[dIT<D*9f2Yu9-L%>9Pb-\T$/][q2g4!Wo<9#2HMi?!MYi2ZbJmA-KaC=FGkm[r*:Zm].LBkc)`<`UR-<n[R#K<EES6s2_0p!e!Bcb5^_e4pE4]j;1<F%jB#<.`7IS\-@UXm6-Lb@&%`B?F\L*iL+?>=X]kb&g,]T'4J>tjBN:0LG:VF5Vu(gDiDZl3K'C2%:(a-6Ifq82m!jLhY8,eWH_&*S%QFsfDI0?(6c1t]hjVql=XIlXE1oaSjdR)4X;nHcH"'emqX7`OgAf[rC.%-e!:TaGKcJDU9$+/F2`a,eTa*%:#VL2@Thl=*c;nJ$i%l9,c*93He0Z7s$sF*h1EWBU<;"t0*o*s$^n24E.)lcoMGkOok^aCAL%iHc`=I.=X?3,c1fN$a1l'ui.h^aU/FXQ#hoY2Rg3M5C0D%0!-'"1bQq`2tr/qF>^A"lINeJ2k/@`>8/c9KZnd79P-fU4BL7Ujht(XX@+fu?E$!no]!mL;-k5]iH->eQ9>dIGGGkBMCU<F)d-FY%=);lYmc`q*I(!SC\PS]bqsS#4p9nX%.HR]NFeI?07"f*8@np#NPZ5)ZVsibjZW.3h$<St:=W'@C`MCFc[F3gAH72G^F7o%k?*8d=%p<QnuUZCHFZV8Mt+Pk>F==sNQEENc/`5DlKS)jmR*L,cXmoAtjgh>Q/J*&0NO!;H)9=7#SemqujbPdVZE[p^+J+[_@Q#N.lHE3Um%:)alm7D%q8o6BkG=)R!eA=#&:3jn9+AZfF-:*9%fHFnQQ+'FcF19IHI3@c>RVcNW-p.t'>@k=bQjXi6-As%E,VA^p;.><9cgN8[F%;<D3*NMkLuO?BdgXe4/0>-lf&@),9E^QA6m;&SEj\;H@r76jU\MPJ2O<MN3<<lWXg_"CVZb&j_22?U9BHE(?6&dVIJ>-CTl3S`^W%9(?mk#&cXQJjVqQI+V[USknRan"!6d%tm>Wj2\:_W$E:918(u'DP]K8M:0I[]5`=-UFdt$6$K]nC>YA]\OFr,Uu:Wl6`_WWLJ*i/%cJpc+m(T'<:lj5=)s>`YC?StJj1sesqZ$gAaG(f(HmRNF=P:ER?*Y>/M-\lW0$A^JX:5?Vrho;H8#t5/<pXJ#=9hT@)n`>]DK"gj%:@gYUOI#T<pqa7>Uk/p[B9oU,/oTJTeI5<-7Cc)5>m9t>W;qK(S>Cp)ahRnd]WYWJ7Ds/oG/Hc_e])?j!C4IC+?P'2Rf=$YZK%e&%g/-Nr;'02)pXR=PC5+.'Tc299)c>\-E"MK]`'WF/k,AH@f"Pu+'Mp^S7(UF5^so=D.u+V66[o4S\ZPnQfQO2q;[Lb7VK8DOij.9S%AKWp2@"=j`$'D!%+=(ul<Q%:cd]/sZ;N!b=Rs2!uW,iX_7\-<U1?ojUePR\#q</fj=uA#0=7Ko-+1#GOf_j-qB<aOt@h0tT>1mEe%W`H5BeY<c#JUm-b$=FaVB*f::WUaDiJ(IIJV4KYA^oe3,F'ZHV\%(8t?*r:=0qj%aB1goa,+P%/[jV?('6mX,Q*MT,(.1;\kSTPM%IE_*.i@@JVrO'"1*s8"BM\2P^f?nI=Z3BU8Rg^#WgpHK*lj#)l]"<BD/Z#%IgL@E7=<c!j%>WQZf<+\Fju7?m%:sEk_a47*.fE`%%7=Edt`.7"2-0:uEE$Rod3<LnbD>in:eHQKXc7%]g+6rVma9tY1N5TfPW'uCI+cN]ZKu7s^X'<\XohelZDPP#,b/%lH9k$W#_KE!;%$;NFJ7.+'5s(Ku45N1"L(k(BjX]>E?b0oS)U:77\Dl67?pMEaIoU\Yo4d@pP.W#Lc3c$^W?l(5oZ?k/W*_f)9Ft_SXm99="f8A!o%2FUdVm3\g3OcmE)XqdkjCqNuc;6JG"j]X.qG!gD*Em&>:VR*#8gNB7(&?cfnhQiQUq1*oqp-0VbD\NZ$E/SL;$/"NoJ?>CKfZm:.%FtWu7.g53\/(k:2gV"3'h&?CL]b7Q?T7H<87'@W-a0)b-$L4p.k,T&k7oQm<OJAqXX6!mB\[*qF+8snJqX&k_,<D$YV9M,uB#I6B%>NlE?,^F/L9aApTCGA9[HfUTgO`/Gn8HuflC$ko6nXlsp@!&_Y3_-%0j!mFXWbsq7`-E+h1=>/_X$iaM2^BgrZ5ZR2)"e(mh#fI1%*XU.bCEPQ6oq"]]mn)KdHeK#'%Ri)ST6c1S\rhU$$Rt;1Uu6D>"hb^Mcsm\3S&t=_lXoSrH9&1-dA*G5>N$XE=%adq[=>7MY-b7k%Vd6DPg=:MD?*,L.eU!opXXDiQHD+WHPBNKLgV25Hm:r2L;qKI.[5'<mm:s>]Y,9WbL)P?fGcJf3?JG.b,,W[9Se8s5EE)n7[eFn$%^4!YtX[HGRD`[h;@H);adhY%)$s[nFaCg2eKW>[VTr]69D/XdpH4>9hf]r+'rS=#NqK+`qbt[Y$:G;Z_S+t74hS,U@K*UjtDtMtI%\b*/?])KV)]\@c*@A1:36T\Q^Sf6&c+.SrJPNLH5aR%^WLI,]cHL^FjaQ3=:Iq7^)/Nin/UHC=11k.>;ZZi]=199d[g>'R0"EeXD%XA-F<>"39<#.K%o/KK4G1flihF1sUE?f'(WY;G%\VKNtDe[@)FCP>Zm\[ZUh1@r$UDL'9@/UCW>5F3m[0@m%\k4og1rCc8E@qB([%iC]_GEU0>8F6rktg?d;ok\o'ERk@L8D!q.0J?b,$]<,]::$X$G1:++-=[tT6E+CQ(df*d)CYZVSY$^MEo0M#Fo;gGg$Z15ddu0\?%YA*"'0'd`C\X'^=H,&87JtJP,;#>>tg?EnSle_I7jA%YiDta,&[rPrUho>A6$`-t7@AhE<c=SN9e$gP8c'D[N-?jd7T3J)1r)D<_%TbM\))P>]P:$L1,3Dge]h+6t`3^(k?g=0G<Vk]MmVbe:Q5>:JmbuLflr4JWLWUm-3GdOc>f'.Bqo@92fYZ$pIdd?2`o(_oiq'6Qg%kJ+$Wkk&hA4GI26:&FpY3X&^"gk`,t.8]S:j4unB45%0EjYL[\Df$CR[2L']o^-KA[8Zu%@'gqt)H&>7>A\h9?2Bf6C$!L:O#pr_%Vlc5fAm2*:J?d,IBd7o+Dau0Yj6l5F;Q%d;ms8\g@d35p;Q!^;hcL:KKjLLS3d1.pq'NXNlh%5Yq7?5BEMfLresk+Dgo$pC:(&@b%F671$AZj=Zn_27Y6-;kkk*iEm__LM"WWTs'.oT+/o#Mkol95tUn[\)!X/D]@e(KR[Vp<]Xh'_W4j8?%mRH^&LD>.ka:?o2_C5m-0%DRjtphE05(][OQnk&"k2bBFb<.k.$\9km2i[2*nB1_rIJcKtAPF`""Hf]gf&d[S`]pWp>*XX81JP2A<)dlrb`G_l\Ih0ns<FE;`p%-$K-!=)XmXHFu8IGu'tH8dTRpd69^^b:/u79n)s4q>3cnVk9;.Vij(ER>fs.>cb:sV]bcid_6cMS4r?ms5<%kanjbk`(n(UbO;E/%gg<,*qJ\FmqBW2lMK\OhpY4b(&!eT4B.L*l=JsLRFh@0Zek&03[l*`%?ea[;X/#(,.+9_)T0AlMf]dJ_di?#H1\pG&i<$O[qXm02%51f7%+3$^HGQ(QXVg5E3mG$-i0toWP(%&B`Cu)aNKq6MDSO+tr5jXe,c<iRHk]FAc+UZO75'ORpYqZnZn&S,_@%9=Wg7Ed161<n)%oUDt:GL-_>44bngO7cY"p[p3'[.4q"[!B8?.6=#L?]NERlZfi0qCQi)/fjEK;Q&.Tch5gkbJ$)#`(m]M"Rl5k7o.k-\"Q`q6TR/-%0'gR,-1c!Edo?oho',]4q7FT.:XtT:g@k>a46>`%U0_[W^.N\Y.o;WO.BSW4j3o7[ZZTDpgrc"EcTB3[FR/+bgrbeOesl*Df.B)X%1g'^YG2(I^^UVCn[pP1I++2piTCTAfAnV"sX&ef?*URX9Zo^Ef5G^Jd0(tVJT>jg$mef&7G<a>!55"Wak]/%.AeHf+X,R9u3SXAZ%H$rp\gK7-pqKClIg=srsZ)7WBG#tS*O#:iW;eg6q>c]q-c]b!hX]0a$9U_0e:\R)hNr5r#Yq_g?r8cI^fpX]pSj*'ibhgm_jJSn_%&"O6]=g"6EZ*.)=!HiV;^A.Xub/8n1eIuG$FN1GY@B=XX?YPQBe<4VId(]K!s0Y"YppB\hrUm(FOo;,PVp4A@`VW!D>^emlJ^;N1%c]-KBKD2DWpp<Bo2-2CO=sICpf+Xc?I@m.!._Qku:/<r*#1")4Vj9PC<Q!OKO-=K(",lW1K[ca22>2s(QaZScE%Ncgga(?B[4FeE%G2DF-1[?,HO3E"J#'T+IouE2OZcOTmG)5kTg;rX+"mA9#G:ls$>\Mp/BTACX^Tcn34g.$Zk30o#)*;@TrHK9'qeGPBiGoPf][70B%GNPW?ZT2cZ0-&7E@qVm:DS_779GINq*n],U*;a]Qme^b.f&V+&Vk]MqZ`0L1PuZuiV,QOl=@mZ,bsg9%Usme2)4bZ*f]erEDDk:C%:/04jP]"1:=21<(F4og?I2'M)eP<6A0bqCjQTlmh?GCsf.dRjqH#nJJ+*JSj0N-Y8Ei7LQBmQ\PPoD<lQ-jKkG"Cj3X@]W:0%2k`%VKRjNpnfsA3`ja#;EI<qj>[U^1L[2_>t!kerAqBeq@)R+e3/3n$aK_RSZCP^X'1JV;bE&k/<&X<f6k0>.k/mJk8[%9n*cQOX:)FK%-Dji`XaR'qppPqRh_lWI@Q*0>c%?OWj1Q?#Z(ri:)tFN5?"qQ2;#0AF22K<CZSaK*lA&@Vk^6n1ET6h)ghR&KYKm*JXdAP;<RAQ]%bfqHH4YWJ6Fa\#t<s8u"gdERa()Jo%ap1JW:u<%K/>_jplef"(Qu:ioJ0A^slr&[(O;K0rL)AT00SB&_`Ck8F6(ii(c/V1dq&4I[%V^^nlpa(>bXk9:U6^kW82*XGMN)00!:b*]g5[gn9VH.l4\g*b05,^Ab_Yf_lS_^+;'h[a"l(`R1T!X+.qO(!K543Pt^R75N05(k>%NHNMX7f-dI)d3!gDtBn;F6O!6)3'&:-h]kU#J#W2dXI/T506H#+^G6g;^nc@=3&=iHGY%JhWI3t*Z4L8X_bWdZB,e74f:+/\EMU*%?[Ga6#\G.n4bZecebHSHDgZD=##1K,#i+3\/X3P/Y1u!$BP3?\AGZdaS>f98%btoo"hg*F[aVd-13I?ofUJGfSu*:Z`>I.gYI^M*%2=jYu5dX_fi]*Hn8n3ud9tmK--&^1"RE+MLd:GWn&n^0O]c<.g!?4Ml>cSm2?Uo6]FdX"(c[QU3!e56?M"rbinKi%=INK-GN'bY8%)3(b`cZ1k.g_=^5`!<o!Bf+gs<up,qSV-C:\W/)K=pYP4XQ@[G%"F)@dd,"cEG:F[/LP:*d07K"+U,uESNn.Ed60XX2WfHHVAE_%%,"eI,SMDt\\$>eKJ!W:>RFR,s/M+U]OgCk&47=o4,Z+BJR42qCMOmPl`t$-?.2u2ESM<Hhf:,X:Wbb=^;NL-jk<8L@4XK\`%/t8m%)d,/8\ZS<j7l0k]E'--[3p?%qX0a$%$f94AJuL5j&@**Jj-_rXA-KTEFSXOl)/N<MUuXf[],n.nA<3cfb1g#W]-D)rOY^ul/</e=%T4FnN%09s98NS'7U(XS@N![gr+>dU$jE*:p\8EIjD"OkNLLVVp5E;YTfL9g/$>m'g]@feVY7%0:"ZojgfSWnm"*!AHQLXW^Ff,I3%R87lc=0fM=$?7:An_UO7hs:I##i2cg4.D!9H//`TF'3=566V=qE\(.TM&.*:CJ'FNkp?T)$m_u[p4\]JCbH#;D.M"h-53keeWUBA%2k-=u1]nP<,_kCW4<9T7:gMfhlg<Oi89&B\o*Okt&)ngf6,3mJ9c[-*eC1)e'EA/n.4k4/HUn2<k4cGgHTuY%9CqWHZ;FrLM=gIa%W%6s"B1+S%e^nG]D>ht>6WCj_Vi&*;pQo]'B:;QoCKp\0O.PL,cU.@@>]8e:nPlhb=@n<"HN7S>WZpL#69E3F.*(t(:H>NEmbXda%E<]51OC\/"5YiHE*_i[6hVfV4a6(cHd*3uaiKAU*lL0n!HZtZ=',,ZI)^tNG2kbF9gN"D(NJD^]X`aBK:eL7LjIOZ0V]7n365M;G%3Tg@MnffCq/_%s4ZPO]SR_K'2PNK'*;R.K*,G'Xg.ZL.D>#^dDM6#'%j;1EKP\IB,oC$&ZM*%\tnT`L.Uq19W&_oP;7(5H<C5_bl%&^J-5!l+*?pV8uVI/a'M4lu:XI_F.kdW*CQ0qgolV=2>\]tOWbist\og[Fu+9X_:3d(.]'kd$!b\$pc6ct-?%Mf*[$'@YA(%@G\f%;)[<CF'Y#n5mS!K5(V#Rg";fV:.=dNX0Ak>4T*&QQL/V0`jA$Cnf#WTjei,nPu]JHb>Z^]]!i>1,^UA&GU?2Q%*X:Pb'DcTYK5d2%g?EV7;saI9`hFi64`-pUo0M)mO6U_K&n/[=@A%]&fS7kais!JlG3G-=`g<PjS:&P;8k&\0P`kD)5b^t!8@7F6-!Ham"F+D^'!69m%5HW57_'_(*Icr$Nb+'hMfU+D'VR-OS_U7S?]RQFsdJDf"j5)(cP4+"V)-imV&*N;Eg:9a;3a:0MmGg2NT0fPjlQEK@DmWIO3c]>0%XJ5p0V&7?7(r2&.Z(S84JIabMY"h0W)UeGBjC('4KP]RtmnM"mA%`.Nir)h2HhuBAoL#.:IuOE9$Di:g'F[!hc6m&3[M)a'H5[7:%7CG!k#R%PuW!RX=]Q\3?ST@\/o#/u[C90q/?e/OC,CC<Th=1"YqL+#fc[XDM31.[?(06b2/<FAtG=-$pO850S(Ifq`BP_(Kb8RHY%D/A]IluVVJXi+N3o-!mXU_U-N%^_.B:=ATp=t,]I[ZbJcbh``(KW1"")2%:1Z+U]9_Ipa!;"W0JqpJP*'$gJ%BeKnh8i:iC%)YWd%"^kTm;U*Sp.Z#[^4Vh]^FO;LXBY%(g6Y!YD15D_7:"e@8$CS1XMQqIVmn0mm9XT[OEq4M,kp`h<qSuc`T2VP5pMd_=OHQ#r.6.W[%`AXT6_R=QT\h0cTP>aE;b>s@[Q4g`oDXX4;A*MH=R=i&c&mmf4bI3E$L:jWS;nq?sMm=ruS_daamG(+b'k;Oea_<+)d?R*lNeH;%%2O:(HXHhs(Jo?2a0LAdd`*A<gA\!LNQn-gOKb#S2(cWp+Tg/5+//',Fgl\"s^Q(!(DKfXBS%VA8TIZ7]P=(\-6._5Re7T7sFp8sk%YCl#bAS9A$AIJ3p6^O?0(X3`^5DLjQK<A#h:(CQQ#$icaYjWRCljUHlBfJ+pfbnlGh(aR&]'OI%rA90I]'KhdeI+<,%UF5^S^>Eg%kKlX"P1)52*g<tubS^-I9VCM)4UijbdsLl$fe%/iiGp,4^6GAb%2`5ppps*dBRW`1i9@J4=Ru)?^;KL58@+oWe<sms)/2!o1Dt!i%LD(t[`g>**beWfp%CUWG>lOPa]CAO3UrNsd\dp5Qo<F2m/7V5A.<F\nm4i<-T<(&D;:moBgXB@.<=bcGbkl+j+Q#)3F#M(DUP[)\%]hL(WFUt3a\gG$X,9_DT%*JN[:lhkTG"Y$-M-EPWPMQ'B"c5iE5YT2.Y%jDK2++UI+IdrVr>lo9L1#SW\iCcoZ)PZXnq>6-S2.-+%HBK<.TGY@ra?'el(:96nAD0t>WQ=,CS&3h6[]^sIALmUZgi_3(EB)e=-Fqu,8g*Ef`9PW@:[Cm"!i&kOe3'tAG.'HZ9-.I6Ws`sg%fj/Nn7Mr0\=/"(m4Z.)]^%<pg8/\FLOp<$4Po^#L/7#FOo>eG]_"Wr2=3l?I^oJOIpq#V+U_?*@LK?<U<$)T]KdRu,R45g+(>Vsp%`7T>OX/.2&V&tE`4@p^DqScRdn`r(p!hJ&'XdD<'VZCeDeMVnTY^3>,1*^-Y/hPKi#R*t<k2St&5ItfXHYG$d&Q?b\lufg]1Q9#3%G=3:KVk^F#B`cbf'!2r"H4<q:"Xe&b>b<OrGqtP#o;&:oFm&_kkX[pIN0/N<16hM_F@/Qak-C9Nb*1b#-i*C*j(mtd*7Z:C]4Js%%`_^9MO3I6qpYrXF0U8H2PaNY\+Ec*gU68QM07=7`<6FO8#kYB$4LHR-Z>4WPh0>X:T^q(kIYndb!L[A_MZgV&`ha.oQB.!hCd!&S%159?5[Yn^.f]D_GFGio?OVF-:V"hP`QLoC'Qq,.9o,kTsFEou(9DZrti)+7XEd2,H1VPJR_o')P4>P<r#5"JV_5EUWOU7dEnu&2S%mZC)^(A*+N)^)5b<C]MnJ,+B'G[s_Mr.p_XOnLf!Er\-o/kXD*-*dBtO_?rYI\_>GGTLGlEG$+KM+bm8G/QWe6\E'k42Z('d+"4&%B;7P/Si!g.akh[2@f+@/:9MrtY3BH$d"SiC_/=O@]u;`R7]>b9NRuA!Wse[3bY7!`!@!b5Qi<-tQ'1`ml9Wb"`a`HC!1V&iaPr2^%d.R@/_oRVnGaL+$nU^;jqK`*Cn+gqE;:*5+LDqX.20V5hQO)+bjhm3S*gd&AjhiCY&Mu@/Yhsi<GVkXIrYo`=>f(hXZ*>J8_rZ,9%^_$(qP]]hjqM(LNQXG`J*:'7FV;DBd=M@l`Rt,P"7)iOfS??)YM2CSTP3@u$NsAIa7j4*Q'!c:7=cpP2:O'.8R.8tTBEEU@g)2`f%Sm1HdS!.@?]1]Nk9SZ_4hHB>s-6"9Oj^AL#Fs9\7$%pu^Ou'e+OqDi`/e"o0bJl`BF&%T494c##o@#nO8RpI6i-P`GGksCa[fKDh%=_sJOHDPch?ph=:@);s%Fi3UBT;O'O9e/*F)B4UK@]%o7d+"pRhU[K=S<!EL&CsjHc8)>`N7?1ka@JJo4iE:YBP_o2WTV$OOHHQ(%g;D!&XcDhoA@I^T,8JoM88]pQ@_(>FdWIC'k#8H$WVKm'Xd[2MEIGbJ))"_O296'\W&$Xme%pe1'3u@tT3k6e_PPD[Tr,]#51VTc%-T]@5;W6'TA[n^Y"8ONiVo&+==8&*j(OHD77IsY[i=`g26ViD/o8i"?cX?ds,77oK:X2LYM?ZWDp."he5'Auo(TLo\R<0N`^O%Yi%!uW&9^5..:*TjXBIE?GHLC;LGoX46pXs9HqciqYalgW<$^#V_%NX[Eb74@$?K^D'MJDTn"EJ`a-<Bn&;e,=:[_d3:?q/iu+f3[:h%BRX0q=STCTV\_s@X)m_nYJ7*N4'H![55Me9pce)\\'78g3PJNS3Nl[,j,9\uX:pc/=7IYf8k=-[?W(sM0O]`3&nSB'X&#XKWr"9/%!k()'G'9=?lunP\FbVjHknt@^FKK^YVp6g*<;UH7Z<NY(]14Zj;nQ-m[8X_;q^*m2CGM>e(JAp5Zjik\BF5S^2'$cW:NjV`1@N[I%m&\<f%(jnZ[@GsM<nVbFR*mG?a&fS?f>"40]3Sqn]8\i8SSl/kod/t3j$(3*_<kPdXj[dukhY.lPhIS-Z&Ob'8p"(Rpk8nBS%-`2%Bkh'/=#k=rMj7e$M3l`+:X-*(BQ8@4dG>/<:71XP'j!dj.qq+S6X@lm\aLGW)qSHuXnH;tN+b@EJ5a23SqYg$2$UV`/,N?+*ALX[%K3IRR:RW<e&Ql5(]1FX>*kB45WXO!5>`W4$NgH@1SIO7#PdE(3&Was)AR6S4-*D/WQcQ#K0BM'"S?]Y2LXc""J_WfB&P<pdQWjF`%a5uKN7^r-R-\]1p]7@&RVmlD:\pjT3]k,Y=f`@c_DHPS68\&rbmtVc+RkDf1R(t?WB%&'fdLD<6fY]FeC8?:8flSsU`,hu7PYILo%<7a'^oUJXBACTesOaG3I90/tJp<"Oidj=,(`D/mWOA2)&B8O>=DA_&K8\XoFH6$$E?,h5oL6t]%PY2gP*?@U-?.,TEX$>*M\tgLg%heYE"2I4c-'hUWgV`D'IP1D9@)JYp]]$@1ahC75M2I3n33Qu<NShS`>2I0ropb&s_B@HO3Z/2eNOt<]Od'Mu")PGmNTk;b"2,G-9%2I4aF8Oj3e^tEg$\TDiWFms4YV"CqUaiH0Al&p)OiqppWflTg,Ltn:RP\doNR9W,#VG#(.bIEUOE!(&n@_G>;@-i?IRk?0[c31D7%(u>qok/`naPZq=qFtr@\lB6mdWEo.=?X9OPOUk5nDmkW:Bn3%)T(mI=`?HB1XLH(ML"*3ej?[nu.@2I(Fh:mSoTV0XNpbQFO\_Sc%:J$*O=V<%`:URjj)p./u>!r[0cO]K=>=(ZDFbXO(fu;Am]'CMP/btjIk^0K'WT:a"F-eLfhW6^=c?mfA7OD3N7(QXl"OE*(()Pd9%32(OlJ?_D(>B3tiQcGlrY4q72;E]mT(Z"2p<EdSWk"b'Qob%M"l4l(@Ni-51c+0bH>WqK`/^Im?rdCs1fBseS0X^_5JTH)XGB1Z3%!.>'VUWJ@7?*5^A:7jTlSpq$&FBrC+$b8#$dt9XNAu-Y[S=p(JmA.>mifotrL+SRNSbY[/&#gLRo"1UDc?h6NXk^sN$Lqf.UZ"X/%*=XeCl6p:%<0tD__hYnKf-U$.Eo<](C*iOqi.Y'ImI[mL7B@bLB2B)6<ar?r/Q90+A/@,S4g?p*#53:ND=EElKlaD(04aP"q;2O8%NNKU8ddY\-IVd6L'cF1@?)ae#<L\l>1<4gH)+k$HCQn8oC4O8VC$K/aVoDOTpS>B5glsb))[p_i**UAEVabDF6SH+0]$#6D;"r2S%2cG@/'5O.W.IQN/RbI!XT/5RMX,^6qpH,GN4c)=.`"QXBlpQRL:O#b2Rd*FS)#rDL1F4Cf%WoToQsZ8/a'E%gfQ"f7s7]RgEl21;%2GSJO%3tIaI<nFCj`P"(gc+=(,qg_7Nk:lqQ2#+_NkD/M(JXUN_d/W+?=u<I=P[o*bPP=]$rRs8@[@AP8@Mps-e;<g0=p5](@ij(%<_"eV>m<<Jcq*<Z&/&d)Ij\g:p\LI3DPpQS<mj&RTUd5Oem^-bcmd]bleYD5Hf<K$)WdNOWG,%uHcg8&i985FWTa)uf`X2q);)-h%h#!E:@[W#jO<]VHU)C;FU:XOZ1o?:lY^C&pZ7`,2qoQXi=:/-$jDn2^8Rf8E`bbDKm7L(EbaZNbgaV#-\,`:rdKO\fMBQW.QLgt.%j\cN=b-NhA&:7P1GM,W0.Yak#MBTrEoU=gOHL`lb9ausJXQMOLVe1U)0oPUofJ(>)G;T$X5fTZ6SWj$90HK[&>n7`,mhQo@]#Vu0%D0`[tT"@Y&e''aE`Nl)AEa2!"e`J=tZUt,;1pbn>Zallu3(<;rP'^@\Xad=?IU)oYd9L#2E^%3A>:j3aXf]n9?l8(SUYL)dpX.q+%mo&Kn[c>F*Z_VuY64&k)c8%#`HU!"YP#<PIDYhW.6!=nmrH#"2G,1hSjClD2HL>-UZuS<rg8S-K\GACgdmAo[@8jMNigkPE]&mn]%=#u=QM)AN/dk/O_&\mPT3r->`-7/D)F<WS"XnhTp:JAV-N"L[!^3NQCS;X6&`GX:ccL`Y<oC'MOpgE-mIuTL2;`fE@>Pi]:enH_8%;gIi$\,ZFQ'uAVDrn1mUVqtJ8o"oXLn#95s7t*n..0`&p6k\X0a6G%=H]qW.`*1?ucZaH<BMBOg3O)<H3XJEVADG>VIE1/>R==/W%UtmXRCiZ!%/f2.=luaOkr)hP,I't(Z="nZ>8CCG"Ich^aB0]u9Wi&[\[)=;U@m^U*3a5AhXGZj^F*NiXa5\=V3L2;^AsTdrhEn7u%'#<LFT'SZlX]pIULkEr@:Q632p)DbmhFkq%[in131P&nR,<^O@(AX0#;?>8F`'*Za7\&$bO/Fcl2CblPNK1pBdi%8]biDI#I,aGG%7c*1K$m.%62f:$^NSD8!+&Y#F[uDQ$o"`c##PX:-gDIeS)e%!TNi[STYB?J/j`p.U`\:^cM`H<5o>S:E/_F0OPZAk*==e.HdV-S*%Auh]=flPFh@4mP;@G/^^gqc"A_3NN;3Bg0YF+%<s=aTBd]1R+s&]V,ZQ(^-(6imWP]>&J3Y)fA^in'Y;Rq$AnA6unFSLM)_ahGaO%EtGKlcT,%^PdcH-<Xu)bs(-SOQMR2**87n`UlIF2!E&rnniedn1\RE@oMiVWeh<2!0u!-kG%eh`W>s[e#AS'-a1.ks[2FsH^&5>U%N-2hk-iYHO@:IG#-H<.:`]DP%412tf?i%kGbaS\OO6H!V5qIfU.Gq.fejS,sj'4Tp\GH/:!QN_E/I,+/;!fJ80KY&bj'8\3/AN+%%Ufs.VENj.-1rtZ&N3Ri<!$b."OTX6uA!Mq36#P1NCuddc!7Q];op*J@.sX5tZ\iHm4^Z@`duA0l?cj1u/aKr"j\,.o%0'5>mPhE\%j&/(LOiN60VpnB8kTmFB)t<^6PV:,d2uH>E1@I^Sg801Bn#m_h;SIrg!=-#JSYln]i&FeQE6>;3_g"*ShWm+b9Wk)&)euU(rM!5K%-T:W0D4>dR?aa#a+igUdHi7DQ)8"G&hfhH,n+Flt$Dgqc4l5LkZ9mPO^U/2Pom3fK/kR2[?GGjJ&B/]Jd(Olg1:`-YY9.CtV7CZ"%rFNckrN`?PH%0CTp\JIYlIXVs+:7f=APX^76FHQ7r=YGGqlT"/h!::IEL-/JkU:WFVB;W]+":CN5kk+dDfg*D1PC,RZ>]F%nI8Hs%p\JHj\g^M'4l>Rl'K$W^l8S3\Hpbu#c[W-*Ft9rr6b(`$q`mT,kT8qo^[/nlKT+Epme'4::m&6``GT>Pqd.%_0KA`+58gBKGC#.V%f.U?q'k2Mk^\@RNT$mfl"C"HMhs6ULE#m1omJgM-8H)Z1XaV;Z\a&cm^MF%q)qbG/f.W?>NffK[EN`aCl#71-nI=t'O6D">KBGBC%hs/g?2Fm>OIb@60l-ZrQh<UE0a`Gc)i:m(Zhs*.jXL)m8)26LXme+aeDiR="oR!cKp8rcGgrJ#6O@IfLHiq,W-b.]F./37S[A@rW%]qP%(^L")&Mb0;Pme,m:[YW`((M!p`GctI>?AZ/fookZl]:+pU@m/]7Q_ii7rs!h"./3QI,O`&;]mfeJ?3e0q05)Zph<=gnldo@b%<PlFur?oJf\,&P]7oiENHHpfY]%&Io/S@6&l^&g9KGr4BMtMA!?Zr)@LJOnqHi;C@j/d,8bFeA_5EV!W#JSfn2nQBQHi5.?X5d6q%6)"V7Hi:6!U6*jGg[/=^CrJ(f8K@5+^[-X+E(:u9?GGi2r=\b-^@([;;M&#+)90@=H$,Ljme)L@AGfKCbj=%)me+c[*4f[#k.]G#%HZKae&ft&=419oM.q?Z506B[2`83"UNqmm?]^IAR>roquA`rEqqe4\m9TE73+/5YlY9RjJnY!J+82(8bJl%nd9S)b6B6QIi#W'=e%-I*s17V:i'pWDX$5:-d*[[Kpc[5'L[dsOA=>FL%YIbqD4ChL?PF*k([<#skrH2c=Ag";Y=OmVl'a@bR3h!!u]B7B42o;hQ4?2\G\%]_:r:[SV")G(3l/GLsGcbBMk<J*tgHI"20Dlh@;%rGh#@dEhQrpW&bEHV^7d2CBk)0%QmIJ"><.%NZ+Xhu%_hrj(<sQB!<3Rn[s?%A@,3Lba#Q?T5Q'kls>+/p8@X3(4VB.lltnblKc^Wder(FeCVsY&S(LlIeq<S[B*B8V+%NWnT..RI+?m$2@oM22Oh0KZd#D?MrUr0%RJfdKpk["u>l;8i^#8:MiKB-rg7,P@ah;ArDVi&nXurX/$7)l/P[D#SC9N,dXR&t'<YhjT.j4X/_=?(5+-Mb/Y?OL]O2jL]DD'P3%rK5G'44?cBjdA;\098i@/tEuBH#N+P98?$,n&E*aD(f#jlTJlA8.L>b3o?<IG@1@OZC%f%7P!6",L+uH5foD/q#RpiK4^@?el;A=%?Fl3m<`,D!rmoV=C>nTUiaKqL0*'rf$u=nplL.NlF7#t"C#?Ll>MV!AQ3"GgDY_?Ca8M8TkPP7cD_EYAr36daCL>u4g7juRX/FDc%bgpm9ZFK^U!l%H'YKrH).MH%@g\Sq!q6u(+g21t-a2P#r>i#AP[CML5=lWuWH:FC)rgq(lILIGFB!F71Qj\m8F6RqV9[-2_rb@s^%+`5N5-KumcCq0R2kGRPl]s[+BDZD=e46+[sD2,cm@rL7RY?Xbmm:\_u/`/+ofc=eD\9HGRc=ln>_1O30_-6(YG^tpob+iJF3d=V)%+5AFF#Td[%KA!NsTCTht,gB<Gg`<L$Y\>Rl-une%Drn%XdB(dAk2X+/YW8s7f_ZR6/3W3$cE;^_%;u(6>:F7_rA5>$I+7[<*UdX+%rFHCnAHM=UH!f]#=3__mo3S3D`p6]1#P:qOHhHJo-Sn2\40;3&m2b#NnFY`L4Z+RWq#DugbH_q$Em3!kqkMTZN'I,Tq2P)^9I38u%Nl`&Kb^,7OS^?_.XO4n(RamX7osn/+\'rB9Ra0ot[D1^M]q/V9Ct4pNE\nsgq=Mm5H"cQQ<d$ZVrZ2]@1&5p>-^!nD-<rTAI;8k+%_Ttp=`ql$=SJbi6lG0985fr?da+f+.SUD`k2`<"`(ZLp(@q-012f\A!)-d#:VJI"-iZ=&'WdF:.6+$T=ng'm?08<)/`qMFD^Oeu,%oZ!em/Y(!q0UFHXSr5\0P,5e[=Af8s+:gei':^C?OjbImD!N[#Hi%]+Y4]:m;J5s-H?bN"E+8S7$JNOjG;b1`;ja?eKA:iE;IWfF%qXb`Fa%RB&Hiebg\+&We0\pd^6#Gp$FKHqH^^36].@)jAd3FQFho=$7qCP_iA.9i/UCQl!1l5"&ArGB:qj)s/O5p&B6tZp!U2rVc%_$=1lqTS`\3KtMIW^u[7k[WJ;%Yjlr#.4nM>[/M!2h@ZnGH:J5onks)c)iGcB@6[b[J'Q:jVi6ka&Nbl\6!Rn:ZCC#d:LLO*KQ%G%h`RM"@!ur':lrm,+a%9<NU<(ORcgCN[eP%5\;rdLg1%K&?0OJbE3sU:e:iUWLg!5(oQH"l/h1\=ICupd]98i^7Y!YT`:m0BM5SP7%hk3nm:TRs;raNN=2Go'c/=b_3Jj6V>b;tYpet_YESK=e*fSrM9$$5tpCuQk3ps+g+2!3AOB#fnQLK,/b8!#DIoPZSA+X[H#qKkiM%mRF*oOmRZ%Xs9<Pge$=3?4U%pWTDH)<RNKr.7)(*fV!FV`,89RVP7.u"ts5;gn*kn$3feqGTR/OM@WIWC&\k*\t"^9ju1-s&":bn%;tRuoeZ%#SbHVT@5e>NYr3[%Za-A@P1_OPO,?F-s[8cqbZ>BP@31>YQN77G:$-VIQj<Yf',nd:>6:*Ap]6J?6UL:cX'VOBSm]?t\%n8rgb+<gF[O-pgtP#,O=^Rpl).&\a=`6OP.>65,XXeP[_P,'4o,F4O,Is#cZ5f)%'o'!8e631c(!@9#=!Pb.rM:au$'1agKF;4s\%#CC0,0J;uP0lH%6I536_2PJK,<WfGp-T8fm1Cl/D5h=qZ\/i1GNYps6+*3GCha5fFKM%DU9uC'r3LpUn#Vjor1cT9DQSCnsH'e7#%+@MJ_Q&)^C9h_eBOMK]*]WLD>'.R;]cpZN:8sT?HR#-nWUJ9gC#khLtW-"H]KK=iI.RU40>#*3:9Cm@Mfu-i=hLn4^r=Cm,_=gQh%YpMf;9Z7+X-$.NCku-8>5Iq9[a&A%bRgb.7?JQ<[q\lB;a]pZg0rrDqaVUeYbU-5$/.\:-ND5-aefVq.AkP<ZA(aR)1tE2L:9$/%%k;:V#lo[mM=ej'C,EIeeT>)0O(p.`(#,\+VE^,qY$E5e-%)ItZ3JpehQZikc*P!8PT?9NdJ_6\;3A.h=qV@:Um&U)bbmC<=_PnhE%]r\l]2Q#./Rp+:u#bP8]i^-ghLQ0H2Z0+jAHggTpS!ui)CY95>2d3)i5]%$K9q*QWZ*@K5?;(X.!o6*AFgfrmKTRQo;Jo3eTCW_p%'5l'PT=^D&!_h7T[!0!e^t\BZgT%]11!E(1Orb<0Cmlh0=Bq4'lfcm([0?A6D)QcLXF<09Oq5"a_?]5US!t/gi':@iq'Otq\%+1-%'`Y'(]X]qq4A^@\gb'g3:P!aM-h$">E;?[bGjn"sTB=Sla:hJBiH!TE"U.^&X?penUrM+<C!>cCnAq.r%U1?%0SdS1"!.:\K:g36%lkD+ugu4Y=prkEaD=Q02=6-H5%a&09T'h>hq(@$i%L_`QR9cGc^3r.o;]e6,]\Tf@`JcH4hKl@P;ok=?E@rToik%A_[(\G;Za!!I%#Kn_<C3K0=pYPX&/'Ht\O6bQP$R:8m:JZ((aWCu22)]`0nOgCCW`FY%W_-rk#I@qe]p]PqoB#M4@"HK79u#K>SqM#p\o7p\IPVc<%D(l=[/utlIG&:(Y[)g$C+38pe94q>qo41UfM9k"KBqh01DgF+/94N?`G>X=^mb1V]HlFdnf`1\omrsWN6E[ST<;qBneXuS@rL_&\%lhYeX/p`iP_On@L:\V9Z61ag4[U,IQ]ID(,D!Uq;rOPj?enQ:Bs)"quY+?\Lolb>h34Eq8[_;(]la<e5Ffe1f'=#<a!R".E.MqM*%ou&]H#CD*8qWdnfJ+IRDeVAkDq@Dt8;=Tgs*]7YL/`>k8Qu+(sMg')0-MP:M,;VQ&iR.BAjcSf*q4j(?]p&,O=`)L#4XKV,S\,?m%Wb6Y'(['c#gY)%\LATZRY%+@r\D]"l>cu:5m_;u_nQUq.f%\O49&kj&BqotQ7AH3Sd_Qf@?ft#LY+L$5aV1->=olGH1\c)J1@sbb%"q:M&aiMD:FVO$5%R8g/bc[=g0^I?J7OE'B(Ir*'n'=M$YKB%HYb@fhRUhU_CG1%Q9;/GJ*26EQ*mU0$`tqM(_iCYU,f=6u#mX]]%G]#$>dB*_$(F99Rd,$c/G"6rp4[!"*EqB:8<^nk!.L-\'((I5ZLu+Rs[a=>sM0\o)IS/9@n_d))=GC.HSPkS6Mj:U=i9Sk$Abf_8%fr3HhJTYX];g[A+SlW=#[I;@4\.sDo"<N2kg"`,36>Q0X6^]_^p9i.TK=3d??6?=EdnV<ep#5U\GU2c8-!98J\'3UgpqfT1IX]X?%,j=`;NB^4K=l>W-.lkW1=F!dc5]+tB:9,?6ks8JE68\_>p20B@g/"VeY^5cOne@7_V8`%*DCci0'a=Z.I[EcCY>FN!`FDX$b2\3O%[?]e(Dn`FRFE\d-5-EC"'/pf0B2d]<P5.f9lJsi_=>L'MqQ@!ijmJ)5EO%cJq4Z"ok/R5n,_)kTINmI'-pOGs!agblqSh5VO8^Si%dbAX8-C4Ar`o^!Y<N`so1+L^5XI;ZI^0,,rAV.ZGMUl(`:j,?.nUe[:],OBm!FMWmqa>e-"CX\/#G>q,,q3HgZc*>D(_efH0a#:6%!i>-CPadFVCUQ]E-C6nCLmbNXQskjWq8unN:6u]X.EV*MO.oJD2_*7R\>*4@g0At+-,W/U:)AUWHgs%pj3p=85CEF&WoKud55R7X%QUecIeOKp%6`()?cJ7eY]?F.B[kmX)F:JDQo#A;;fK^R@r>iG`M[t2S/9D-DhGjk,GSLp:3TM3cREcf<31$2HE+b1Zm^np"?g_;1%pPuBt=0MUHBO@XMEdoR++_iOj.tT!2?"Y!i#H4HIRcg@M5/1)!F(HVB(m,JgfAZLmjXt1*UMDBT_&:OrL`)#s&ttM('/R*:YpQ@"%`g/NIo;W,se;Tr!NK,VDD9C>-``2<3W_dGi<[srM$*?+#cc)>43B:=NR^enb_O$(#.40\uDr^c?XSM_;R1;2_T>C;S)0(cs6"+-u%<+b@GeqH]mU*P;JFp.Df,IIaa=A?^C-6s)"`-]99N:<2;O!VN;S.sAUIe$'-Tp4`-AFXc=Spa:qI7Q].>YOd`k4N=[.k!AmR[4Wj%FEf00:af&@IC]>(O\hX/+G!kpQ$lmq25[$SC$g+34Xlh%D\<E@5cEG*@H'jU02DJaj,LSha(8C$L6E8X(@dJ^*]cb^.C4lQ=;*\5%LgPKbeU%tW#,[UZJ^u,#7nh5#3JR#<EoQea!N&^hAS[J,H)<;Ta;?mj8K3nmo]ue#nTe.K1Qsi/4,^R\V@'.cRi#DIbflk>Od@8(%R%sl);O`K$+l5UIa)]Uj3m$HC6Zm3S+JQ^W6BVD/p"+kg"-k$B&F[Z/0OtjBX,t"uURO>\O`GMA@6(tVi\5Q778Rk_(QE"NC+bRs%.?lTWQlV:6kK4-kouHTD\HsOSZ&U0<6)UDISO0<jBc'!m5mDp/RP;?pgQo7O#A-,YTt+j+OTpcSe-U?[]U1Bn"OY0.&DN>,6&E`4%-W*:PNh!Kq7NUY<.2F>eOUWlq?,jlLAfmE?b:WEPPF3-peRn,)*iqNk:i5VH*iqNk:i5I_M[!r-4&d/Oo/_N3LE3Bh1:\W3He>%G%_J^;"f$5)3/T'aJR-J@LG2D0GgasiWBGX9LM"^EDBOb/Q%+0O<!,Yp<0C#N=ScEV;f?N9X$GBGnBCo8ZhC;.>GU@o?kcLTXjdH$H%dt+ucj]G9-<U9Z9(>]`tG_gIH;86-BO:%fs5`TUHVai:G?`_grDX4pbIr!;\?IXlOrJ."7dIiEPD;u_?BHqKjZ7nR5MrnPi([R6A%\WpcRrV!7>gSe2Crtac0FL&B&]Y.XA065_R./Tl$!JAcPTJSd"`'^R5(uPR>\Pge3-i\aY(&[S-?OdF3(rBQE%L:/S$U<LaQX9ah%:XLZ[(!jU/`G;RSU#>c:;(GkbV-A99TeNO4Fl2`u.g58i5Y'GL^@0eV`/:gl8sLKPh,QoX+H9th4.D$a4[>KkpsKV4:tL7W]a)47%)0jUUhOY'Q:\[RO*)*"1e/=9HFu7GmR^uRD*?WX@\2N9\%RI]0niYA05_eThF]2q'Vg/b<%+BD<id#G3WdlePnoTKZNb;6=$e>>$%IT]0g'>udLK%PfQe_IH=(snLUQX.LLBES<VYUK[#2R"J-q#&le/2%'DD:o<u>Ssg3;HL#<6g'2*2I4caik-6A3^AMg_DJE/Y*s&D%"EQF6Ve23"?/p7&A""mc05J#>UK1cWmoWQ3o,O)>QL7RnL8>agJ9s*.BG&u#+sMPLR07MHK-@+iHNLI\mc^Auc)00`Q>"@DCuA^Q%K.gO:^hPQ,R'0]70>!Nda>IDQSlRa3SJs=YN<T\Cf=.i##d>GC%W+W=$4t+\oPcD_0F]Nf>l_DNd[!c8B[%;Kn\$>=F+DoQRXi3]%pnF?m!?KN:\[Fp<8%2`XkcQB"R?l-p*,(oJ%[59l?;8W:Bu[#fqZJTlE!XiCRjc>OHrludG:c*TVWecZ4K(a]?$BOCVXAb(US_E"%(F]dXBgCO`Ba@mcOLtUiCVE5qBDXrBVM:;.`YF:=oIZLE0_f)o2D)1ORa@bjP^Ue4BF'?)lNABjje7#Z:'Y/lj>tTtR1CI,mb(GC%1p)[9(GHfT@!b=3Jo;=@EuaVop2iHNE.>;ko2A8L%Zgr^>fS1IDE=MN^b@I=NKORZo/2/_T[SQ7?qFEI%X*qM!XNk/#EhD*AX@Po%@^Kg[D@e0V)A4R/D>Ud"<uiRn_*FC8b*^PAa5oE/FG.FDFEK>c9\HYF;`;h1,K;?.):4KmO_7cG"Al2S7%YsQoJN1Cf7?\AYtTor%5l)6^*8<1/fKIJ*(nr)Q[VNHB)k'&,"QIM.Qs*;pE\/@OB*,A%`g#VQ2NaEq$>H7K!cW^<7gL'lD^_C`=o16u#QSq-B)kE%7M+0o%#\*+C%,uLt;[e7dqNaeQGm4n5Nl1L7"L+Cc#e?[88uHfu0GoBDCZT==$mDcbE*KpA)?b&-f;'S"[Rk;r(k=BrO)QA[>euL;8ppPR%\]fMQk86TBA-`9bR^g7#IthV*](ie]iQ+`uG`j-h5e:Q2$9pR2APZD&;2%Pi$t5;@!<UDuV2u^>kF*"2`!tSorFd(lGBANX!Fe$[%UN.U'`,[_:iC91dm!YbJB+>2ggJK(q:P7X."/6Kc=4:!5dIp_aWQ]&9p>\T0d0?G`2[tHY!>5u&#]NMoMG+jpY`MVePihiUEQF%]%,ihB/`k2Qg_tR,:":3J?_M^*igNRppSdUq*)3Z6EA-&^+6NBKOL7guR(aI0[1bU+8-:<tB2(:`'"SoQTYbu/"\$QX2@5*AK6m/9T%0Pq.6C-OV[QKOaKd!dMa($Ka_7/=ZmdrlHS5;qpN^8h*aOAPaM@BBAl9,d.piD'm`bOeeG!$EiMPp25=[3<sIOIUEd$qTIb-5)PP%jTd,Jl_^B>2+YH9:n"3RK0mKiqM?U($6#W_e:*M"8C:GE*s\4N;T=71!i"'7+sR8kEAUIZ$nRGcoKbKGTTEh)&;.-'.b]pjOkNS:%PM-O(jP-i3qu?^&`f;H32uq^\,K^PB`M*s+o#$X1Z<U1=57U=2"-n73Ius=@#<L"2dXEa5CVGEfbQq`2+O`Zk,ONO<_FHs*Mon1R%':X^V0N0c1iR]ZaWTcSI5SpjQ!!<oFfb/j$."K"H1.sS(cm4HP107l!9c^!_AGEZ7(p&CA^#u)Sj+Bt'q8&)J$D`aBOJE$<ddUYM%6>R25FWs5dYEj1(i5/b49cOZb=[%`Lcf&%co"R\CO[]aG)qlIC&2mj!ZW%4O"34kf=i,:='[?6JE?\?qX]>uc"S$U:V[Xp?0_<2T%Cn%L^BY^CR6-$.Kq_duC#?$)N)E(4r;2b*pCeH.o_\tgjJ0bTs)M32LO<!6m"K!&'XpDcr-snQ;Oc5uVa!ZBfT]';/9qi+>2`.(6%QAK^CENt6C8-(YnKFen$#hF&`HJq1=$%5*O*n%9Rq_']1+O4O1jTD2;W'^R/G9!+m+N5Z.W2%e[&BdR$$6b^HMgE&)+j;dQ'MLqC%Lh7bgKFj6E3pS=HbSAZAPD.m(X>0loS-Y/'n74,kn/,b?W7#1;Y\io8FF6KO1s"/N>U!(V*f+U_L0V(cFpUsI:TFJkBVNl_&=`;T%*U!c>5!`Qen;2N`P@sgYUb*gRBr4D$i;8*;>u3AQ&5^VnZ(;@k1Btc.[;P1<Dg\d"2F/>6PQca;o/t>q9>OeW3gVTuD@dROe$`o3%L%0QGEr\[U"DlX3Q#5AV9nro_<:5i'!0lHK3!C.,gZ,!f2N&-e-\Q4c`"<%q1.)>u"/^&)81C/M5_rk5DA5E0*nOnhk-JI7em4hW%%nL-RF(oqAR@GZKI*WF=+et&3&s#Qa-*&7J,*S@Eq,9V)))U**PQIu60\L7d_\=9&-5@EAkPd$h:2p\MbnsDPo5)E#R+?Gc;j*l>%eVi`="*@$eWig,gN-.Gm[*JLe88-B!%2-3(#tD9,*).5984/RHXUS+.KVUq(!hpEm)HU7d49q]1<^XffM-p=LO[K3oN!<Zg)l6F4%J^FR_I8NeUJCH\\=97DsRa:i"8_,W;-UVWj#XN9@W$us`.@;\h\\+\ffLGE:jioNIr-aWMA\\uKS"L<>G-_Tl/rrq$S2/qYS`_3j%!e@QN!go&.O4MK`c3=0oAt]Up"$o&)D*EJ1Un\%_/?ne</m,u7Jt%>Y1P,<RWX8`WrPE/lD3O8qn7+52!Ce"iD&F+O&R()26X1:k%7YSY/j3)`Wo@V?]rZ'lJZji?l!%,<*G&PWj;`70qGq<&/<DJ4g3ls#0p,*sc(cbE[j"]7-R/]MSq8+m=QBaM4$fH\GYkJaRf#/=W%XAINTh!henm_PrU!jR,]l@YBU1_=[161;7b]-.;mTqM)V&@P4c&-J5%du\A+iJK>)jrIHC>`2beOCRmjB<me:Z:Bap<'i;3jsZ<A%_?k'E8h"!><H(HJ*8t_\4gChE[)\8*9=>jYo7la&J\B7'4P7-1)a)!HJ7(N*+kj/_;P%HVed\oR'o3#SJ>`^m1lmOH@(-[a=fC&9%UQf1Tg;GVTcFTA1&0<[5e,]]+Y\nes4otpfBGs4cUAi%/&<G(<fGY0lW&^^lQfnW]L;BWt3JK-](,oV<6km.$>E!b:>A"f"$$U32%3c>JAj)P6^WECBtlZkO:S<QpCmrCRP4R<=s?S`%$c1>L0;YKX=,;rXs'*:b3Bd[mtL#=6X]0YE[^9R]3lj1,-bAG633jC-K&;9jF%e"lkl+'PK:&>h<P<u;#/Wd0mQ7ppJ*[lSeR271k8OLgII.fcb(f0DZaKF*8HDY^qTqkOXDYWdpKCt#XO2O6KFYkl-<8fiIP,0Uc8%0F/C?bB27C&Rnt1`34'?@7ZD5?;C[s.Pfq1:FJE"U)OLqHq=Ps*/@oE\68g(fQ.mAkUtHiA()WXXpHI]!$N_^U^_p,82\=&>kg`!%f,$Ea75P/%$VJq41^3PoT1`me`O.PO@,q\`Ohe7*jkK":5oAfI6=99HR)'JS*afJE\mk`l,/m\:UZmMH`q5[-_&?ehlrU>46Vu6W%i4A;2d0PZ]@YL3uP]SFGXQ)>b>;JtJ3rq[bb`HI!.Klh#>Lnul&6GTtC\)S8@K=mq#_#VJ-*Og>]55iE(F"a4,J%\^F2usjErj/k%\7L:(WQC8n,%H?uc>d!cfVTt9dLiKKP]jsh%ehE9FX$J!JlDi`L:tL0aMpRNf4(`G4-h(^d=u'S8.jL/!BQA3X/-6[Sq["&CGCWW%O_1`2@)HT+J\a6.D/?RJ!<e/<M61.7+tb#2J4[dHh\`gi)A,7lT2eD+11bCbAjcU%6,!L*Bm;C"H49JD$i,T*OJB/,`[;P5_i@T1%$*7B)pP#;/,QLpIeUS[\Nj&f2;b3o<BMDH%@mpo:%MK1OEocnf6)+n)kePWVZa#\4pt'VSodeVH;"3dK.C4i?FQ&B+c'PYp=qq?_%;"9(#=?gd^9pfN2)-#u&(9UhL%'mq0@:HT0AWe`O'*fhdcI6o`h,d!(5_O#"`B7mu\t^%G;/T#k0W@,@`+5R>JcH7?.-1!VCqIE3%&.[d2\Xr87XOL]X3,Gu%M5X,?,dW%pc=YQ5KOPnuVB+`tTYOB]fK=&WI=`+8/FL&l;)rqF4bJER>0%iP%FM9QXF^8GbtXBd)XEg.%mnWf%.q[2kXkS4g:,=*+(EfU>a_I]Po>lQLepWJRjhkigc_quf^hO)?Fg`)<A<Z$XI7Tt#)eBiS?NCFX_keQMK_"aUgd,o#9],%h%G/X/\_e"tIL+_g/NaW;Ui%i5k1eXdD&rE4I1!%aJ5p<C@LAE3[PoW^]aTOF`[1JpRZ!_MZLPHc_H\tA$:#VL1Tn31s&;`;]GWJu%%W;*$!",Njjgm$qF=kUT-*`J>@PD9N3VX:CJB%n"K_M`'m&I9D]323!p)8+:'GO1_eqi?-"[Xfgo6<A,/ZIkU"[?+T`o<M3do1=^)%6tbKP/drJH5W-_mB8f^qX\<a4!lbj0A:b:^%R]#G*:g%r-DHb?;p@SU1?l#tI2sB"b(^J#7tVAT^aqN21QgF;/Ta$#1!u1-I#L+3%OqHcEQ7eI7-=l+u[4Z8$%JKlr39XJYo&aas#_Kr,S^+&CT^07aYiB#CpagGQO<k1Rd\WES<IL*oJ27H/%-YgQ?EorU4N$#t[Wj@a%)OEV]%\:q_H3b6X5d2=+2(VZX"Y=&k>foH3@r"F!UG(NT*O48"-62][<84tqbW$qKLD1"TouI.LJa"NLl8B^Ji+@KXMW6M2,[l>*%O&(Nn3%1D)rY>__=QnWb(T/RL.$c4j8L9%&B0*aJ/YuZ0CM:0D`$!F/+mK@Ng'9YR!Wad802uS_AX<X9ft+7r>;u^I$R>AL:n,j8%.G)X3<?\6ZS>sG.,iYh+i[>3BnL-9<AdCt4X;C)$\=m*MEFeUeTne=9C8&'_:.>M@ogjise5B<YG@V9T!BC2-j`RkOaf-UiE3q5%%;l4I=:"gh!I0_R[C;P9($oD=\9CY"UHngI8i/=YBc=2'800t(?E>`LZ7#<TIbP,/odO:L(65']c64)W8)($L[.#!D7d#gk]Z5g=*%WB6(K$k"q!Q_!$J:P3[VHl+oQ;5OQu'^c`@$7\^oZP4ON-B<BHBE/jb%$a1YF@R^@Zu_A(CS?g0'`&QUhJdXum27(#);Qu@9.a^o%0G!DS,[O>WBYk/9@q6\h0ao'6C9:3#F!+KY:m,uM56AZ]R2&&UJ[%<u8O#iqT+S:[l+A.F4O7Wg(21OLe3_nci"E:G0i#*P89qMf%lnS/E,$9mWc*.mW65XSS&V3i5R@h?YQl0:)@N/M&f[GV&WT+kt=-+^M!_g$fY6kUF9hjDgD,T)(YtO(?!_n"U`LmI6s0Mm^*cLL*%"dQosCgSTd+@^GgD.HX<#RaBkZ4BR$,]df7F+VGqL]ZIW7J)K,31rYnV)%-/6>j=t0:)'0<YT"&VN`Y6L3%OK'^l+7Zt*$O3NP<)%0$Dd-3pK3=b:n0Fi:&+Ecq\5qQmi&D.IC8m(R@@X5aTaJ)WQJqf?bG_/Pk<C,6#Fkkr9lVcG4\$-uOu%*:bgTLtGDR=:%UadXQ/?%#)`K;kK/kg/un^q1N8SIb<$[cfou"Gf)c38C$adO4]\V#4>F)Xk3AlMi-b@E:e-S7_4.@iq&r.^GKo[.;Qa84*K<gK=CciCK$2WL%U^`<^Z>"k1Zt*=C(>FEBJSj9Uo`WJN;#n+OR)0O@j%R\LA>)H3'6=4'oP>)M-Fqr`JOPY;C+SFWZr(E.GU#+'/HWa/NQF\Eq(CY8%j'YCb(p5R&1$HT_3CH-mOk]*)1,u@tj*>K(l*^>cT3Xjn,7Gt,_0SkE6>FA(2P*9U["1sJ#!d"Zj02\BP7"T='Gf"KKb@+/,X^dE%$3]L""k<[AD4p`d%<8Hug;->8!:ckk6uJVT#$90!;'3iPi)FNRo`b&FW=[8)>Z!/)l"#V&k_Nd"a/+E9gC`1!.-b3aM,A<K,C6((%7Y!i2ETf"'$+DU)d\S5MMJN`"<Pq-O8dqk7(`J<4cnF42F,nH[PJ'_[`M1p=*!QD:)CblbY'DZ.@H_SB_Umn:BcmS*KZ8eLo2:a7%_irQ+]eK_F,(FUDF<H9PX?i_C,J<U\,3TCFLQtaSNFI]G?4)Xtd@%0EdUE(r,E*%4kYMtQNIaBUbEDr]iM[<W:Tq:"J>"n5Kdaq\%GsYeV$*?/e_pTce%u,5SBs/[s!Mf`j(Q&Gdlet181BjPF"Jo5k5faTk*InE:h\0Yb*<rB'%E/e2E(Jg%@;?]]:F__aHuH6olDti6%VD+krJ-'j`dkO2qMBE:N'L,b.CjbZ;6[LBnYOG!AL<jabe4b"13b5NgA;DHNa"Zm/`-6kD,@MFd5RK6S9fk_@b6^(g!7mr:a\`D5%W$p:eNesutSN)HHeR9d)#qR+W`[OO#FC"I;P-7Y?ah:;4cU(FY0Y@l=#"Mjai`IIZT\[X@Oq<?K3p<\cjY8Lt+!8$);[-J=dnN3>%U1)Fe1Po-?$.]hGMBl=^W^it`:'e[^A-'5U.>pR6aj),<08Aj,!?oCYW)A;Rb(VO,cN=G%Jcm7q_+"0n)^,@MJLGLq6`k!11_)nJ%'MO3?R%qOk!gr:pj)hjteurr^0MRFZ0RSnKk$bhVQ\"dLN#X`DNdrF;_O`Oi\YAcXK-6&]UHi-h(fCO9-,U9J5'E,D'6=uBB(L^$%'4]i])=[+!^VrQQRDZsO=R>/AnBB!cqo&-2;%FoJ*5RH`VWURT>Njl8F\FWs8I)+Pe6RZG#VJ,A%7e2bG,^BB/VMc:c8@22Vt)Q$%_/hsL\*n%.&M<+6%bGbn')Q?a\Z@+1]WEF"dTG=Fka2GqSkt8k"8@"iYiU`lQnN3*29i-1\S(t.EHF$I%.uB(Z;R)RFe=?g#'O,r%+3Tai%3\'=!',TS6\.4u_f@nIRbY'&UW(e)>m)3H"qV9-Jo8Hp;o5%5Ch0FP5X9W'IgPB>#iY8@+5M%IW+TM"/!1bGODn3)-..C-%X!sGp&sZ'[.M#)e+e'>!M%DRL_Y@%rSSXaU7klR2PIs/T`CD#KV.A:f4\SLf,Gf3u(Dh_n;\K7\4BmK-Eqh*#**kscMXXPtH#d"r%TWZWrK"3#%M5K?]nNb4F,A"Xp'N)1"GuPpMq/U#R!9TtOUkVtrp"3&9]pV3#3IKP?6$[jRLRoL("ic=c-;-q_jZH!4SYRL$(bDR>%Uri42O"j2"p_`Wo'ZYMJ`MS_Z1c]:XCK\<JOPNZOTh)ekA"g<Ir>V+Q;@H;bGqD<.[tK>!0b%5q:>jNRUC/"0`6!]A!C3$TMj&-b%Yc;SVlH'?0*1_P6B.!\Spt81eOktXZ`q13Ha8OHn%n\\qrUB/BL<Z+r5s/ACGDk)_Q?8X"J3b\&J4K1W@g>1Di.2^U6Ti0djlSFg%-&%`7kp-_e^t<X@$I].,JQP\^Vml`RfGeGnp4Dkkk>Q7Za/-EdbW[dMj"?nj;9kRh7!<E*#;Kl4(IuDS0-S9N&1qXf'JYrQQ;<eq%m#q)V&N6@<!U^SZ'BWg>+@.hcS=h*U;uk$/DG%\EgZTZsIE</e7slrK8p-FD,WId$UI.4/6ZZM^'.AK.jDNTei>$o?1]Z,8?lB1g%@8!JqUc/ic+qVbYV5YmSZk&>n.e>Z6YET>7I/;uO]\5Y4LIp00QBJ1tM@OF<@6+Y1Jm9$f$BN%e!MNTq<-3`#KguB5(es(8M0oed%l*eh36:"'jM_@TGF"p*?ZT;S06Xm02.>srOCiN>a6I6,&9#W--EKGfG`5QN2"tV6%VC,.Z9h-[NN]a`tJV/"j_ZV2%B[9$$L/,E1%IYL#3R*%gg5DoIs(o&)D!^`$p@pLAf$#Eg9TK&tFmKRF2Ke7Qg8,e=[Fc0aLMF$%/V4$=:?O!>/I0^@((qGY\3i5tNBp'f2kdp#B%$RQLuNj)pZSBZn1YSJ<^;<W<3#U7k&:oG''6CQ'4FmP^GXb4-+"?Cj[,i[Bpe.sX?N*?OPZV5)g9&.!(%NA!#62]B,UBI>:(<'F%%&@-1fdSCI@nou-?bdrN"Z%[HK@b).2h@(:.DUHnR-p6#E&OKV<9$Fl#nk!m;(d_=VPsO^O`i5+H#c#r_B!;_5KT<f!N^FF6lNjbL%4'mTA,KMa\!<>RF&B%WoejD\6Yc`R_=iVg/7Kfe+KQ[8:@%C]R(o2\)KK,:6JaO5V:.(7E'`mV+UR8JD?6(c;So5LMNY"gh$KBSJ%@N!%D-fWY_\%X)#$XFANTu^pcY-%go[!D_8_<M:[2%dGjOgtbV</r)%*C2kX08,$Up[i_aTicG(!6+G__<MfH5",eq#t^'1US\uJ%;[BWroX]iY7hE;;AZRpZ>Yg_0FHU?83.RmEV.2XsMmXb*9XMOE'ZI(B+<jiLKZR>=Cn24:K338b$3q.IZ0HuXc7'I4l3K*Q91X)^%6:\Il`XHA-M8_"j;CVrq'X?p=`DkP8ArpNQ&]XVt1035*LeX(c*@Y%&;g:q'$jd&@jK")=Fc1sH(W&G;M#7;lY)\[2*E6IW\j`=)%,#X6VeQG3^Mop9eP[Zb<0OC:q)oG(V3^O6R=EYC^*^[_gFTj,Oe[]h-n'J<DNesTM(pAt+Z!7lf-;*6*X#Mf-0ID_;lZD7q&[.5)%,.8!@eIg9sfTG^hKR4;E.DjUeb&f0=_<SC8['dtgFcs4g4A=^IFbI;k#c\H`l3QE[9c:'n6j#K^M"8DrFXA=FBHX&"&S;k(R"lY2%"JH5D)6Fs2LhLo7-DK%i5?gB$>2>o$?#`IbU=Ett\d3,IBQ]5nfMjWl,eU&`bbDR\=F:N&U=CiA08<<g7C5+l3'fetX!>RATG8'B%Y!@Spoa$Lcee,b?0,]%qA)K/J0P9.8pbl31A)ARL-ej;3*P#(LAeVs8,!kMt,H?qnldQInBo?qPmS8"!7F8V7]m-,Paqqbq)74;?%cD:if/r(!@\D_G;T86W?#UluN1cds>f2eWu\Xo_"@?D<GY8^rc`gHE)7)Z/?9TOk.>I8U$*1J6@ee&\9"]6g26>2,^6InLp(p^<[%7*%Es6q4Qm=XPbFY$P'oenNR$#R.,fFdesM2DR#j/;g_)3'0T_X<UEG/je,$6<e[GN/eG]r#UNm,L"ch0Qr&P2D.>I#su[8@E:LG%%$;Dr+mUrdcE7^%lSrq*p,S(6KWO4(4Yg)Ma>uYp@(/EpgEMX%<J&kk+Z/%[Jl9,YL^XQ0<JCno`iLBn9PG(sY7nNFn.p?`.-+3U%aJa4b,f8+E_BN'9X`qnfPS#lhf9D%9*4Ba)-jLiQ;;=32UrsA7'XqsW7'+`-7,0i?fL7"EenOBjY:8M_#pN,P7+aQ&Z\W-.;<nMY%C_>Ag;<tmaiiJ$3eft_<[B@;5e2k!JaE'>5IY1A4O^$gQN5e8g&K.uOZX^IqLg!mL'L]&:J("JAW-*d_Agi$E`#kMa/u-u0`+O0a%)4_D!A^ib\[a.\V&[Y<WB00ES#[0_(+[-087gRj9@F0>AfJ7-2+IWSk6Lh/Z7*)qHU53pnE4@YnXA`K%."sDA`%4#R)7*'odJ4WF%6In_G;N-m"=_A?+Lslu,U<%@<6#IOG::t9H.OCXoK5SRIc_>A;QPE=;btXjF;a\#)kEXNmm1RVYmj+P\&\o,O()Sel!+L-D2<qgr%"3f02M[LrB!$Q`qlZ4>-744G9+%!,D:p)Aor<Ti)YZO=i"MLPi'LUOZilZHc=b9sC9V:D.l*V*[@pRTZQNqMSU5W`i;@MU8>]JQY%lY'dsBXXVi0L\Mm66%"o+f<9J!5a&nnEJt$8T^@)dg#s$X+gV<FBT!eC5+EMeP\$5J.!;d@2]+S&X:/_piP92=<CTqPUR924Pc<]%a2dsgk4kgkb@#R"MX[B+4AIP@,Qoe'"-n[!/5,b>0SC,`FM]@*N!"^&eR9V,`-pUq7qSi:LhM)KbQ]"M!+RSgeP3E29GC>^moOV6%%Z;RXAjtc5<\q^aNR6JN%@]sefV1LY6%EH7c[HGfYn!Lm@f)6*18=hY8ZjD!83HaWrbl(DZ`?ZX<1fi?Tf+L=@TlP,HO4/COKJ]o%&@4a#4/E-9eW%.E+Pr\P5N269=7#4DZLc7]3pgn)M%aV]X/0SMgcIck_7/LL<BhcQd;%nA\Wgo#0\;etPB7==XUKc#qQ-j9U`p`^%e,CNc-TKg]'#;F@Is8k'?\o.<VeA:Rft?D65IY+m9e6>*<g!BsT>SQ0aOH9LT/#]oX/cs[R6:6RI@[Plc*7V,Zo0+s>o$M82SuB@%jUo*PEa)<6]r^*i+mYkd!`%KhF?IVJitf,5+l(:Y,N:aYZ4^)^Bb`ZbjCZiRW7)+k(C^!-(jlj#"]^9hT&=eL-Kf70=Wk`nn-]$D%8IE4V*Z[R)XB:Y%IZk-A9V988"=5uck@,R(>=#=Lg7GB0!bBUgRe>kLhPAsG%)i2Y*u6XFB((@Wg9&kA6QK#R+:<MQBB$#MlD$S"%3[k7$Bf3A$VfT$F6'(Ol\ihl7l;#I.2B%='-4s&#R%Q#7"!:9XD<1)ApXVb`_f1q[))MVHE9`Z$6,+<Rlu!OJ>9&^nG7Q@-[Gft"%iHW/tW>Ke3jbWhG_k_VZ3"EW:4kO?/"'Ju*^+b^ZGj/\_WFLh$8o]GCI2mAc_;M$fRtnK/SPnHh"q3dAXZ)%kDk(gA0S)WDB`[:p%8IiPt3@O"t/Cl!=)dWSA.53:2S`NPq(?ua`JKTH<\=91r95:7RB4oTMpVg(k^?sNm75E]ihMA@JN.\3m=!oSdLXM5\\:TOp<o$7i%;YnS50rHOW&kQ9O)CQEHJioFnQ.f(^efh[+J;;o#1'KGF71He?<HA*ZHY(,%LpCU`'`I9e9@I`k3GOIr`^N?dk>INKL_J^N+NWGh%@gZ08_rtL9dY,IXXSEl'\rG8t@m^:%2e(i)_X9j[d#cJh,!JAj(>,I^U:ttZMCBg%kdIi3lrJA$@NL,]Kij?/=[50ek*Q6AA%cP]%<JZm=!3j3lmq);]<(3*sl_+A9`Ds)%nsOE;htH'R89:j;H0;o(Q"R^5AZ([.$:W_[ZVJoVm+#&knQs?Phl]M"!-2cYlI$h9O='7s%qAHV7#J\8hFqbUI5ON+'51aF8aMF"b8._nOQpaTeaeT^oR/!eVBjh#IP0IV?_;bRSWU?R0]O:A4!83+YBM6DR?c@G;g)m5KUH%*d%Ia`p\as:eJCcZ19D)rm)#*ZWbUXei:A/<_o-e(\BbQ9+YhOSPc#.'oajW![j^6B9:7.0_5e878sga^L>-/UioYnOZ[;88+LOd</Q%Z/o8$a22+XDlQL'e$E'FGXqjcWtt.V!hQ]W0Xu5o*u7gg>4lTB5ltk_TJ!$46o-i?7E!oRYnY=8@%dVSgH%@Q#Jr:DEkdUA`ei+(%+QZ;-RLml`0uK;D7_#MB)Bn4*Fk),kbIfr>EBq$[^n\I8GIpDP`YKqg">GM8PST3rU;(5oi6AnWj/UK[GS+1@JQR&8g5s&;r;N)d%5sH%#2tf_bDTLY?4s!\uWF#Y*HK\8H]VAK+dE+CROBmB@.$qn7g;l!nk$BF)O8/:1.<Qg-c.SiOC=Y5n=!jCI91<hFjk.D*KJD#T%eO0Jd9Y>DWc;s8O83c*+ErsS^<3LfZBW;1f-P:n6a6PK8*=f,qXo2I,0hTCnHMI<p<L?M<J\FN3,>*t"6l]==?=:%O&X.\e.;!FQ%k=LV:^,,nWlV0+U%j]E0\fgd!_>)tPBVmD-WVO5jOqEMA7]KaF]l>'\b??d!e\,s^TFJIe+SX#d[l0a\0*i)V>$Hr:[0\egi7OXm%&??a!@-7sl9N&TMeimr&n10aqYo2RUdt>l/-VkTI,<HK(_po`6\.;hZe5B@,*kFT(6cU5O;NnEFc*=nTW**TZOq#Bu7I&u<Zk*qB%iVC:/Oqg!4p+pPjRb;?gliQHL^_$Qa&s)"4S0p"kD01&immZGhKI))dU1\r!=@A.Ahft0gD?ZFdX%$>:gB-n2Y:H.XrK,N;_:/eE%;'9o*;-O,Wd1`2U5lHX9a]7k'N5<A@0^t'#1jpfNf9EKAbjcLRkfAk)o8mX@PcX4Ac:PS4S6F72oSL51H6A_'0Y/5;3^*c#YP`B[%'I2(15Mdhk%1J7RaHeW%lgeEaEH$t<iT=d<;\f-$Yg=m(cn>P+b@J@/7iGtm>jc5+7hZ'2K";u^"3fI'U-j#Fkgt3X3*St]U1ltX%!STHs-&CgXNGW:8[W)CJ'fVpnGtt?u+d"#\_\6.unMWj-.)?fA1NoL(4r7ia9poYs3n]D3idca\+@o2V\bj>56Y02smX\oi(Pq_g%+Nr-lk:B"%L"8r<*\dEn0:Ve8FJM'M9>Emr,[4$4;&*A06uIa!9CoPhGi.ZUVeK@I.ZO0+BauJ]=IR^R31\lC].i6BL\3VdC@,[l%PDMbnn@>p'aM,\"[^6u]SQTQ<?j5Of2!h'6T,Yt=(Ka*-hmocO0!B"V_!KA%hR'05[Da/C+2GPM/d:frXDI,o#1)b[ps9d[e#khS%(ZX?S??2T@,p@H")=!G^p2-AZSUObeTV!c0fG>ggM[q`Aa8heCo&'VrpnC<5S%d-5k97-".li3oFV0).`"k?=[NDJ1\cGKiTejUf%d9bgDP"#<tM[>%A^5_?jF#J*[X_(C6BH:Ls/>&"8a=KdYQG)7DFe+)>dCAF!Mt4olUmqTI;_"uQ/A_bGHTMg;53/A$0u]C>hRL?u%J9PFRRr(GEc6s2WIh.Q'7N;&[g*[$!6Hmn;X8+4[\YiFbQPt>0b%\R%jNW$V2?nL1Z+h6Gfq[/-8FfuHbRJsoEfi]<<cdfZWTZ"P%kQAUgW9Ta_<MCr,9-7u(a,Xg^Rn8s4H@<E1AF^WZHFP5R3F)VMN5ua?n)-o,CpmIch6#D;Mr,<94`)<J8303o7a\DA.G,O&!#3gk%OU'NO)r]RQJH*HU]8DN9nTGEi;F5@*hSd"8;WrnrpQ?+I1T\Unko?i[o:^^:\mj.0>R>t@XhLK0(uM?YJMag$b&\kLO3k(f[A5c&%K8@<8M+">#NhOS7oVVKnI6l("I)4As9**Bpg$puUJQ\$q:l"r71t8*^*ADNKNh2@H'9P="`GHTo,=[h0]R3h9H)9rUi.M`-IdcQ7%U^m.\3&Z$M=cYZQ670ZnW<T1]`4_1%?/o11J;rF,7eV<l!cs@p-[):5<7`OrPl#6s[c;K/lNu!&^ppLkrkE+oN(DMKA3+RcDIU9j%DVsM#?t\*'Q)#*p.O7aZ/WHKCHXIS95tl>a0T1;JF]U(0poZlhZUt61NR4Q,m<a&jN[`:L$^IZC+Oed4JLmAdhM>IVY&qgL2=dtF%[Xm'^J._mnPd7LB*8-5s4^2uI?.\b,Ge&(8a9Lb&0?a*tXP;<,O1$955OR;A+BHp`E0]F.!`U(52R9:`d0)#>//Pe<O(p@)=u^Ms%9S6A\IcJOM7M%!NO@eD@njC0J,UtKEUTuLr;uIhVO'SB7P2XO2bPJWuV)MMCr6af21^4u7&[RGg:^H3CcfCl\ge59Sj<Cj*Qtk/Q%j>L"ma!/J8\F6S")a[4Z`[7pEX%a2Bd^dS%$ER/(\b`B8'jN;n>"1,+D7/G^bTj\SQJ><q7o%?@`$/=urC*n*a!,3)_H;B-\`?kt%<oMF'+A#Eqob3)%7TU#$e?>MZK2N"1Df)u/:tGVW2V:j^,M[K;Tk4^o3M)Ro2$%Aenpt3,W%c%4kV]c92"Q<#XYVjK7dXUO,@d#1%.f0?@+3V]-n4J7J>=[\H5W/mEd("?LOMo5U$4:==i.[@S8V'!c9n@].oVE]qCkP8$Hp+tET?/tpZ<`s'].&gnf#OOu'!jDCO9DSk%DbYd.7S6'F+IhVOj>HLp_VJ_q,OWW*pt_s'/tM$0%J3!`.3A=1YW;XcBR?ZH=s+*5!kDCQocWJM9J8D18\d(EO"Z=RO2QXHC&VV;%3#M+4o,iO?=V1MO7NK&#UfmIg*opG[+3aXQ?E%%@Q2F.4"$I5,s,g(t)QNEbnd/6Ns";T_/j5n\rs6hM2uaHqq+O(j"L%tMVEY.2%l0<(Bjq:#W,E^q8RJo`.cCBi7nHKu6-MnDLD8FuOI`)nX`t[l1b`4]Y#S'Q'7`!/I--+#$E7V?1\3MZu6h]R3/NiAi?ru]&A3Vsn%f;;W;hQIS!p>Z1Ar<Pf-SR=[2r;<f^2#;,S+5BB#^?XL%EZ[=7Pal4N,7o0E*pR71FC\</;BP_c\ZQ/0OU-fg&,22>=[a/cq%9"R%>=!_fCY,CBgJ5Q6`s4BkOdF1Zpt2b-i'5.MhN<E:-9h"JQ?CbLI,%)rBoec5HuhT#"JQp[PX^*;bgP:R`th5S:E'R:(13piIB#=s%5.jC7FH%85o,`Im,,':C5a7N(n/e243d?]RP(hf'BYP[%5/(F#53baGXN'6=:_AP>qT(<Y%ij(h/l.`'%.5@4Y?Usn*!7c79/BE"%7uelU,JefhGjD;:o&KJnp,J^3-7:Xh-=a;44#(P]%BN#7r1e<!^!F';E\'h'Nh(`[4qmth;3gK74J@"B+B=o'qAFq%G+3qGFPss/%Kaedh\hMt=\o;8M;%a76!'Wu\Z[g%k_pHOD^JE5d@QJ:rNJ_Md@*-:))ZiQso*h[#?P%FF=7Q]B1CtQ9ktnGd+GGL1DT36qijCEI%B>c%r1><P(@%&7KK/,dt(OcA>V6=E\haVTL`C6.-KPo_#g%AM\Vf!&aMFa=FjnJ4j)o\'(YnfS!;j[jHCTnu[5`9*PI!li,CY9lK%U?M$gj2e+i!QS<D[j(7_JQrhZ=$L,-b&`6:Qcghl9T!]:@PW_\BsP6i0jL;N&6^nF^S3u!Mm?CUoer3`33+fO'Y\*q*i/C26]A#E%#BE&-2n9.qY5gI0&$_/,BqW0Z9Rh$]_U>rDqX^Waq60eoo:Q">lK8*%=Z6$GIt#NDB2iEM_d/C%9,NB-PiU\kebH!cBo18r8CU!M%c@1$sK3NQ1>2I?)!5O\#6fl(_p#7,E2H=TfXpA\j%TXjE?BB*$O/13*dtM?`e`tZ,,'?Vk(C*haR]_)Y;jegtlm)a6F;Dr.A7S7D%NT.NX+FkS\$4P3KPoG?c^S3n=l:lGgJtu?q4=;Tr3%6(KIDT%p33*cPelmd[/dlJ"Eq]Ze$X;32$?D.C$jA+YU<EiVLFAdQhim+t%L?&oRo3@I`J9%'.^]AI/hETGn&-.#f-NlSl0$Pcd)M*S9JkRWF*#M(:q/_[B(L!#J9?H2\,o*K?SbnC!BK'Jc1@ZY5L4qB;eM\IN%O\N65+G<;q!t[7%IkB<>@)+ANG9Du5/1Lbp@&SIr<o%50@(1^HRJC#8R0GN@Q)V_fd/eu'#,u6q':EJ]'*pJtSl[comb+27Y,?mV%"RQ))H1]ip[RMa\$#m\$+W[aKaP@A"%%1aZh4GDg%6,m3,f,T^j,pt\,;nR@Zn.``@ZW"t%#]sLII$aDmd$(3$O72Bd0e(Rn6D'S%5^@i8\5]l/m6+RY[U0TWXkl9*(s&P_0p&6#XqsVXS'8"8p`6u&2%22gR(>Iu-8Wq'Lhn+V8JC"(U4?/'g/9p[1?C0HoX%T@%DPC2%nj(Rh10a]kFn'AFnO"i2_^kCLbfIb%IKh+<2aEXBN+J\2&_0cB8=%X\Jo8PYN2KZbV5IL&#Z[jbeW7QABSIa2,+YmLRo<:M_G,WC%"/K$dQN4U.Og^i>Oj\p5!LZh=a;cZHpgDb4gLjfiCU"lrL'U#`U&rAN9/W"rkX.$$>h>hQ-!JmRL%A-HaVHd(2^BjIlbqDD,")RB%*uL.Y8`:@WDj8E^IbCa-JC$I')12V4"b6h.-JVr^3.Oue!l#Lnj1$%$J;*8spQb6-_8N15'l<L=9$$<@7;aER7c.YK\&L1C85S6,%A7__?h<$rC:kKZIXDD1HX&(NA!.OIP:Bi:l)kN\'5(sPa0#Qd,&GWh9$gRU@p+>QbQ0%GI9,-jOHqUjp0P&)n"S_/pE]?%OpFbbb%D'mu=(_#p<%=!9!'H:oIYV./8_lA#^4-T#hD/2E-JVmXI&S)Xs<YdCY7!&Tu-"Y`*BHo(EW<=+Y962mJO%UA7En&`f&0/IX,#=0j%;m?>$?7$"a@V0/B2mLU1U2cH\&D.qW<'hqDB13/%<\+#/&#=p+pC#Q6D$36Q3c5'l56*HsW5F:.A[;ncnEn3$QROr73LV6(rU%Ol%l5Tng]H9d`Wb>YdK]/mM-/0!-AJ:sUU#9Kp.>a<8(O_o7_2g\ioZKG_4fu#D.[MrX?4b/(&+!2i$Ad>l&9^G))TZGGE`k7%rJJNR%V$)KbR8mftQPI)/]sH9R+68u&U4<ifBiRDTOZpUs=?Md5iC-1S'mHJ7fQjI\HB4.KUP<<jj?_nJY2FL]h\O@9h,T/:Y$365-/daJ%WJGNQKf,2B+iuEg],-:Tq5"\OPF-6Bd:@BoRd=p[4;:Fu4I!;DJn>;:1XCUL+A-3_"K)Gs]a*+Aa%B_Me(NPlK[W9*V_/:i5_[td%"_GU;OKV$oB%WQ>>>/[;3=o8s..qCEh.egqndie<oM3Km^[J0Q`&0Jsa21ABZ5'HueeaO&2PBW%[/;h:M'5`4>eIDs*_<]X\tMuq%Fu`#oBhGUYU+6(qXj.9/XO(rhmrM$*iFir`RCJ%4Zu@39-QH7;o\l&\)p/9tr-iCI/Kr_bSh!81MFcAN+Q5h>B'j&,Z$N5&.Lt@=%D4)K^mY9N5B*E!@)s;e14KgQjLUAN'*P;boX+@<*Wp5-=f'$D7oHOF*M#tZcMU5g4_6YI=rJCYfN)oKu3jf71k8).N.NXju1s/+C%BCu>MGN:0X,#?B*Z@]V\-1l'q/afIY`]$?_+(V<6MDXLM;+;7(d_/Qi"PTin2NpJO8p[*u*(#(u3mN:'F8;1TXa7.99,sj!q;ss!%?!@`pi,1tj11iQ'3i1VTE-"&Ao)?`Q7HNte(&W>76RS`An*3"1N#fE7??s:_d7-a&JOoi.&s6_1<sT7-/T7ga9T\>h1:-'S;!c-;%Brl@L!(h!'oJ2)Oj<XYi:d)TeK62LcTmqX+.FZr.YTd_=B*G@(W7#%\W=;iFV3(s+'ge/m$VUZOAE:lU"F6*o@''2JC&(W#oF*6q%BN7d.8$Fdk*b=UM8fJ_k$iKsaajLq9GG@^`aS(%5HoanK\>_"c=E[.(Bt$[G38[igSlQX99U<he`o7E#Nlh-[qG3\s-<M1jS,!Rf%V`H=/8rsgTbYCW0OYaGD^k[d;8-:.o^qsda`[d(#QP#T31+-OmcZdKJl7tsU(ZL@SUHEP1`2\M],28!=#WMQ%8`JEPE+5bT:Gk7r%$L'd/KY,IZ+[76q.C;p+bpdE?OaW%c_YiD5^]A'T,nX.P7)6F!RlEd1%J[8M)\(mM8SH(<"icraAa`iu,W[Cp;,.C7GNMbF(i2b;%H'!e?]WmUCM1o`4^P=8VPQGG":(C0oBn%;eqqbh(+_S*dU`E,_/6Pph5tlr?$*Yr'<Z,C6-f14Md0O5:<Yd@[j"(.I<IqY9b<jmo%q!ESc$KQLldfbe_948?-I;>(qR@F0q78<4I)^:r]p/G%_2"4(*oo3]-U=JY%OWe8`l<)B=\iTZq&lN9OAnMJ_Sn[q%)Jms@]$nuV%S+j^sp<s?u\BtZ/";#!UhU!$9.e&7*)s.3lh&(`[LBEOGMKOG&57f,B8agH(lAJf?"L8[M=;`[.d@EEfB/$D%31uA>E&g4?%^+3M%K%PFU0,"Ym9K6#ATYd^Aau6mR5^A`fB9:prPT8mn!>"liWdLhl`YI(C4(eaA@lc<((:/#RhmZIc"K&m'GGj$JMcR-#9&@R);`Ree%1[#b1O08Zhei(C&f&J8iY&-64(3mr`^LXE<RS*BKb)^;71S37;R'uIf.VC^/K&!N^7Gu+tata/%[qdAYd&HG<.S7]j"tSjm<q!k@%eKE"!LGbl48s=ZLH!-6aW(`'0r8%Od'S07fk/O3Z^eN+3e!WO&8FXQc1'$G32NI"M#_Cqm*e+A-[i&o_+rPJd$l-tF(l%3Rr<_6Z%[Si'J$7#bK>WnQ&d0e!P-'YF/&3-DI`GqO>?dLLbm[!ZC93W!+`_8n6haWSPOcHfS<B,.P#Y$VE:&XW.DUbJJ"kLhZK*j$1'i*Dt%0U,jBjOJYi/8!]H_Mo"YhT:$'=#QMq*68Q,^l>)4D"5]U4u"_>Zm,mLN21t+n!j/PI>+*iPbsjG`2oe(*n3%YSNuCl@VEq@ZnNRn%Bog'>XW_&SX.*kW+t>@'kZ_4SQu5K%+>DL6I7P/f%@;-epP3J.fQVUm8%,8b4@h3W9i@ZN`5M)d5#nCl5h73R:E""[HX)D!/q)0.%<30j5W*jl$I)bCO$KE7U84=Dn!1\iR:0/KCNL3aC?.-`p5R6A$G,hcjUWVlO[EEOUI97>NWt.P;oHQ"6PK]&$(3(J\#?0,<%CZ\)%1/4'9AF.CpK>A!eC=%d`9338>52UC+1@A/:HI3YOEI!_>Oecq7gK7+2E$'nH\]j5a>(pmM`R++e.9WsZNi8^>#'R?EK)QQ?[kHl4%TU#jYi8j9H5JXk68^Apj::d0*JL#YiG'_V1+A&3l:jCa76agXe:@Iaq@4u8\Y:pJH.4IfE)1gEE+cegk2juNPlA6B`N2RFDdS6e5%S`J(4nl24]X(&_k1mI!Y^&K<nj26He.+g5[IoF^*klKQB$W9NMQ++l+E$VFR/&gg<=\O;A'Oo)b2Z?8[E0saJLBM)08E1Sii*GDp%TSH5!rMmA;o>4GZNGu@g`&16M`k%VK?,J6_BdgL/.=[!CgdWrEF`_S^X?ZlS/5l75;\=Wa)5mqJ(H,`ddCd=FV;2SM+h#pYh4iY2%8k+Q4'RB[;SM5U+#:JBXZGnlqSbRG\aF[>nJ7um*`70f$R"YR)/hLuR4d+p6Do&:-rSI1XD^,8-d1>^G43Ar9'N)%R&![uUIkYF0%%HbeS=I"XULt(d2U:mcM2:bCA*9rt]980W<d='Z9Ld&<!I%inn5&@M/AI*TI!^XTc]_LHSdJ#f>T]EgM/AMFj.d?VZLAb)&[2o@(%OgR2+>a72u7SmF$Hgt-*:'<Z`59W;ape%e3li/Aj'6C/rGhORAXqMHj&6Gmc>6(Ad7N3qVC@'%QdT*:Oh%#BI'Y'7a,$eeWgNr=M%75(CB!_`4h:e_g`7'Ii>I[ts)O`JreA#V<Xnd@mOO.r,>@ZttQ&Ua)c%*;uG6RWV(9`V[/5k0=8MiXeYWPW`oc`5qe0Tt+LSsP[J%No.HJ0LjZW^-m`/7m.(oM`XOWnf?(i"/O*M^_pg1#J^NOQ$UT=i7CL7]b(P]p)GRg-392'#i$-.PtO[S>`dq&DBmY3E8$WD)3_4=%n:h.NO\EXEd?'_ZVlIDn1QK]h5q<]Zl<G.oS*C>NdoIA0$/r.W<=jsM(mTU]$m0>QU\<s*6D,>8:I\lQdauG0D1&^beTPR0"&XVB%lr%dInae+U)e#_Hl5kgA$%/#Zq0eQgNo2;/S-MUumWq)5QSuc54;T"8"0%0f#F/i3bhU4l_B_Uh(Sjo]a&-LR7t4>`EP<m^n.TkB%Qo>&_7]h!r@>6DbZ,"@r;==gfB_h$QPQ*S9\T*Io'!8%-+ik).]5=JT6K=m/\dFF$#g:Y=APE1;JVuDTOS!W>8pZ(]Nl!0ZPk5(e%-h`;^KaVI5Om0lqekd=;,6Ofb*S^`u5hIs5-3!*ZGsRt:E+$Xi=!SC+ZNjib_QlC!0JIHff316,F115jKQ3,f&<Gj*,R<W^MI"$_%*uN?'UI\Odc'PfK1-T#A)&)TVp'89LJ`)`[<gVXE3f!mgNWmA?)Al@75_=?IZj*s82\0)H^6q_VCUcV`S1WBr0P.L7gda$-5hgqH%Q\&?l=)YHt2e^nk_tR<_O$RSS;\QoB%;e8rSlVr<ZcOK%'l9;SLN3I_\kEcYX7!A!5DS6&5f?U>n.%&,^mH9FSb<B.k5r`FOEhc0%2@(M+cnb#fBe._f+o*h@YnfLY]kQt_`>:?f-C8#a<0)\!N`s"f-:)3F"LEZ88''D`Z5HcXY1r,rUimm'MaqV[G]OCkOd<%cK&Ba@%#lK4Ab,Oq*\1PM$%Dr<maZ0GB.T4+pKo[&WCD>a@W2.m7Whe6=I%G:_b,*SplKg(41O8&!'WIVn2/#!0&\A;Y/5*OgD3[^]L-b_i%<DI3,ND@`u&%bDse-H)\:eTF9B"<)IVLV:j0CNk)iN/psZ#;b*'TW=ci$Lt#ac;QJVX2t)a^@c&cSI8&dLHH5PCa<PeTHr-)V--5%%B'Y]C@G:L2VqQ%.+^7Yc=M]PBm-PF>VomN=F`>NanMib`h6RX5<][jWc1d&X5!!*`8NNT)Vm#Ai7Z(NDDNQWYV]_I'hDZ(*\=Ai%(k7P5=A#E?<t%i`cPt0cHNjWjJs@06mBH2Fpq_MlD05!NZ,Yc'D-63p;)U&%i5$.jQ<:U`k)i90nI1%__&85PnEJZPYXJaTY!B4M%/kK\n9ZsBSDETLcFdb.I7L2b0O)I(\OO!Ft/J?f&*`1_m+(FcphgYF\DuQI/gE1qEo@oW3rVGh%rp]0-+9(NJ:LF.tf.[0oQ`n/Q%qWYIBs8DW^Q_/d,jnCFCJ,QSJIm3o)ldt$Cs5hk9T7?b4?iC;Oh'JNinA?@JnaA^@+8p8s:]~>%AI9_PrivateDataEnd
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: CrownLeaves BW.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Stephanie Mason
%%CreationDate: 8/21/13
%%BoundingBox: 0 0 233 278
%%HiResBoundingBox: 0 0 232.4532 277.9249
%%CropBox: 0 0 232.4532 277.9249
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 108 128 8%%BeginData: 13910 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA8525252A8FD66FF7D527DA87D527DFD65FF7D7DFF527D27%7DFD64FF7D27275227F827527DA8FD61FF7E2E5227A8A827527D7D52A8FD%5FFFA8277D27275352F85252FF277DFD5FFFA8527DA82727F82753FF5227%A8FD60FFA852F8527D532727F827A8FD62FFA87D527D522752A9A8FD65FF%27F827F852FD61FF7D52A87D527D527D7D2727A87DFF84FD56FFA8FFFFFF%7D5252A8A8272752F8272752F821277D275352527DA8A8FD4DFFA8527D52%7D52FF7D7DA85252522727F82727A852FD0427525227525227A8FFFF53A8%597DFD45FF7DA8277D5252A827277D7D7D5227F827F827277D272727A827%27F827F827F87D5252277D277D7D527DFFA8FD40FF7D52A85252FD0427FF%84522727F827277D5252FD057D522727F827F827202752522727527D27A8%7D52FD3FFF59525252F8527DA8F82752522727F82127FFFFA82E527DA827%7D277DFFA85221F827F85227522727F8277D52F85252FD3CFFA8A8FF52F8%A8FF7D2727FF522752272727FFFFFF7D7DA85352527D527DFFFFFF7D5252%2759A8525227537D52F852A852A8FD3BFFA82753277DA852F827527D2727%F827F87DFFFFFFA852527DA8277D277DFD04FF5252277D5227F827F8527D%7D277D2752FD3BFF527D27277D27F827275252522752F827FD04FFA85252%52272752527DFD04FFA82852F8272752F827F8527D52F87D52A8FD39FFA8%52A827F852F8FD0427FF2752282127FD05FFFD0427F87D2784FD04FF7D52%2752522827522721F8527D52A87D52FD3AFF5252F852522727FF527D5252%27525252FD05FF7DF8A8FF52F827A8FD04FF535252272752527DFF522752%A82752277DFD39FFA85252272752F852FF7D522727522727F8FD05FF7D28%A8A8A827F8FD05FFFD05277DF87DFFA8F8527D277D2752FD39FFA87DA852%2752277DFFA827527E277DF8277DFFFFFFA87D27A87D7DF827FD04FFA827%27A8275227277DFFA827527D52A82752FD3AFF522727F852F852FFFF2752%FF275227272E59FF52272E275252F827277DFFA87D52F87D7D27F827F8FF%FF7DF87DF827522753FD39FFA8277D7D272E52F8A8FFFF277D5227F85252%52275253A87D272727FFFF525252A87D275952F852F87DFFFF275227277D%7EF8FD3AFF7D27FF7E52FD0427FFA87E2752F852A8522727277D277DF827%277D2727F8FF7DFF5227F82E7D277DFFFD042752FF5227A8FD3AFF52527D%7DF827F827277D7D7D27277D7DFD0427F8272752277D27272752522752A8%F827A8FF275252FD042752522752FD3CFF27A87DA85227525227522727F8%2E7D27F8A8FF7D285252527D5227A8FF52F87DA821277D2727F827F87D2E%2727A8277DFD3CFF5227A8FFA82753A827F827205227A87D5252A8272827%28FD0427527D5252FF7DF87D522727A827A8FD052752A8FD3CFFA852F852%52277D7DF87D27522727275252525952527D527D7D5252FF7DA8527D2727%5252F87DA8527D27F827277DFD41FF2727F87DA8A87D2727527D7D7DA8A8%7D5252275227522852527D52FD047D842727F8272752F8277DFD43FFA8F8%27277D527EA87D52522727F827275227277DFFFD0452F827F827277D7D7D%527D272127277DFD45FF522752527D525227522752A8FF52525953F87D7D%52527D7D2727A8A8FF2727F8527DA87D2752FD46FFA8A85227F8FD045227%27A85227F8FD082752F8277DFFA85227522727F827F852FD47FF7D27F8FF%FFFF27522727277D7DA884A87DA87DA8A8FFA8A87D7D5227F85252A827A8%52277DFD47FFA8F852597DF82752FD057D5252FD07275252A8FD047D5352%272128527DFD49FF522727277D7D7D52597DA8A87D525227527D52F82727%525259525352FD047D5252FD4AFF52277D7D52522EA8847D7D7D527D5227%52FF7D5227522727F827F852527D52A8527DFD4AFFA8F82727AFFFFF5252%27FD08527D59FD057D5253F82727842727A8FD4BFFA827522E537D7D5252%527D527D527DFD08522727F827F827277DA8FD4FFFA87D7D527D527DFD06%52FD0627F827277D7DA8A8FD0FFFA8FD48FFA8FFA8A87DFD04A8FFA8FFA8%FD0EFFA8537DA8FD04FF2E27FD62FF28272752527DA8FF52277DFD32FF52%27A8FD2CFF52277DA8FFFD04527D27A8FD2EFFA87D527D52FFA8A87DFD29%FF7D527E5352FFFFA827A8527DFD2DFF7D5228A85252527DF852FD2AFF52%7DFF7E277DFF52527D27FD2CFF7D277DA852277DFF7D27A8FD2BFF527DFF%A827527E7D8427A8FD25FF7D52FF537DFF52527D277DFFFF7D217DFD2DFF%5252A87D5252275227A8FFFFFFA8A8FD20FF277DA85252A8277D52FFFFFF%52277DFD2FFF7D527DFFFF7DF8277DFFFFFF277DFD1FFF5252A8537D7E27%2752FFFFA82727A8FD31FFA87D527DA87DF85252FF7D2727A8527EFD1BFF%A852527D52FF532752FF7D52277DFD32FFA8A87DA87D7D52272E27527D52%FF525252FD1BFF7D527D277DFF27F87D5227F852522727FD2FFFA827527D%27527D522727F852277DFF5252597DFD1AFF7D7DA87DA8A8F8FD04275252%7D27A8FD30FF277DFFFF52A8522727277D277DFF7D7D527DFD1AFF7D52A8%2EA827522727527D7DA82852A8FD30FF52F8527D2752A87D27F827F8527D%7D525252FD15FF52A8FFFFFF7D52FF527D27277D7D7D5252275227A8FD30%FFA827F852FFAF527D7D7DF827277D7D535252FD12FFA8FFFF2752A8FFFF%FF21522752F8A87D2752A8A87D277DFD32FF5227F852A87DF8277D7DF827%277D527D28FD12FF5252A87D2827A8FFFF52F82752FF5252527D525228FD%35FF527D2727277DA87D7D52F852527D27A8FFFFA8FD0FFF7D27285252F8%52FFFF7D277D7E5227272700527DFD36FFA828A87D52F852535227272752%2727FFFF5953FD0FFF7DA8A8522752277DFFA852AFF827F8527EFD3AFFA8%52527DFF7D272152275227277DFFA8277DFD0FFF7D7DA82727277DF8A852%842727F852FFFF7D527DFD39FF5252527D52285252F82727FFFF52277DFF%FFFFA8A8FD0AFF7D52527D5227A852277D7D27FFFFA87D527D277DFD3CFF%7D7D52275227F853FF7DF8FF52FFA87D52FD0BFFA87D59277DF87D5227A8%2753FF7D27277D5352FD3AFF27527DFFFFFFF8595227A8FF2727A87D7D27%7D59FD0BFFA8527D27277D2752277D277D527D537D5252A8FFA8FD38FF53%7D5252A8FF7DF8A852FF7D27527D7D27275252FD0CFF287DA8277D27F87D%2727277D7D52F827527D2752FD38FF7D527D7D5252FF27527D7E52277D27%52275227A8FD0DFF52FFA87D5227522727A85328527D28527D52A8FD35FF%A884A8FF277D52FF527D7D277D52F8A87D52F8277D7DFD0EFFAF27A85252%F87DF87D522727597D7D2727A8FD37FF272752527DFF537D2727F87D2727%7D522727525252FD10FF5252F8525227272752A8A87D27277DFD39FF2752%7D5252A8527D52275252F85227525252F8A8FD11FF52277D27F852522827%27277DFD3BFF7D287D5227277D2853F8525227F8522752F852FD11FF5252%52A9F8527D7DFD41FFA87D7D2727F8FD0427A8F85227272752FD11FF7D59%7D277D27275327FD43FF597D2727F82727527DFD042728A8FD11FFA8F827%52A8F827277DFFFFA8A8FD43FFA852522EA82E272752A8FD13FF7D00A87D%27A8FFFFFF7D2727FD46FF5227282727A8FD12FFA87DFF7D7E7D27FFFFFF%7D522752FD3EFF597DFD06FF527D27277DFF7E52A8FD07FF7E27527DA8FF%FFFFA827A852A85252A9FF52277D5227A82759FD3BFF27F87DFD05FF5252%2752FF5227F8A8FD08FF8427537D5252A87D7D7D52A85252FFA87D52A8F8%5252277DFD3BFF2752527DFD04FF5252527D7D277D52A8FFA87DA8FD05FF%7DF8A8FF7D2752847D27FF5227A852277D5252A852F8A8FD38FFA8FFA827%7DA827A8FFFFFF52285252277DA852FF525227A8FD06FF52F87DFFA9F87D%FF59A87D27A82752527DFF7D52A8FD38FF7D527D7DF8A8A88452FFFFFF52%52522752A87D52527DFF59A8FFFF527D7DFF7D27F87DFF7D277D52845227%7D27F8A8A87D27527DFD38FF7D597D2827FD047DA8FFFF522752F87D5252%527DFFA852FFFFFF7D277D5252F82727A8A87D2727A8A8277D2727A852F8%2727A8FD38FF7D7D7D5227FF7D7D277DFFFF527D27275252537D52FF52A8%FD04FF7D53FFA87D2752F87D7D7DF87DFF27F8277D7DF87D2727FD3AFF27%A8522753A8522728FFA8527D27F8277D7D52A852527DFF7DFFFFFF7D59FF%FFA82752277D7D7D52FF522727A827FF7D27A8FD3AFFA852A82727A87D27%52FFA820A8F827527D5284522752A87D52FD04FF52277DA8A827275252A8%7DA87DF87D7D525227A8FD3CFF7EF827F852FF5227FF27525227F852527D%27527DFFA827A8FD05FFA8525252A8527D5252527DFF2727522752A8FD3E%FF7DF827F8847D277D275252F852272827FD047D277DFD06FFA87D272727%537D7D272753A97E21F827A8FD40FFA8F827F8A85228F8A82727522852A8%525227277DFD04FFA87D597D7DA9A97D205259A8A8FF7DFF52527D277DFF%FFFFA8FD3DFF5227F852F8527D277D52527D525227277DFD04FF5227277D%527D52522827F827F827277DA852527DF827FFFF7D2752FD38FFA87EFFFF%FF7D52F827A852F852F827F827F82752FD05FFA8FFFF7D7DFD05277D2E27%F827F8A97D27F8277DFFFF7D7D7D52FF5252A8FD2DFF7D7DFD04FF277DA8%FD04FF2752A82752F87D5252527D525227527EFD08FF7D7D527DFD045227%5227FF272159FFFFFF2EA8A87D5252F87DFD2DFF52F852FFFF277D277DFF%FFFF7D27FF2727A87D2752272727522727F87DFD0FFF7D2752277DFFF827%FFFFA87DFFA8A852A82752FD2DFF7D52277D52A8A85252FFFFFF27A87D7D%5952FFFF7D52285228527DFD11FF7DF827F852FF7DF852FFA827FF525227%52F827FD2DFFA852A8F87DFFA85252FFFF277DFF7D527DF8A8FD1BFF7DA8%5252FF52F8A8FF277D7D2827522727FD2DFFA8527D5352A87D2752FF7D52%A8592727277DFD1FFFF87D7D2727FF27522752FD04277DFD2CFFA8217D7D%525252F87DA8277D7DF852A8A8FD20FFA8F8A8A82752522752527DF827F8%A8FD2CFF527D7D7D275227277E52527DF827FD1FFFA8FFA8FFFF59F8A852%27F852F8A85227F827A8FD04FFA8A8FD20FFA8A8FFFFFF7D52A852522752%27275227FF5227277D5252277D5253525252FD10FFA8FD057D277D527D52%2727A85327527D7D52272752FD05FF277DFD20FF2E52FFFFFF527DA82727%52A8F82727FF7D527D7E5227277D7DA8FF52F87DFD0FFF7D52F87DA8AFA8%FD0452A87D7D7DA8FD04522727F87DFF527DFF59277DFD05FFA8A8537D7D%FD0BFFA853A8AF27527DFFFFFFA82727A8FFFF527DF82727522721F87D52%527D7D272727A8A8AF7D27F87EFD12FFA852522E5227275252277D7D7DA8%A8FD04522727FFFF27277D7D5252FD04FF7E52A8FF7D7DA8FD09FFA8527D%FFFFFF522752FFFF52F8527DFF7D7D28277D522727F8A884527D7DFD0552%7D525252FD15FFA85227272752522752527D522727525252272752FFA852%522752A8F8AFFFFF7D52A8FF7DA852FFA8FD07FFA827A8FFFFA852A87D27%7D7DF827277DFF7D27277D7DF82727A8A85253A8A8845227F827F87DFD15%FF527D28272784A87DFD0427F8527D527DA85227F85252A9527D27A8A827%52FFA85252FF5227F8525227A8FD06FF527DFFFFA82727F8FFA852275952%277DFF7D27527D275252A87D27F8522727F827F852A8A8527DFD13FF522E%7D52527DFD0427F85252522727F852A8FF522127277DA8002753597D527D%FFA82752A92752F8522752FD05FF7D27A8FFA8F827F827527DF827525227%FFFF7DF8522752527DF8272721F8527D52277D52A8A87DF852FD13FF7D7D%52522727F852F8527D7D527D52272727A8FF5227F87DFF52F87D52527D27%FFFFA82752A8522727A8F8A8FD04FF5252A8FF2727275252525352F87D27%7DFFFFFD04275253F8277D7DF82752FD0427522728277DA8FD16FFA8A87D%A87DA87DA8A8FFFF7DF827F82752A87D52F8272827277DF8A82752FFFFA8%2727A82E27525227FFFFFFA82E277D2727F85227527DFF52522753FF7D27%27277D5228F8527D522752F852F87D7DA87D7D527DFFFF527D7DA8FD10FF%A8527D7D7D7EFD07FFA8525252A87D2752A87D2727F82752527D7DF8FD04%FF52277D52275227A8FFFFFF5252F8525227F8527DFFFF7D52527D7D2727%277D2727F853FFFFA8FFFF7D52A8FFFFFF7D277DA8FFA87D525228527DFD%0AFFA8A859527DA8A87D2E272752A8FD0BFF522752A87D52F85227277D27%7DFD04FF7E27522752275252522E522752A827F87DA8A8FFA827275252F8%522727F827277DFD0AFFA827F8537D7D2727F82752272752A8FD09FF5252%A8A8A8595227272752F852FD0CFF7D27F852527D7D52272720A8A87D5259%5252F827275252A87DA8FD057DA8FFFFFFA8FD0427F8277D52F827277D7D%A87EA9FD07FFA8217D7DA8F8275252277DF87DA8FD0AFFA8527DFF522727%FFA8272727F8A8FD07FF7D2727F827275227525252597D52522727F85252%2EF827F852A852A8A87D7D277D277D52522727F827277D59522752527D7D%7DFD0452217D52A8FD04FF7D2E7DFF5252FD04FF52277DFD0DFF527D5227%FFFFFF27525227A8FD06FF52F827277D5352277D7D7D2752A8FFA852FD06%27F87DFF7E52A85252277DFD0427F82721275252275252A852527DA87D7E%525227272752527DFFFFFF7D7D7D53527DFD05FFA8FD0EFF7D52F8A8FFFF%7D27275227FD06FF59277D52525253275252522721F827F827F87D272100%27F8277D52F827FF52217D7D52F8272752F82121522721F8277D7D277D27%595227F827277D7D7D27A8FFFF7D52527D7D7DFD15FF527DFFFFFF7D2184%52A8FD04FFA8A8527D598452522727F827527D2728F827F8275352F8FD04%27A87D2727522727527E52272852277D7DFFFFFF52FD042752FFA8275227%2727A87D52287EA8FFFFFF7D52A8FF7D52FD19FF2752527DFD04FF5252FD%04FF7D845227527D5252272727522727F827277D527D272752FF2727F827%27A859272727F8275252527D7DA8F827522727272852F82752522852527D%52527DFFFFFF7D52A8FF5252FD17FFA828A8527DFFFFFF7D53FFFFA87D2E%27A852A8A87D2727A8FFA8527D527D7EA87D7D5252F8277D5252A8A87D52%27F828F827F82727522752522727527D52537D7D7D52522727277D7DFFFF%FF597DFFFFA852527D52A8FD16FF7D7DFFF8A8FFFF7D52A8A8A827272152%A82727F8277DFF7D59527D7E845252527D5352272727527DA8FFFF522752%27F852F821F827F821F8282727527D277DFD04FFA82727A827527D527DFF%527DFFFF5227525252FD16FF27FFFF5284FFA852A8FFA8A8F82727FF5227%F8527D52527DA8A85252527D7D7D272727FF5227F87D7D5227282752F827%7DFD045227F82720272752527D537D7DFFFF52527D28277DFFA87D52AF27%A8FFFF2752527DFD15FFA8272EFF5252FF7D287D527D2727F87DFF7DF852%7D7D52A8FF7D527D7D7D2727F8527DFFFF52F827F87DF827F827F82727FD%06FFA87D27F827F827F852527D52272784285227FD04FF7D59FF527D5227%27277DFD16FF27277D7DF8522852527D522727FFFFFF527D7D59595227FF%7D7D5227F85252A8FD04FF5227F827A8272752F8522752A8FD07FFF82727%27F8272727527D2752A87D5252FD04FFA8535252F827272752FD17FFA8F8%277D7DF827F8272727F8A8FFFFFF52277DFF7D7DA87D27277D27FD07FFA8%2752522752F8525227F852277DFD06FF2E215252F827F827F8FD04277D2E%2752FD05FFA8A87DFD04A8FD19FFA827272752F827F82752FD05FF277DFF%FFA8A85227277D7D2727FD05FFA85227522752272852275227277D527DFD%04FF5227527D59527DFFA852F8272727527DF87DFD27FF7E847D7D527D7D%FD05FF5227F827F827F852277D527D595252527D7D52527D7D277D272752%52F85221277DA87D7D527D52537D527D7DF8A8FFFFFF7D0027F82727277D%FD34FF7DFD0452A8FF7D27845252A8FF7D527DA87DA8527D7D7D27A85227%527DF852A8FFFFA8A8A8FF52A8FF2727FD06FF7D7E537DA8FD3CFFA85252%527DFFFFFFA8FFA8520052527DF827FF7DF8FFFFA8272753FF52A852A87D%5227217DFD49FF7D527D7DA87D7D2727277D52522827A8FFFF5252FFFFFF%5227527D527D277DF8277DFD4CFF7D7E7D52F8527DA87DA827277DFFFFFF%A9527DFD04FF7D21FD04277DFD51FF5228FD04FFA8277DFD05FFA8277DFD%04FFA852FD54FFA8FF7D7D52FFFF5227FD07FFA85252FF7E52FF7D7DFD57%FF7E52A827FD0AFF7D52FF27525252FD58FF52277DFD0BFF7DFD0427F8FD%58FFA8A8FD0DFF7DF8A8FF7DA8FD67FF527DFD2AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068119457F77A548AA4A4</stEvt:instanceID>
                  <stEvt:when>2013-08-02T14:21:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03801174072068119457F77A548AA4A4</stEvt:instanceID>
                  <stEvt:when>2013-08-02T17:08:59-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811AB08984B6CFD48A5</stEvt:instanceID>
                  <stEvt:when>2013-08-07T12:19:50-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197A5B65486A382ED</stEvt:instanceID>
                  <stEvt:when>2013-08-08T13:46:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811AB08E80F231C7E94</stEvt:instanceID>
                  <stEvt:when>2013-08-14T14:35:56-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811AB08A26748D715E1</stEvt:instanceID>
                  <stEvt:when>2013-08-15T15:32:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:32:48-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AEA058AE0920681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:53:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B4A058AE0920681197A5E80F29C0D37F</stEvt:instanceID>
                  <stEvt:when>2013-08-21T11:58:21-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>xmp.did:01801174072068119457F77A548AA4A4</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:B4A058AE0920681197A5E80F29C0D37F</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:B4A058AE0920681197A5E80F29C0D37F</xmpMM:DocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:AEA058AE0920681197A5E80F29C0D37F</stRef:instanceID>
            <stRef:documentID>xmp.did:AEA058AE0920681197A5E80F29C0D37F</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:01801174072068119457F77A548AA4A4</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:ModifyDate>2013-08-21T11:58:21-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2013-08-21T11:58:21-04:00</xmp:MetadataDate>
         <xmp:CreateDate>2013-08-21T11:58:21-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FVC+vrKwtJby+uIrSzgUvPczuscaKOrO7EKo+eKvmvzb558t6ta67qnmbWrTW7jStR&#xA;mttP8vR3CPpzWhgd7S4t4oZB9akZuAd5C3A8hxXCqdflJ+bvl208xXuhDV7e08mRW8L6d+krlTND&#xA;ezla2ts7tya2QFvtcuBFOXGmKvoFWDAMpBUioI6EYFdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;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&#xA;VdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -277.925 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 277.925 li
232.453 277.925 li
232.453 0 li
cp
clp
[1 0 0 1 0 0 ]ct
107.208 23.7017 mo
105.948 23.8076 103.533 23.6943 102.5 23.8638 cv
102.439 22.0947 107.09 21.9653 107.208 23.7017 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
ef
120.683 22.7275 mo
121.307 23.5034 121.668 25.0142 120.357 25.3252 cv
120.44 25.085 120.597 24.9155 120.683 24.6753 cv
120.087 24.6753 119.491 24.6753 118.896 24.6753 cv
119.129 23.9351 120.648 24.4795 120.683 23.5391 cv
120.756 23.0317 120.335 23.02 119.87 23.0522 cv
119.895 22.6973 120.279 22.7036 120.683 22.7275 cv
cp
ef
90.4868 30.1943 mo
90.541 28.5713 89.748 27.7939 89.0249 26.9482 cv
90.3516 25.9893 91.4736 27.6382 91.4609 29.0586 cv
92.2974 28.2705 94.7168 27.6616 96.6563 27.4355 cv
96.8052 28.002 97.0596 29.1021 96.8174 29.5459 cv
96.0015 29.7129 95.9268 29.1372 95.5186 28.8965 cv
93.0439 28.4551 92.4775 30.6816 90.4868 30.1943 cv
cp
ef
163.863 31.0068 mo
164.807 32.228 163.739 34.9243 162.401 34.416 cv
163.545 33.9351 164.084 32.8501 163.863 31.0068 cv
cp
ef
164.677 31.8184 mo
165.043 32.9458 164.619 34.6821 163.376 34.7412 cv
164.183 34.1396 164.47 33.02 164.677 31.8184 cv
cp
ef
73.7656 35.0654 mo
74.8872 35.9072 73.7764 37.8877 72.4668 37.8252 cv
73.2334 37.168 74.3086 36.5703 73.7656 35.0654 cv
cp
ef
169.222 35.228 mo
170.45 36.0693 169.592 38.0557 168.734 38.6367 cv
168.149 37.9346 169.589 37.874 169.385 37.0127 cv
168.849 37.3984 168.592 38.0615 167.599 37.9873 cv
167.976 37.1045 169.963 37.1089 169.222 35.228 cv
cp
ef
74.9014 36.04 mo
74.7075 37.2515 74.2793 38.229 73.2783 38.6367 cv
73.9209 37.8726 74.2544 36.7983 74.9014 36.04 cv
cp
ef
120.194 38.3125 mo
120.829 38.8276 119.252 39.8262 118.247 39.7729 cv
118.695 39.085 119.908 39.1616 120.194 38.3125 cv
cp
ef
172.793 40.9092 mo
173.624 42.249 171.659 43.5483 170.521 43.9937 cv
170.86 43.5981 170.753 43.6479 170.684 43.0195 cv
171.428 42.3584 172.918 42.4419 172.793 40.9092 cv
cp
ef
171.656 47.8901 mo
171.786 48.2827 172.325 47.3813 172.631 47.8901 cv
172.671 49.5552 171.696 50.2021 170.521 50.6499 cv
171.066 49.79 172.246 49.5615 172.305 48.2144 cv
171.006 48.2905 170.914 50.3638 169.709 50.0005 cv
170.585 48.9297 171.398 47.7954 172.144 46.5913 cv
172.092 47.1353 171.976 47.6147 171.656 47.8901 cv
cp
ef
71.3311 46.7544 mo
72.2979 46.9326 70.7056 48.6689 72.1426 48.3774 cv
72.127 49.4434 71.6816 50.0811 71.168 50.6499 cv
70.9351 50.1943 71.8013 49.4463 71.8184 48.7017 cv
70.8481 48.814 71.3618 50.4116 70.0322 50.1636 cv
70.4868 49.0483 71.5049 48.4971 71.3311 46.7544 cv
cp
ef
139.188 64.4482 mo
138.867 65.6006 137.033 64.8726 135.942 64.6113 cv
134.928 64.3677 133.153 64.1489 133.182 63.1494 cv
135.408 62.4023 137.653 63.5327 139.188 64.4482 cv
cp
ef
151.201 81.6567 mo
149.844 82.1519 148.381 81.2515 146.98 80.8452 cv
144.164 80.0273 141.078 79.4673 137.729 78.897 cv
136.267 78.6479 134.592 78.4941 133.345 77.7603 cv
133.345 77.5981 133.345 77.436 133.345 77.2729 cv
133.477 77.2422 133.506 77.1104 133.669 77.1118 cv
138.111 77.6392 143.621 78.6494 147.792 79.8706 cv
149.046 80.2383 150.753 80.5503 151.201 81.6567 cv
cp
ef
118.896 80.8452 mo
117.579 81.5527 114.805 81.0889 113.377 80.8452 cv
113.377 80.5742 113.377 80.3037 113.377 80.0337 cv
114.901 79.9863 118.336 79.3921 118.896 80.8452 cv
cp
ef
73.4414 52.9224 mo
73.8804 53.187 74.0093 53.7617 74.4155 54.0591 cv
74.29 55.1782 74.1475 56.2808 73.2783 56.6563 cv
73.5112 55.7524 74.1177 55.2227 74.0913 54.0591 cv
73.2163 54.4292 73.4038 55.8613 72.4668 56.1699 cv
71.8242 54.7656 73.6895 54.4707 73.4414 52.9224 cv
cp
ef
87.2402 78.897 mo
87.6255 79.2344 88.1729 78.7505 88.5391 78.5718 cv
88.0474 78.623 87.2764 78.3921 87.2402 78.897 cv
cp
149.902 77.1118 mo
150.269 77.1895 151.118 77.6128 151.364 77.2729 cv
150.868 77.1201 150.855 76.4834 150.227 76.4614 cv
150.144 76.7021 149.988 76.8711 149.902 77.1118 cv
cp
86.2661 79.8706 mo
85.8472 78.814 85.3477 76.4707 84.9673 74.8384 cv
84.1016 76.2832 84.2456 80.9165 86.2661 79.8706 cv
cp
142.599 75.0015 mo
143.107 74.9224 143.232 75.2319 143.572 75.3257 cv
143.792 74.502 142.775 74.5684 142.599 75.0015 cv
cp
83.02 74.6763 mo
83.1348 75.2637 83.0806 76.0215 83.3442 76.4614 cv
83.4126 75.6064 84.0283 74.4458 83.9927 74.0269 cv
83.749 74.3232 83.293 74.4087 83.02 74.6763 cv
cp
100.227 74.8384 mo
100.846 74.5918 101.769 74.6484 102.176 74.189 cv
101.441 73.6367 100.576 74.1401 100.227 74.8384 cv
cp
89.188 72.5654 mo
88.1372 73.8657 85.9307 74.7949 86.5903 77.2729 cv
87.7944 77.4766 89.3013 77.3755 90.4868 77.5981 cv
91.8164 76.3838 93.084 75.1099 94.3828 73.8643 cv
94.02 73.7944 94.3179 73.064 94.2202 72.728 cv
92.4541 72.7622 91.042 72.4434 89.188 72.5654 cv
cp
147.143 76.7866 mo
147.693 76.8325 148.075 77.0449 148.767 76.9487 cv
149.116 75.4614 150.935 74.0703 149.902 72.2407 cv
147.741 72.5142 147.496 74.7036 147.143 76.7866 cv
cp
130.747 72.5654 mo
131.1 72.7095 132.21 72.9297 132.37 72.728 cv
131.953 72.3882 131.605 71.9785 131.071 71.7539 cv
131.002 72.0635 130.723 72.1616 130.747 72.5654 cv
cp
144.871 75.9741 mo
146.087 75.7617 147.235 73.2773 146.656 71.2666 cv
145.094 71.7725 144.497 74.0703 144.871 75.9741 cv
cp
116.136 71.2666 mo
116.065 70.7979 115.795 70.5269 115.325 70.4551 cv
115.227 71.0952 115.688 71.1743 116.136 71.2666 cv
cp
93.8955 70.4551 mo
93.5713 71.7256 91.0703 71.5459 94.2202 71.5918 cv
94.0898 71.0293 94.4619 70.9678 94.3828 70.4551 cv
94.2202 70.4551 94.0586 70.4551 93.8955 70.4551 cv
cp
81.395 71.105 mo
82.0747 70.8101 82.7344 70.4971 83.1812 69.9683 cv
82.5791 69.9756 82.7856 69.1733 82.2065 69.1563 cv
82.0688 69.938 81.5332 70.3232 81.395 71.105 cv
cp
139.514 68.9946 mo
137.389 69.5215 135.542 70.3252 133.345 70.7798 cv
134.203 71.9785 135.574 74.3281 137.565 74.3511 cv
139.181 74.3706 141.149 72.6865 143.247 73.0522 cv
142.598 71.7539 140.802 70.1948 139.514 68.9946 cv
cp
107.858 69.8057 mo
106.657 69.3286 104.891 69.417 103.475 69.1563 cv
102.5 70.1841 100.898 70.5854 100.551 72.2407 cv
101.312 73.1055 103.151 72.8862 103.636 74.0269 cv
104.019 74.0303 104.114 73.7471 104.61 73.8643 cv
105.44 72.1509 107.205 71.3721 108.831 70.4551 cv
108.73 69.9614 109.039 69.0566 108.669 68.832 cv
108.564 69.3228 108.415 69.769 107.858 69.8057 cv
cp
97.9536 69.1563 mo
97.4893 70.6147 97.5327 73.5801 98.4404 75.0015 cv
96.2651 75.5249 96.228 71.417 96.8174 69.6436 cv
96.2344 69.6001 96.0356 69.9429 95.5186 69.9683 cv
95.1387 72.3247 95.1914 75.2861 96.9805 75.9741 cv
97.8198 75.7314 98.4502 75.2798 99.415 75.1626 cv
98.793 73.9478 97.6245 69.8247 99.7412 69.3193 cv
100.121 69.479 100.124 70.0166 100.39 70.293 cv
101.071 69.5122 102.078 69.0601 102.661 68.1826 cv
100.979 68.394 99.623 68.9312 97.9536 69.1563 cv
cp
81.5581 69.4814 mo
81.5894 69.0508 82.7344 68.2832 81.8823 68.0205 cv
81.8496 68.4834 81.1299 69.0947 81.5581 69.4814 cv
cp
157.532 68.1826 mo
157.399 67.7241 157.762 67.7622 157.695 67.3711 cv
156.86 67.6729 155.859 67.8076 155.259 68.3447 cv
156.285 68.5649 156.889 69.2065 158.02 69.3193 cv
157.453 68.481 158.555 67.4824 158.344 67.0459 cv
158.032 67.3828 157.832 67.8325 157.532 68.1826 cv
cp
131.722 68.6699 mo
131.594 68.1475 131.498 67.5938 131.232 67.209 cv
130.22 66.9341 129.903 67.6572 128.8 67.6953 cv
128.28 69.0166 128.1 70.6768 128.149 72.5654 cv
128.582 72.5654 129.016 72.5654 129.448 72.5654 cv
130.831 71.4653 129.698 68.3228 130.908 67.3711 cv
131.674 67.3096 131.045 68.6411 131.722 68.6699 cv
cp
127.338 67.6953 mo
125.341 65.6309 125.048 69.6172 125.228 71.7539 cv
126.072 71.7212 126.41 72.1943 127.014 72.4038 cv
126.992 70.4858 127.287 69.1777 127.338 67.6953 cv
cp
119.545 67.0459 mo
118.543 68.0459 117.122 68.6265 116.136 69.6436 cv
118.228 72.0796 121.89 70.915 124.09 69.3193 cv
123.644 68.1411 121.06 67.6968 119.545 67.0459 cv
cp
111.753 67.3711 mo
111.267 67.3711 110.78 67.3711 110.292 67.3711 cv
109.147 70.0479 110.423 73.9897 113.702 72.2407 cv
113.113 71.6953 114.243 71.4937 114.35 71.105 cv
113.677 70.0903 114.225 68.396 114.188 67.0459 cv
111.956 66.959 112.412 70.5449 113.051 71.9165 cv
111.324 73.6079 110.999 68.7095 111.753 67.3711 cv
cp
123.441 67.3711 mo
123.749 67.3345 123.799 67.5532 124.09 67.5332 cv
124.063 67.1655 124.872 66.8193 124.416 66.5586 cv
124.379 67.1182 123.746 67.0801 123.441 67.3711 cv
cp
80.9097 68.832 mo
81.6079 68.4487 82.25 67.0273 81.5581 66.2344 cv
81.4463 67.1343 80.5059 67.9443 80.9097 68.832 cv
cp
148.117 66.2344 mo
147.862 65.8931 147.324 65.8369 147.143 65.4229 cv
147.006 66.0566 147.723 66.6709 148.117 66.2344 cv
cp
158.344 68.832 mo
159.071 67.5811 160.646 66.7139 160.293 65.2607 cv
159.663 66.3633 158.203 67.499 158.344 68.832 cv
cp
80.5835 68.0205 mo
80.6191 66.8022 82.064 65.8496 81.2339 64.7734 cv
81.1704 65.8574 79.7412 67.0879 80.5835 68.0205 cv
cp
141.462 64.2871 mo
141.935 64.4614 142.397 64.6499 143.085 64.6113 cv
143.057 64.3682 143.142 64.0122 142.922 63.9619 cv
142.579 64.7632 141.902 63.8906 141.786 63.4756 cv
141.811 63.8789 141.529 63.9775 141.462 64.2871 cv
cp
162.728 64.9355 mo
163.224 64.2417 164.205 64.0322 164.677 63.3125 cv
163.823 63.5435 162.793 64.4561 162.728 64.9355 cv
cp
159.806 65.4229 mo
160.31 64.7896 161.194 63.6772 161.104 62.9883 cv
160.797 63.8198 159.438 64.4575 159.806 65.4229 cv
cp
120.357 62.6631 mo
120.523 62.6514 121.791 62.6338 120.844 62.501 cv
118.301 62.144 115.044 62.5771 112.564 62.9883 cv
115.36 62.6353 117.741 62.8423 120.357 62.6631 cv
cp
147.143 63.6367 mo
147.378 63.3311 147.506 62.9175 148.117 62.9883 cv
148.163 62.4019 147.406 62.6157 147.143 62.3379 cv
147.356 62.8906 146.782 63.4707 147.143 63.6367 cv
cp
88.2148 63.4756 mo
88.5967 62.9927 89.582 63.1108 89.8379 62.501 cv
89.2236 62.4653 89.0498 61.9902 88.5391 61.8506 cv
88.6216 62.4824 87.9868 63.2363 88.2148 63.4756 cv
cp
141.624 61.6895 mo
141.405 62.6074 141.03 63.3682 140.812 64.2871 cv
141.437 63.8804 141.758 62.3149 141.624 61.6895 cv
cp
160.13 63.7998 mo
160.416 62.8921 161.933 62.3574 161.592 61.3643 cv
161.305 62.2695 159.882 62.8979 160.13 63.7998 cv
cp
93.8955 65.585 mo
94.2822 65.2676 94.8936 65.1763 95.3574 64.9355 cv
95.2905 63.7036 95.2861 62.4092 95.0332 61.3643 cv
95.2227 63.2334 93.7422 64.293 93.8955 65.585 cv
cp
162.891 64.124 mo
163.721 63.4907 165.012 62.46 164.677 61.2021 cv
163.857 61.8462 162.706 63.0186 162.891 64.124 cv
cp
96.6563 64.6113 mo
96.6855 64.3706 97.0474 64.4624 97.3047 64.4482 cv
96.9419 63.2969 96.7754 61.9478 96.3301 60.877 cv
96.4126 62.1489 96.1006 63.8135 96.6563 64.6113 cv
cp
149.902 65.4229 mo
149.494 65.771 148.734 65.769 148.604 66.3975 cv
150.307 66.1841 151.772 67.6587 152.824 67.0459 cv
151.711 66.6997 150.291 66.6577 150.065 65.4229 cv
150.666 64.4575 153.611 65.7129 154.447 64.6113 cv
154.6 63.519 154.651 62.3257 154.61 61.0391 cv
151.614 60.1206 150.9 63.3701 149.902 65.4229 cv
cp
99.5781 63.7998 mo
98.8237 63.0923 98.6099 61.8462 98.1162 60.877 cv
97.834 60.8887 97.6118 60.8408 97.4678 60.7148 cv
97.8726 61.9346 97.9907 64.3022 99.5781 63.7998 cv
cp
97.9536 64.2871 mo
98.208 63.1377 97.2363 61.8862 96.9805 60.7148 cv
96.9277 62.2827 97.1665 63.5586 97.9536 64.2871 cv
cp
157.858 65.585 mo
159.523 64.189 158.864 58.3657 156.233 61.0391 cv
156.347 62.2886 156.072 63.1494 156.072 64.2871 cv
156.649 64.4204 156.783 63.2798 157.208 63.7998 cv
156.636 64.5259 155.646 64.8345 155.748 66.2344 cv
156.505 66.0737 157.098 65.7456 157.858 65.585 cv
cp
83.1812 61.8506 mo
83.6621 60.9253 84.7451 60.6016 85.7788 60.2275 cv
84.2612 60.0122 83.0742 60.9834 83.1812 61.8506 cv
cp
148.442 61.3643 mo
149.574 61.5732 150.142 60.3643 150.065 59.9033 cv
149.631 60.4971 148.761 60.6553 148.442 61.3643 cv
cp
147.63 60.3906 mo
148.005 60.3408 147.811 60.8594 148.117 60.877 cv
148.61 60.5596 149.042 60.1797 149.254 59.5791 cv
148.623 59.7583 148.079 60.0273 147.63 60.3906 cv
cp
160.13 62.8252 mo
160.617 61.6328 162.424 60.9014 162.079 59.416 cv
161.523 60.5396 159.932 61.4883 160.13 62.8252 cv
cp
163.539 61.8506 mo
164.143 61.2417 165.897 60.1284 165.162 59.2539 cv
164.549 59.9424 163.005 60.5566 163.539 61.8506 cv
cp
134.48 58.9287 mo
134.76 58.9204 134.896 59.0547 134.968 59.2539 cv
135.509 59.1538 135.521 58.7769 136.104 59.0918 cv
136.336 58.2354 134.841 58.8662 134.48 58.9287 cv
cp
82.2065 59.416 mo
83.0044 59.4302 82.9517 60.2954 83.1812 60.877 cv
83.4355 60.043 85.9092 59.2876 86.2661 60.5518 cv
84.8911 60.8003 83.7959 61.3296 83.1812 62.3379 cv
83.4355 64.8423 83.6563 67.3828 84.3169 69.4814 cv
86.6387 68.2305 88.772 66.792 91.7852 66.2344 cv
91.0889 64.3955 92.9351 63.8569 93.084 62.3379 cv
91.2036 63.9751 88.0845 64.373 86.2661 66.0713 cv
86.2271 65.8403 85.999 65.7983 85.9419 65.585 cv
85.8687 64.9722 86.2612 64.8232 86.4287 64.4482 cv
85.8872 64.6797 84.8491 65.1064 84.8042 64.124 cv
85.4248 63.3926 86.5361 63.1494 87.0776 62.3379 cv
87.4966 59.1973 84.1743 56.8652 82.2065 59.416 cv
cp
163.702 60.0649 mo
164.172 59.3975 165.791 59.019 165.486 58.1172 cv
165.06 58.8296 163.37 59.1343 163.702 60.0649 cv
cp
131.559 58.1172 mo
129.59 57.7139 127.641 58.8154 126.2 59.5791 cv
128.308 60.2856 130.392 61.0161 131.559 62.6631 cv
132.289 61.6069 133.799 61.3325 134.805 60.5518 cv
133.745 60.0444 133.006 58.4136 131.559 58.1172 cv
cp
167.111 58.2803 mo
166.3 57.7681 166.002 57.6797 166.787 58.4424 cv
166.893 59.2026 166.572 60.3857 166.948 60.877 cv
166.951 60.6646 167.398 60.6709 167.436 60.877 cv
167.112 61.0508 166.411 61.6802 166.948 62.1758 cv
168.053 60.8452 170.959 61.3169 170.684 58.6045 cv
169.958 57.9561 168.086 57.7285 167.111 58.2803 cv
cp
158.67 58.9287 mo
158.904 60.1006 159.789 60.6235 159.969 61.8506 cv
160.406 60.438 162.65 59.1382 162.079 57.793 cv
160.943 58.2153 159.874 59.0513 158.67 58.9287 cv
cp
126.039 62.3379 mo
125.124 61.9546 125.021 60.7583 124.903 59.5791 cv
125.001 59.2983 125.673 59.5913 125.715 59.2539 cv
125.475 59.2236 125.566 58.8613 125.552 58.6045 cv
125.859 58.2617 126.486 58.2397 126.688 57.793 cv
125.884 57.8398 125.72 57.2471 125.064 57.1431 cv
124.548 58.3794 123.908 60.1021 124.416 61.8506 cv
124.835 62.0337 125.763 62.5498 126.039 62.3379 cv
cp
149.578 60.0649 mo
150.747 59.5698 151.602 57.5293 150.39 56.4941 cv
150.65 58.1094 149.706 59.3789 149.578 60.0649 cv
cp
80.0967 58.7666 mo
80.2437 58.1021 80.9248 57.9717 81.2339 57.4688 cv
81.1685 56.9375 81.0928 56.4185 80.5835 56.3315 cv
80.627 57.2451 79.7192 58.0586 80.0967 58.7666 cv
cp
95.6816 56.9814 mo
95.2998 56.8218 95.5356 56.0444 95.1943 55.8447 cv
95.1401 56.3438 95.3125 57.4438 95.6816 56.9814 cv
cp
78.9604 58.7666 mo
79.5796 57.9966 80.8662 56.4692 80.0967 55.3579 cv
79.8574 56.7046 79.2148 57.8008 78.9604 58.7666 cv
cp
158.507 56.9814 mo
158.81 56.938 159.149 57.0391 159.481 56.9814 cv
160.723 56.7656 162.836 55.5508 162.566 55.0327 cv
161.191 55.6611 159.68 56.1514 158.507 56.9814 cv
cp
111.428 56.6563 mo
112.443 57.1841 114.307 56.5845 113.863 55.6826 cv
113.801 55.959 113.098 56.4121 112.89 56.0068 cv
113.05 55.7246 114.139 55.54 113.539 55.0327 cv
113.162 55.8999 112.092 56.0762 111.428 56.6563 cv
cp
164.026 56.1699 mo
164.433 56.3843 164.535 55.5278 164.677 56.0068 cv
164.559 56.5034 164.843 56.5981 164.838 56.9814 cv
164.553 57.3979 163.663 57.2129 163.376 57.6304 cv
163.441 58.2158 163.855 58.4502 164.188 58.7666 cv
164.674 58.2773 165.22 57.8506 165.974 57.6304 cv
165.536 56.8232 165.356 55.7588 165.162 54.7085 cv
164.816 55.2275 164.398 55.6758 164.026 56.1699 cv
cp
78.1489 57.4688 mo
78.4502 57.2275 78.3926 56.6294 78.9604 56.6563 cv
78.8335 57.5029 78.1025 57.7466 77.8247 58.4424 cv
79.209 57.9868 80.2129 55.2939 79.4478 54.2212 cv
79.001 55.5415 78.3584 56.5283 78.1489 57.4688 cv
cp
158.994 56.3315 mo
160.549 55.0737 163.355 55.0649 164.514 53.4097 cv
162.76 54.3623 159.843 55.0156 158.994 56.3315 cv
cp
77.8247 55.0327 mo
78.731 56.3765 76.3706 57.1089 76.0386 58.2803 cv
77.7798 57.3511 79.1313 55.2295 79.1235 53.0854 cv
78.4097 53.4546 78.3242 54.4507 77.8247 55.0327 cv
cp
121.331 53.7339 mo
121.23 53.3306 121.923 52.4683 121.168 52.436 cv
121.268 52.8237 120.965 53.6128 121.331 53.7339 cv
cp
167.274 57.1431 mo
168.053 56.7324 170.092 56.5967 170.845 57.1431 cv
171.409 56.5693 172.013 55.1753 171.494 54.0591 cv
171.209 54.7842 171.14 55.2993 171.332 56.1699 cv
170.966 56.3687 170.037 57.0962 169.709 56.3315 cv
170.8 55.2964 171.518 53.917 171.332 52.436 cv
167.555 51.0151 165.133 54.7534 167.274 57.1431 cv
cp
147.63 53.7339 mo
148.358 53.6548 148.846 53.8159 149.416 53.897 cv
149.343 53.0664 150.042 53.0078 150.065 52.2734 cv
149.464 52.3887 149.367 51.9961 148.767 52.1108 cv
148.737 53.0029 147.856 53.0396 147.63 53.7339 cv
cp
69.2207 56.0068 mo
69.4175 56.5674 70.1934 56.5503 70.0322 57.4688 cv
70.7041 57.1738 71.7808 56.9165 72.3037 57.4688 cv
72.1919 59.0234 70.5703 59.7861 71.0068 61.3643 cv
74.1099 61.5078 75.7021 63.1626 77.6616 64.4482 cv
78.104 63.3218 78.5835 62.231 79.2852 61.3643 cv
79.395 62.5273 77.9565 63.4814 77.8247 64.9355 cv
78.1118 65.0815 78.2979 65.3271 78.6348 65.4229 cv
79.1455 64.5249 79.251 63.2241 79.9351 62.501 cv
80.0376 63.958 78.6982 64.833 79.1235 66.0713 cv
79.5659 65.2969 79.7646 63.5034 80.5835 63.6367 cv
80.2437 64.6177 78.7373 66.2109 79.9351 67.209 cv
81.4307 65.063 81.0381 62.8413 80.4224 59.9033 cv
80.332 60.1919 80.3384 60.5776 80.0967 60.7148 cv
79.5811 59.9761 80.9746 59.04 80.5835 58.4424 cv
80.1987 58.9761 80.019 59.7173 79.2852 59.9033 cv
78.124 58.2524 74.3213 59.5488 72.791 59.416 cv
73.4863 58.2168 75.9814 58.8174 76.2017 57.1431 cv
74.9741 57.3525 75.0781 54.8696 75.3887 55.0327 cv
75.5327 51.0073 68.6123 51.1924 69.2207 56.0068 cv
cp
99.9023 63.4756 mo
99.7129 63.4473 99.7256 63.2178 99.7412 62.9883 cv
100.061 63.1001 100.172 63.4209 100.227 63.7998 cv
102.264 63.293 105.04 63.5249 107.532 63.4756 cv
107.309 62.5088 106.19 62.4365 105.584 61.8506 cv
102.441 62.2168 100.13 60.3921 100.065 57.1431 cv
100.283 56.9697 100.646 56.1172 101.038 56.6563 cv
99.2163 58.918 102.52 61.9409 104.935 61.5264 cv
104.207 61.2271 103.127 61.2783 102.987 60.3906 cv
103.089 60.1138 103.478 60.1235 103.636 59.9033 cv
102.5 59.4702 101.617 58.7847 101.201 57.6304 cv
101.522 57.3555 101.454 56.6938 102.176 56.8188 cv
102.779 56.6899 102.475 57.8193 102.987 57.3057 cv
104.269 55.3276 101.354 54.8589 100.39 54.0591 cv
102.1 54.3516 103.476 54.9766 103.799 56.6563 cv
104.185 55.228 102.903 54.2461 102.661 52.9224 cv
103.096 52.5078 103.518 53.02 104.123 52.9224 cv
104.007 53.4189 104.289 53.5142 104.286 53.897 cv
104.571 53.9897 105.239 53.7012 105.259 54.0591 cv
105.614 55.2559 105.51 57.3184 104.773 57.9551 cv
105.518 57.8887 106.123 57.6821 106.559 57.3057 cv
107.115 55.9194 106.199 55.0879 106.233 53.7339 cv
106.758 53.1719 107.406 54.0605 107.695 53.7339 cv
105.876 53.2793 104.891 51.9912 102.987 51.6235 cv
102.234 52.7114 100.958 53.2744 99.0908 53.2476 cv
98.9619 53.667 98.5679 54.6626 98.7666 54.8706 cv
98.8706 53.9248 101.029 52.8789 101.688 54.0591 cv
101.381 53.771 100.616 53.9409 100.065 53.897 cv
99.2119 54.6338 98.5771 55.3877 98.4404 56.4941 cv
98.1489 58.8901 100.121 60.8989 100.714 62.6631 cv
100.551 62.6621 100.521 62.7944 100.39 62.8252 cv
99.4014 62.8394 99.3267 61.9395 98.7666 61.5264 cv
99.0352 62.1807 99.4585 63.5352 99.9023 63.4756 cv
cp
95.6816 54.0591 mo
95.6973 53.0137 95.5996 52.0845 95.1943 51.4619 cv
95.1357 52.5483 95.2349 53.4785 95.6816 54.0591 cv
cp
159.806 55.1953 mo
161.753 53.7881 165.051 53.73 165.974 51.2993 cv
163.808 52.3799 160.465 53.1489 159.806 55.1953 cv
cp
77.6616 54.7085 mo
78.1211 53.6089 79.3921 52.3994 78.312 51.1362 cv
78.1909 52.3794 76.0933 53.7695 77.6616 54.7085 cv
cp
148.604 51.4619 mo
149.293 51.3379 150.526 51.7607 150.714 51.1362 cv
149.983 51.106 149.063 50.4141 148.442 50.812 cv
148.682 50.8423 148.59 51.2046 148.604 51.4619 cv
cp
146.331 51.2993 mo
147.235 51.5317 145.644 52.7114 146.169 53.0854 cv
147.083 52.4985 147.304 51.3257 146.818 50.0005 cv
146.796 50.5732 146.354 50.7266 146.331 51.2993 cv
cp
161.429 53.0854 mo
162.982 51.7695 165.8 51.7207 166.787 49.8384 cv
164.646 50.46 162.205 51.6421 161.429 53.0854 cv
cp
151.201 50.3257 mo
150.423 49.9648 148.846 49.5449 148.117 49.6763 cv
148.39 50.4541 150.848 51.1997 151.201 50.3257 cv
cp
139.027 51.7866 mo
140.216 52.1123 140.352 53.4912 140.975 54.3838 cv
141.156 52.7949 140.688 51.8545 140.001 51.1362 cv
140.19 50.625 140.504 50.2349 140.812 49.8384 cv
140.337 49.8809 140.313 49.4712 139.839 49.5132 cv
139.604 50.3086 139.26 50.9912 139.027 51.7866 cv
cp
99.0908 50.812 mo
99.5952 51.0713 101.021 51.0713 101.525 50.812 cv
101.29 50.1821 101.091 49.5146 100.714 49.0259 cv
100.337 49.7856 99.1514 49.7368 99.0908 50.812 cv
cp
98.9277 49.8384 mo
99.5361 49.6841 100.511 49.0469 100.39 48.7017 cv
99.9238 49.1025 99.0474 49.0913 98.9277 49.8384 cv
cp
94.8701 49.8384 mo
93.6924 47.2339 94.2295 50.0903 94.8701 51.4619 cv
94.8701 50.9204 94.8701 50.3789 94.8701 49.8384 cv
cp
148.117 49.189 mo
149.232 49.1772 151.064 49.7368 151.688 49.189 cv
150.513 48.686 149.133 48.3896 147.792 48.0522 cv
147.91 48.4224 147.937 48.8818 148.117 49.189 cv
cp
98.6035 49.189 mo
99.3125 48.8691 100.203 48.7329 100.551 48.0522 cv
99.7129 48.2422 98.6655 48.2231 98.6035 49.189 cv
cp
76.2017 51.9487 mo
76.7944 51.0278 77.043 49.7598 77.8247 49.0259 cv
77.8433 50.7515 75.5781 51.9507 76.8501 53.4097 cv
77.6914 51.8789 78.9189 49.9878 77.6616 48.0522 cv
77.0615 49.2329 74.8965 50.3403 76.2017 51.9487 cv
cp
162.401 51.4619 mo
163.842 50.7358 165.172 49.9014 166.787 49.3511 cv
165.705 49.2061 166.964 47.7192 166.624 47.4028 cv
164.738 48.2778 162.949 49.2495 162.401 51.4619 cv
cp
93.7329 50.3257 mo
93.748 49.0122 93.4331 48.0273 92.9214 47.2407 cv
93.0532 48.4082 93.2998 49.4604 93.7329 50.3257 cv
cp
96.0059 52.436 mo
96.1689 50.9751 96.2871 49.4697 96.9805 48.5396 cv
96.8828 50.6069 95.7437 52.498 96.3301 54.7085 cv
96.6904 53.4995 96.583 51.8223 97.4678 51.1362 cv
97.564 51.4258 96.9912 51.811 97.4678 51.9487 cv
97.5063 51.6631 97.7471 51.5786 98.1162 51.6235 cv
98.1504 50.0718 97.3174 49.2124 96.9805 47.4028 cv
96.5459 47.2422 96.124 47.0684 95.5186 47.0786 cv
95.3154 49.2559 95.1167 50.8755 96.0059 52.436 cv
cp
152.013 48.0522 mo
150.402 47.769 149.222 47.0562 147.468 46.9155 cv
148.221 48.6533 150.452 48.0142 152.013 48.0522 cv
cp
98.1162 47.2407 mo
98.1133 47.623 98.3955 47.7188 98.2793 48.2144 cv
98.9434 47.8516 99.8809 47.7607 100.227 47.0786 cv
99.8032 46.3105 98.9932 47.438 98.1162 47.2407 cv
cp
173.442 49.3511 mo
174.025 44.2119 166.599 44.748 168.571 50.6499 cv
169.191 51.5459 171.098 51.1543 172.305 51.4619 cv
172.612 50.7593 173.338 50.2744 173.442 49.3511 cv
cp
144.221 54.8706 mo
144.474 55.3428 144.734 54.3652 144.871 54.0591 cv
145.57 52.4849 146.124 50.4658 146.818 49.189 cv
146.211 48.0112 146.174 46.2622 145.032 45.6167 cv
145.02 47.7305 142.105 49.1328 141.786 50.6499 cv
141.617 51.4575 142.192 52.5698 142.273 53.5723 cv
142.396 55.0898 142.043 56.3921 142.435 57.9551 cv
143.513 54.8125 144.546 51.6245 145.357 48.2144 cv
145.597 48.2446 145.505 48.6069 145.52 48.8638 cv
146.165 49.022 145.586 47.957 146.169 48.0522 cv
145.836 50.6406 144.948 52.6758 144.221 54.8706 cv
cp
97.9536 45.9419 mo
97.9536 46.2671 97.9536 46.5913 97.9536 46.9155 cv
98.8379 46.8799 99.6338 46.7568 99.9023 46.104 cv
99.9023 45.9961 99.9023 45.8877 99.9023 45.7798 cv
99.3701 45.4058 98.7915 46.1079 97.9536 45.9419 cv
cp
89.6753 50.4878 mo
91.2793 52.8882 93.4971 54.6748 95.0332 57.1431 cv
94.9541 53.8013 92.8745 50.6616 92.5967 47.728 cv
92.5303 47.0195 92.3516 46.3911 92.9214 45.9419 cv
93.7144 46.9893 94.2109 48.3325 95.0332 49.3511 cv
94.9355 48.3882 95.3169 47.9043 95.1943 46.9155 cv
94.791 46.7046 94.521 47.3921 94.3828 46.9155 cv
94.3335 46.5415 94.8516 46.7358 94.8701 46.4292 cv
93.8818 46.228 93.6304 45.2881 92.5967 45.1304 cv
91.582 46.8755 90.5205 48.5728 89.6753 50.4878 cv
cp
72.4668 45.2925 mo
72.8623 45.3975 73.3018 45.6206 73.2783 44.9683 cv
72.875 44.9434 72.605 45.0522 72.4668 45.2925 cv
cp
95.3574 45.6167 mo
95.9146 45.5557 96.3691 46.4331 96.8174 45.9419 cv
96.3149 45.9033 97.0723 44.606 96.3301 44.8052 cv
96.1704 45.2407 95.3418 45.0068 95.3574 45.6167 cv
cp
75.2271 48.7017 mo
75.9146 47.8203 76.5601 46.8965 77.499 46.2671 cv
77.0708 47.9116 74.9043 48.0654 75.3887 50.1636 cv
76.3555 49.3984 76.9932 48.3042 77.8247 47.4028 cv
77.3979 46.4253 77.9941 45.2383 77.8247 44.644 cv
77.1172 45.9878 74.501 46.9868 75.2271 48.7017 cv
cp
163.863 48.5396 mo
165.198 47.5454 168.126 47.2832 167.111 44.481 cv
165.791 45.4883 163.224 46.1133 163.863 48.5396 cv
cp
126.2 44.3188 mo
125.715 44.3188 125.228 44.3188 124.74 44.3188 cv
124.75 45.0117 126.31 45.3428 126.2 44.3188 cv
cp
97.792 45.6167 mo
98.5459 45.5601 99.3452 45.5469 99.7412 45.1304 cv
99.4834 44.8457 99.522 44.2651 99.415 43.8315 cv
98.8193 43.8315 98.2251 43.8315 97.6309 43.8315 cv
97.5098 44.6006 97.812 44.9482 97.792 45.6167 cv
cp
115.649 44.8052 mo
116.06 44.6748 116.063 44.1372 116.298 43.8315 cv
115.686 43.9565 115.521 43.6338 115 43.6694 cv
115.097 44.1689 115.041 44.8179 115.649 44.8052 cv
cp
116.786 43.0195 mo
116.401 42.647 115.329 42.9619 114.674 42.8579 cv
114.691 43.5161 116.749 43.8989 116.786 43.0195 cv
cp
94.3828 44.9683 mo
95.2114 45.3901 95.8076 44.6865 96.4932 44.481 cv
97.0117 41.5654 94.3223 43.646 94.3828 44.9683 cv
cp
91.4609 61.3643 mo
93.2236 61.0176 93.5947 59.2773 93.5713 57.1431 cv
92.9199 55.8467 91.2471 55.5708 89.8379 55.0327 cv
89.1523 54.8535 90.2246 54.4536 90.1621 54.0591 cv
90.1079 53.7139 88.6401 52.564 88.2148 51.9487 cv
86.3296 49.2339 85.7866 46.0996 85.1299 42.6948 cv
83.8994 42.6021 83.0449 42.8828 82.0454 43.0195 cv
81.9351 45.4292 80.936 47.5723 81.2339 49.6763 cv
81.6309 52.4902 84.1279 54.5669 84.9673 56.8188 cv
86.1792 56.6348 86.145 57.6968 86.9146 57.9551 cv
87.062 56.9116 87.1533 55.813 88.0518 55.52 cv
88.0693 55.8271 88.5889 55.6333 88.5391 56.0068 cv
87.9233 57.1553 87.7573 59.6631 88.8633 60.3906 cv
89.7295 59.6333 89.5713 57.8506 90.3252 56.9814 cv
90.5132 58.126 89.3291 60.0615 89.188 60.877 cv
90.1812 61.1074 90.0957 60.5366 90.3252 61.2021 cv
91.4287 60.4653 90.7847 57.5791 90.811 56.6563 cv
91.6006 57.0039 91.0342 58.707 91.4609 59.416 cv
91.6504 58.5225 91.6455 57.436 92.1099 56.8188 cv
92.3579 58.4756 91.334 59.7202 91.4609 60.7148 cv
92.144 60.3706 91.9082 59.1064 92.5967 58.7666 cv
92.8203 60.1284 91.4985 60.8032 91.4609 61.3643 cv
cp
97.6309 43.5063 mo
98.1689 43.3438 99.395 43.8657 99.415 43.1821 cv
99.2041 42.5283 98.3057 42.5601 97.6309 42.3706 cv
97.6309 42.7495 97.6309 43.1279 97.6309 43.5063 cv
cp
74.9014 47.4028 mo
75.9194 45.7139 78.481 44.7046 78.312 42.3706 cv
77.3965 44.1802 74.1519 44.958 74.9014 47.4028 cv
cp
155.098 47.4028 mo
154.87 50.5264 152.367 53.4141 152.337 54.8706 cv
152.311 56.2056 153.69 57.064 153.474 58.6045 cv
154.383 58.0361 154.542 58.998 154.935 59.416 cv
155.063 58.6938 154.719 58.4419 154.773 57.793 cv
156.347 55.4609 160.24 52.418 160.617 48.7017 cv
160.979 45.1436 158.588 42.6079 154.935 42.208 cv
155.09 43.7549 155.208 45.8716 155.098 47.4028 cv
cp
148.93 46.9155 mo
150.136 47.063 150.997 47.5532 152.176 47.728 cv
152.373 46.0313 152.573 44.3369 152.5 42.3706 cv
151.835 42.4404 151.461 42.2202 151.04 42.0464 cv
151.537 43.9658 150.778 46.3809 148.93 46.9155 cv
cp
116.298 46.9155 mo
117.424 50.0112 119.344 52.3125 119.221 56.6563 cv
118.276 57.9849 118.049 60.0298 117.111 61.3643 cv
117.871 61.2598 119.053 61.5767 119.545 61.2021 cv
119.174 56.792 119.75 50.6094 120.033 45.7798 cv
120.194 51.0278 119.842 56.5479 119.87 60.7148 cv
120.019 60.4302 119.925 59.9048 120.194 59.7402 cv
120.194 60.2822 120.194 60.8228 120.194 61.3643 cv
120.903 61.2505 121.109 61.6396 121.818 61.5264 cv
120.006 59.5962 120.408 56.8271 120.518 53.897 cv
120.641 50.688 119.813 47.0664 120.357 44.1567 cv
120.652 46.2432 120.549 49.5918 120.844 51.1362 cv
121.001 50.6431 120.497 49.4897 121.168 49.5132 cv
121.272 50.0601 120.96 51.0215 121.331 51.2993 cv
122.479 50.189 123.82 48.2578 123.603 46.5913 cv
123.346 44.5928 120.551 42.9766 119.382 41.8833 cv
118.416 43.623 117.123 45.0352 116.298 46.9155 cv
cp
164.026 43.6694 mo
164.026 44.4268 164.026 45.1841 164.026 45.9419 cv
165.217 45.4556 166.021 44.5806 167.274 44.1567 cv
167.159 42.9727 167.309 42.166 167.274 41.5591 cv
166.252 42.3242 165.1 42.9565 164.026 43.6694 cv
cp
149.254 44.9683 mo
149.712 44.5664 150.188 43.481 149.741 42.6948 cv
149.159 43.5234 148.563 45.1948 146.98 44.481 cv
147.625 43.4478 149.072 43.2178 149.741 42.208 cv
148.435 40.5225 145.82 41.8169 146.331 44.3188 cv
146.936 44.9048 147.978 45.0552 149.254 44.9683 cv
cp
99.415 42.0464 mo
99.1406 41.4546 98.2529 41.4761 97.6309 41.2339 cv
97.3872 42.2417 99.1143 42.6157 99.415 42.0464 cv
cp
74.5771 45.4556 mo
75.9502 44.8799 77.0273 42.6021 78.7993 41.8833 cv
78.7217 41.4678 79.3735 40.9634 78.9604 40.7476 cv
77.6558 42.4717 74.8594 42.7061 74.5771 45.4556 cv
cp
142.11 47.8901 mo
143.396 46.1909 144.919 43.21 143.896 40.2603 cv
143.47 40.645 142.308 40.2939 142.11 40.9092 cv
142.462 40.8828 142.185 41.4854 142.273 41.7212 cv
142.661 41.8198 143.451 41.5171 143.572 41.8833 cv
143.19 41.9346 142.962 42.1396 142.435 42.0464 cv
142.593 44.1519 142.245 46.6162 142.11 47.8901 cv
cp
97.792 40.9092 mo
98.332 41.0718 98.9077 41.2017 99.415 41.3965 cv
99.6167 40.3247 97.9922 40.228 97.6309 40.2603 cv
97.8696 40.29 97.7783 40.6523 97.792 40.9092 cv
cp
163.539 41.5591 mo
163.589 42.2676 163.708 42.9053 164.026 43.3442 cv
164.922 42.5078 166.213 42.0664 167.111 41.2339 cv
166.579 41.1172 166.477 40.5693 166.461 39.9355 cv
165.252 40.2402 164.613 41.1172 163.539 41.5591 cv
cp
123.766 40.9092 mo
124.635 41.0151 125.928 40.6963 126.526 41.0718 cv
125.378 41.5469 122.978 40.771 122.467 41.8833 cv
123.541 42.2173 125.125 42.0396 126.2 42.3706 cv
124.835 42.9214 122.637 42.0425 121.655 42.208 cv
122.572 43.1309 124.787 42.7573 126.039 43.3442 cv
125.385 43.4492 124.313 43.1333 123.929 43.5063 cv
124.275 44.0806 125.248 44.0278 126.2 43.9937 cv
126.536 42.8145 126.774 41.5361 126.851 40.0977 cv
125.498 40.3101 123.811 39.2954 123.766 40.9092 cv
cp
114.188 41.0718 mo
115.218 41.1782 116.675 40.8579 117.435 41.2339 cv
116.699 41.6895 114.786 40.9663 114.35 41.7212 cv
115.058 42.2046 116.89 41.5625 117.598 42.0464 cv
116.862 42.394 115.509 42.1226 114.513 42.208 cv
115.551 42.9497 118.253 42.6128 118.408 41.3965 cv
117.167 40.6904 116.443 39.4658 114.026 39.9355 cv
113.933 40.4619 114.136 40.6904 114.188 41.0718 cv
cp
167.76 40.585 mo
167.845 40.3442 168 40.1758 168.084 39.9355 cv
167.783 40.0913 167.543 39.4487 167.436 39.9355 cv
167.876 39.8198 167.319 40.7012 167.76 40.585 cv
cp
94.707 40.7476 mo
95.0503 41.27 95.2114 41.9741 95.1943 42.8579 cv
95.7793 42.9009 95.9766 42.5576 96.4932 42.5337 cv
96.4297 41.3335 96.6548 40.4219 97.1436 39.7729 cv
96.0913 39.8594 95.4644 40.3677 94.707 40.7476 cv
cp
150.065 40.2603 mo
150.615 40.6846 151.794 40.4785 152.176 41.0718 cv
151.453 41.1992 151.201 40.8555 150.553 40.9092 cv
150.537 42.0059 151.836 41.7905 152.5 42.208 cv
153.346 40.1187 150.837 38.7002 150.065 40.2603 cv
cp
120.194 40.2603 mo
120.85 40.3657 121.387 39.5156 121.168 39.2861 cv
121.027 39.7935 120.403 39.8198 120.194 40.2603 cv
cp
97.3047 39.6104 mo
98.0977 39.7373 98.4702 40.2852 99.415 40.2603 cv
99.4336 39.1597 98.0762 39.4351 97.4678 38.9614 cv
97.5034 39.269 97.2847 39.3203 97.3047 39.6104 cv
cp
70.3564 44.644 mo
70.4385 44.6616 70.8916 44.4346 71.3311 44.481 cv
71.7637 44.5278 71.5327 44.9653 71.9795 44.8052 cv
72.8608 44.4902 73.9287 41.792 72.4668 40.9092 cv
72.5396 42.1611 72.3691 44.8721 71.0068 43.9937 cv
71.7856 43.9087 72.0557 43.312 72.1426 42.5337 cv
71.8447 42.0884 71.373 43.6958 70.8438 43.0195 cv
71.4785 42.3022 72.2202 41.6909 72.3037 40.4224 cv
71.2671 40.3784 71.3013 39.2617 70.5195 38.9614 cv
68.4434 40.3076 67.7354 44.0542 70.3564 44.644 cv
cp
74.7402 43.8315 mo
76.2046 41.8867 79.5845 40.9912 80.0967 38.6367 cv
78.5322 40.4824 75.0967 41.3203 74.7402 43.8315 cv
cp
143.734 38.3125 mo
143.441 38.9941 142.262 38.7886 141.949 39.4487 cv
142.301 39.4209 142.021 40.0244 142.11 40.2603 cv
142.825 40.2188 143.365 40.0005 144.221 40.0977 cv
144.089 39.4722 144.303 38.501 143.734 38.3125 cv
cp
113.863 39.6104 mo
114.678 39.5054 115.916 39.8237 116.46 39.4487 cv
116.22 39.2031 116.2 38.7358 116.136 38.3125 cv
115.379 38.3125 114.622 38.3125 113.863 38.3125 cv
113.863 38.7451 113.863 39.1772 113.863 39.6104 cv
cp
162.079 40.2603 mo
163.22 42.2173 164.796 40.189 166.137 39.6104 cv
165.716 36.6777 163.167 39.5654 162.079 40.2603 cv
cp
124.253 39.6104 mo
125.201 39.584 125.81 39.894 126.851 39.7729 cv
126.851 39.2314 126.851 38.6909 126.851 38.1499 cv
125.983 38.2559 124.689 37.9365 124.09 38.3125 cv
124.456 38.4326 124.155 39.2222 124.253 39.6104 cv
cp
99.5781 39.124 mo
99.229 38.3906 98.1689 38.3672 97.4678 37.9873 cv
97.4351 39.0313 98.9199 39.2969 99.5781 39.124 cv
cp
151.04 39.124 mo
151.591 39.3296 151.979 39.7002 152.5 39.9355 cv
152.623 38.9468 152.145 38.5596 152.176 37.6631 cv
151.68 37.7798 151.583 37.4971 151.201 37.5 cv
151.232 38.1274 151.208 38.6963 151.04 39.124 cv
cp
94.2202 37.5 mo
94.3848 36.9585 93.9951 36.9678 93.5713 37.0127 cv
93.5215 37.4409 93.7964 37.5464 94.2202 37.5 cv
cp
97.6309 37.6631 mo
98.2915 37.9214 98.897 38.2354 99.5781 38.4746 cv
100.101 37.3403 98.2822 37.478 97.792 36.8516 cv
97.9253 37.3091 97.5625 37.272 97.6309 37.6631 cv
cp
91.2983 38.3125 mo
92.3037 38.5801 92.4932 37.1709 91.9482 36.8516 cv
91.6426 37.2485 91.3975 37.707 91.2983 38.3125 cv
cp
162.079 37.5 mo
160.604 38.6934 160.636 39.0562 162.079 39.7729 cv
162.998 39.0688 163.974 38.4209 165.001 37.8252 cv
164.456 35.7388 163.152 36.6323 162.079 37.5 cv
cp
126.851 37.9873 mo
126.851 37.5 126.851 37.0127 126.851 36.5269 cv
125.428 36.7031 123.776 36.2476 122.793 36.5269 cv
123.331 37.832 125.546 37.9424 126.851 37.9873 cv
cp
92.4341 36.6885 mo
92.4307 37.0718 92.7148 37.1665 92.5967 37.6631 cv
93.2158 37.5781 93.4258 37.084 93.4082 36.3643 cv
92.8979 36.2866 92.7739 36.5952 92.4341 36.6885 cv
cp
99.9023 37.5 mo
99.8896 37.2178 99.938 36.9956 100.065 36.8516 cv
99.4556 36.4868 98.8252 36.1431 97.9536 36.04 cv
97.9971 37.1338 99.2041 37.063 99.9023 37.5 cv
cp
159.155 37.8252 mo
159.821 37.8638 160.012 38.3765 160.617 38.4746 cv
161.348 37.582 162.484 37.0942 163.215 36.2012 cv
161.063 35.2471 160.2 36.5059 159.155 37.8252 cv
cp
141.136 36.8516 mo
141.154 37.2656 141.436 37.4194 141.624 37.6631 cv
142.076 37.3037 142.474 36.8887 143.247 36.8516 cv
142.98 37.5591 141.89 37.4419 141.624 38.1499 cv
141.953 38.2534 141.729 38.9087 142.11 38.9614 cv
142.571 38.5552 143.198 38.3169 143.896 38.1499 cv
143.723 37.0034 143.681 36.5645 143.409 35.7148 cv
142.405 35.8467 142.058 36.6357 141.136 36.8516 cv
cp
98.2793 35.7148 mo
98.9648 35.8945 99.4941 36.2314 100.227 36.3643 cv
100.031 35.5322 99.0708 35.4644 98.4404 35.0654 cv
98.3911 35.2847 98.2109 35.3755 98.2793 35.7148 cv
cp
157.371 37.0127 mo
157.967 37.0664 158.268 37.4141 158.831 37.5 cv
159.587 36.8477 160.319 36.1738 160.941 35.3896 cv
159.396 33.959 158.15 35.8398 157.371 37.0127 cv
cp
94.8701 35.5527 mo
94.833 35.8589 95.0532 35.9102 95.0332 36.2012 cv
95.7437 36.2632 95.8662 35.7373 96.4932 35.7148 cv
96.3521 36.3857 95.3096 36.1548 95.1943 36.8516 cv
95.2627 37.6055 96.062 36.6216 96.3301 37.1758 cv
96.0835 37.5239 95.2085 37.2441 95.3574 37.9873 cv
95.5654 38.4951 96.1875 37.2207 96.3301 37.6631 cv
95.5576 38.2959 95.0703 39.2163 94.3828 39.9355 cv
94.7925 40.6895 95.7686 39.728 96.3301 39.6104 cv
96.0479 37.582 97.4399 35.5425 97.1436 34.5781 cv
96.4888 35.0063 95.7158 35.3159 94.8701 35.5527 cv
cp
153.474 36.2012 mo
154.188 35.9932 154.806 34.8325 154.773 34.416 cv
154.347 35.0171 153.864 35.5635 153.474 36.2012 cv
cp
93.5713 40.585 mo
93.0903 39.8926 93.5107 39.2876 92.7598 38.9614 cv
93.4409 39.0469 93.666 38.6777 94.2202 38.6367 cv
94.2202 38.3657 94.2202 38.0957 94.2202 37.8252 cv
93.2349 38.1704 92.4341 39.3652 91.1353 38.4746 cv
90.6587 37.3618 92.0195 36.7891 92.2725 35.877 cv
92.7212 36.2773 93.0967 35.6226 93.7329 35.7148 cv
93.7451 34.8433 92.9785 35.4209 92.4341 35.228 cv
91.8911 35.0352 91.4365 34.4502 90.9736 34.416 cv
89.1724 34.2817 89.0698 35.7075 88.2148 37.0127 cv
87.8828 36.9663 87.8955 36.5742 87.5649 36.5269 cv
87.1816 37.7139 86.5718 39.5356 87.0776 41.0718 cv
87.3105 40.2231 88.1714 40.0015 88.5391 39.2861 cv
88.0859 39.1431 88.001 38.6343 87.8892 38.1499 cv
88.2134 37.9873 88.145 37.4316 88.7007 37.5 cv
88.9351 37.7529 89.042 38.1328 89.188 38.4746 cv
90.1763 38.9478 92.0835 38.501 92.5967 39.4487 cv
90.9663 40.1641 88.9473 39.7749 88.2148 41.5591 cv
87.7666 43.0269 89.2295 44.2778 88.2148 44.8052 cv
87.5229 44.5229 87.4082 43.665 86.9146 43.1821 cv
86.5078 44.3848 87.0576 45.7876 87.5649 46.5913 cv
87.8271 46.1489 87.9512 45.5718 88.7007 45.6167 cv
88.3467 46.1289 87.8457 46.4937 87.5649 47.0786 cv
87.8501 47.2261 87.8613 47.6475 88.0518 47.8901 cv
88.7612 47.9429 88.9487 46.6318 89.5122 47.0786 cv
89.2529 47.6846 88.502 47.8003 88.3765 48.5396 cv
88.5938 48.646 88.6787 48.8862 88.7007 49.189 cv
89.7822 48.7544 89.8413 47.2983 90.4868 46.4292 cv
89.8413 46.4263 89.3428 46.2734 89.0249 45.9419 cv
89.0762 45.4507 88.8447 44.6797 89.3506 44.644 cv
90.4399 44.4731 90.2852 45.5479 91.1353 45.6167 cv
91.6909 44.416 92.2646 43.207 93.8955 43.5063 cv
94.1143 42.7383 94.1426 41.647 93.7329 41.0718 cv
92.4775 41.7437 92.7334 43.2085 91.2983 43.6694 cv
90.8638 43.8091 90.1113 43.6479 89.5122 43.6694 cv
90.8901 43.3428 91.8584 42.0146 91.6226 40.585 cv
92.5132 40.9541 91.5015 42.6035 91.6226 42.6948 cv
92.2646 42.1465 92.4834 41.1753 92.7598 40.2603 cv
92.814 40.8237 93.3745 40.6997 93.5713 40.585 cv
cp
156.233 36.6885 mo
157.787 36.6177 158.094 35.3018 158.994 34.5781 cv
157.766 33.9434 156.813 35.6729 156.233 36.6885 cv
cp
98.6035 34.416 mo
98.9648 35.0156 99.9829 35.687 100.551 35.5527 cv
100.254 34.8892 99.1714 34.2832 98.6035 34.416 cv
cp
169.546 38.9614 mo
171.259 38.5596 170.964 36.0059 170.194 34.5781 cv
164.745 32.3667 165.485 39.9146 169.546 38.9614 cv
cp
155.098 36.5269 mo
156.193 36.5688 156.958 34.9414 157.695 34.0908 cv
156.248 34.3223 155.859 35.6108 155.098 36.5269 cv
cp
142.435 34.7412 mo
142.201 35.5386 140.625 35.8491 140.975 36.6885 cv
141.621 36.3062 142.108 35.7666 142.922 35.5527 cv
142.906 34.6494 142.276 34.3579 141.786 33.9297 cv
141.444 34.7241 140.436 34.8511 140.163 35.7148 cv
140.482 35.666 140.484 35.9341 140.65 36.04 cv
141.221 35.6875 141.91 34.5981 142.435 34.7412 cv
cp
120.033 41.0718 mo
120.625 41.0742 120.762 41.5327 121.168 41.7212 cv
121.213 41.1357 120.527 41.2808 120.518 40.7476 cv
121.23 40.5923 121.734 40.231 122.305 39.9355 cv
122.384 40.127 122.479 40.3037 122.63 40.4224 cv
124.184 38.4092 121.572 37.2905 120.844 36.04 cv
118.929 36.9653 116.654 35.6255 116.298 33.9297 cv
115.488 33.9297 114.674 33.9297 113.863 33.9297 cv
113.989 34.7036 113.61 34.9736 113.702 35.7148 cv
114.73 35.7139 115.826 35.6455 116.46 36.04 cv
115.541 36.04 114.622 36.04 113.702 36.04 cv
113.702 36.6885 113.702 37.3379 113.702 37.9873 cv
114.566 37.9873 115.432 37.9873 116.298 37.9873 cv
116.475 37.4053 116.748 36.9204 117.435 36.8516 cv
117.471 36.9771 117.571 37.04 117.759 37.0127 cv
117.791 37.8066 117.469 37.9424 118.085 38.1499 cv
117.708 38.0981 117.461 38.1758 117.272 38.3125 cv
117.289 39.4326 117.981 39.8755 118.734 40.2603 cv
119.082 39.9033 119.522 39.6411 120.357 39.7729 cv
120.967 39.2998 121.131 38.3828 121.655 37.8252 cv
121.791 38.2104 121.291 39.0181 121.655 38.6367 cv
121.979 38.4185 121.604 37.5029 122.143 37.5 cv
122.21 39.4614 121.104 40.251 120.033 41.0718 cv
cp
123.278 36.04 mo
124.313 36.251 125.6 36.2075 126.851 36.2012 cv
126.822 35.3633 126.951 34.3701 126.688 33.7666 cv
124.15 33.1235 124.124 34.9893 123.278 36.04 cv
cp
100.877 34.5781 mo
100.266 34.2695 99.6665 33.9497 99.0908 33.6035 cv
99.1621 34.2803 100.554 35.2173 100.877 34.5781 cv
cp
140.001 35.0654 mo
140.743 34.7261 141.283 34.1855 141.624 33.4424 cv
140.752 33.6533 140.213 34.1938 140.001 35.0654 cv
cp
101.201 34.2539 mo
101.271 33.9448 101.55 33.8457 101.525 33.4424 cv
101.02 33.3911 100.66 34.1934 101.201 34.2539 cv
cp
154.286 36.3643 mo
155.442 35.897 155.896 34.7285 156.721 33.9297 cv
156.265 33.8984 156.275 33.3989 155.909 33.2793 cv
155.635 34.5752 154.55 35.0591 154.286 36.3643 cv
cp
152.5 35.877 mo
152.783 35.8643 153.005 35.9136 153.15 36.04 cv
153.613 34.9868 154.233 34.0923 154.773 33.1172 cv
152.911 32.8423 152.707 35.0313 152.5 35.877 cv
cp
151.201 33.2793 mo
151.15 35.8643 148.806 34.6245 147.468 34.9023 cv
146.229 35.1606 145.961 36.1606 145.357 37.1758 cv
145.863 38.7412 149.641 40.5103 149.741 37.8252 cv
149.364 38.3486 147.51 39.0098 147.143 38.4746 cv
148.078 38.417 149.151 37.2876 149.254 35.877 cv
149.793 36.7456 148.995 37.6704 148.604 38.1499 cv
149.162 38.0586 149.43 37.6768 149.741 37.3379 cv
149.676 36.5239 149.34 35.9995 150.227 35.7148 cv
150.755 35.8364 151.258 35.9839 151.201 36.6885 cv
152.468 36.1328 151.822 34.6372 152.337 33.4424 cv
152.663 33.8394 153.093 33.7588 153.15 33.1172 cv
152.318 32.9897 151.971 33.3447 151.201 33.2793 cv
cp
139.676 34.2539 mo
140.386 34.0444 140.696 33.4346 141.136 32.9551 cv
140.428 32.584 139.908 33.6255 139.676 34.2539 cv
cp
120.683 35.3896 mo
121.012 35.4375 121.114 35.7153 121.331 35.877 cv
122.529 35.5015 123.924 33.7588 122.467 32.6309 cv
122.683 34.3608 121.459 34.6509 120.683 35.3896 cv
cp
128.149 56.6563 mo
129.914 56.4546 129.301 54.0581 129.124 53.0854 cv
129.653 53.4746 129.617 54.4321 129.936 55.0327 cv
130.418 54.3252 129.122 52.6416 130.26 52.2734 cv
131.867 52.9937 130.75 56.3491 130.908 56.9814 cv
131.922 56.8945 131.169 55.9995 131.232 55.52 cv
131.537 53.2993 132.944 51.7207 135.292 51.2993 cv
135.751 51.543 136.518 51.481 136.917 51.7866 cv
136.968 51.1875 137.832 51.4048 138.214 51.1362 cv
139.455 47.9941 140.22 44.3765 140.812 40.585 cv
141.009 42.082 140.309 43.5415 140.65 44.644 cv
141.209 42.3457 141.297 38.5884 139.839 37.5 cv
140.443 37.2573 139.699 36.4229 139.839 36.04 cv
139.808 36.2803 139.446 36.188 139.188 36.2012 cv
137.049 33.5786 133.211 31.9727 128.474 32.4678 cv
129.261 38.9648 128.313 44.6128 127.338 50.3257 cv
128.533 50.5371 129.904 50.5713 129.936 51.9487 cv
128.658 51.8242 126.871 51.3394 125.389 51.6235 cv
124.767 50.9658 126.582 50.7188 126.039 50.1636 cv
124.24 51.5566 123.091 53.5996 123.117 56.8188 cv
122.925 57.0063 122.543 57.0024 122.143 56.9814 cv
121.229 59.1353 122.451 59.7993 122.954 61.6895 cv
123.518 61.5591 123.578 61.9307 124.09 61.8506 cv
123.876 59.0249 123.029 56.3276 125.552 55.1953 cv
126.015 55.436 125.841 56.3135 126.851 56.0068 cv
127.317 55.6084 126.079 55.5728 126.688 55.0327 cv
127.293 54.8618 127.008 55.5806 127.338 55.6826 cv
128.604 55.1318 126.709 53.27 128.149 53.0854 cv
129.624 53.75 128.61 56.2524 128.149 56.6563 cv
cp
87.2402 32.4678 mo
82.4424 32.6011 78.4858 34.9644 76.3633 38.3125 cv
76.999 39.8755 74.9136 40.8208 75.2271 42.0464 cv
76.9512 40.896 78.5728 38.7988 80.5835 38.4746 cv
81.8608 36.2881 84.2563 35.2207 87.2402 34.7412 cv
87.5273 34.1128 87.3926 33.1265 87.2402 32.4678 cv
cp
113.863 33.6035 mo
114.674 33.6035 115.488 33.6035 116.298 33.6035 cv
116.215 32.9253 116.389 32.5044 116.624 32.1436 cv
115.758 32.1436 114.892 32.1436 114.026 32.1436 cv
114.02 32.6772 113.751 32.9512 113.863 33.6035 cv
cp
124.09 33.4424 mo
124.813 33.6392 125.754 33.6182 126.688 33.6035 cv
126.705 32.939 126.721 32.2739 126.526 31.8184 cv
125.498 31.8184 124.469 31.8184 123.441 31.8184 cv
123.465 32.5532 124.165 32.6113 124.09 33.4424 cv
cp
115.812 50.3257 mo
115.126 49.4419 114.558 48.4395 114.188 47.2407 cv
114.046 46.6123 114.896 46.9761 114.674 46.2671 cv
112.808 42.0962 112.044 36.3701 113.051 31.0068 cv
103.586 30.6694 99.6445 40.3086 102.661 48.8638 cv
102.835 49.4697 102.053 49.1206 102.176 49.6763 cv
102.891 49.6636 103.237 50.0215 103.312 50.6499 cv
105.584 50.8647 106.376 52.564 108.831 52.5981 cv
109.307 50.1465 113.709 49.0972 115.812 50.3257 cv
cp
76.0386 34.5781 mo
77.3311 35.564 78.0576 32.7061 78.9604 32.792 cv
78.5977 33.458 78.146 34.0342 77.6616 34.5781 cv
79.4121 34.0146 79.5859 32.626 79.1235 30.5205 cv
78.9604 30.5205 78.7993 30.5205 78.6348 30.5205 cv
78.875 32.0356 77.5952 33.8804 76.0386 34.5781 cv
cp
128.313 31.332 mo
128.691 31.332 129.069 31.332 129.448 31.332 cv
129.311 30.6528 129.888 30.689 130.099 30.3574 cv
129.332 30.3652 128.868 30.0718 128.149 30.0332 cv
128.035 30.6353 128.426 30.73 128.313 31.332 cv
cp
88.3765 31.0068 mo
88.9971 30.8711 89.5942 30.7095 89.6753 30.0332 cv
88.9907 30.106 88.8354 30.708 88.3765 31.0068 cv
cp
75.7144 34.0908 mo
77.2568 34.4463 78.0884 31.8379 78.312 30.3574 cv
75.5034 28.3428 73.9517 33.686 75.7144 34.0908 cv
cp
100.39 31.332 mo
101.111 31.0757 102.475 30.6089 102.176 29.8701 cv
101.847 30.5195 100.32 30.8247 100.39 31.332 cv
cp
111.267 29.8701 mo
111.97 29.8701 112.673 29.8701 113.377 29.8701 cv
113.287 29.6343 113.566 29.0308 113.214 29.0586 cv
112.8 29.563 111.715 29.3999 111.267 29.8701 cv
cp
130.099 29.0586 mo
130.937 28.8599 131.88 29.7661 132.207 29.0586 cv
131.512 28.6133 130.752 28.4497 130.099 29.0586 cv
cp
149.741 29.708 mo
150.643 29.8887 150.91 30.7021 151.364 31.332 cv
152.27 31.4248 152.913 31.2573 153.312 30.8447 cv
153.436 29.9634 153.111 29.5298 153.15 28.7344 cv
151.827 28.6846 149.675 27.7847 149.741 29.708 cv
cp
138.214 29.5459 mo
139.255 29.6128 139.984 29.3691 140.001 28.4092 cv
139.181 28.5635 138.48 28.8384 138.214 29.5459 cv
cp
128.149 29.2217 mo
128.621 28.9053 128.395 28.0786 127.662 28.0845 cv
127.849 28.4395 127.695 29.1348 128.149 29.2217 cv
cp
114.837 28.0845 mo
114.837 28.7334 114.513 29.0586 114.513 29.708 cv
115.293 29.6763 116.059 29.6299 116.624 29.3828 cv
116.307 29.1045 116.273 28.5435 116.298 27.9219 cv
115.63 27.7949 115.466 28.1709 114.837 28.0845 cv
cp
120.844 34.5781 mo
120.624 35.0698 121.897 34.2842 122.143 33.6035 cv
122.479 32.6787 121.85 31.7852 122.143 31.1689 cv
123.369 31.5137 124.9 31.5498 126.526 31.4941 cv
126.389 30.1714 126.155 28.9424 125.876 27.7598 cv
124.948 27.6436 124.427 27.9336 123.603 27.9219 cv
123.654 28.5142 123.578 28.979 123.441 29.3828 cv
124.311 29.3813 125.238 29.3188 125.715 29.708 cv
122.893 29.3037 121.5 30.8604 119.545 31.0068 cv
117.957 31.1255 117.691 30.0938 116.624 29.8701 cv
115.972 29.7344 115.168 30.1426 114.35 30.0332 cv
114.243 30.6289 114.178 31.2666 114.026 31.8184 cv
115.908 32.1592 117.154 31.3164 118.085 31.8184 cv
117.17 33.0132 117.226 34.7676 118.572 35.0654 cv
120.333 35.4546 120.897 33.6177 121.818 32.6309 cv
121.646 33.4331 121.322 34.083 120.844 34.5781 cv
cp
119.708 29.3828 mo
120.559 29.0449 121.539 28.8335 121.655 27.7598 cv
120.841 28.1353 120.338 28.8237 119.708 29.3828 cv
cp
81.2339 31.8184 mo
82.8989 31.644 82.6753 29.5801 83.8315 28.8965 cv
84.9595 29.9316 83.4932 31.3862 83.3442 31.9805 cv
83.9492 31.6655 84.6104 31.4082 84.8042 30.6816 cv
84.2129 30.1401 84.6772 29.1426 84.8042 28.4092 cv
83.5381 28.4316 83.1812 27.5444 81.7197 27.7598 cv
80.8706 28.6289 79.3066 30.9912 80.9097 32.3057 cv
82.4565 32.3911 83.6606 31.272 83.6685 30.3574 cv
83.0635 30.8984 82.1836 32.6787 81.2339 31.8184 cv
cp
115 27.4355 mo
115 28.0654 116.617 27.8467 116.46 27.2725 cv
115.953 27.3066 115.271 27.1641 115 27.4355 cv
cp
119.545 29.8701 mo
121.364 30.1021 123.42 28.5884 121.979 27.1113 cv
122.247 29.1084 120.695 29.2891 119.545 29.8701 cv
cp
125.876 27.5977 mo
126.01 26.542 123.847 26.9268 123.278 27.1113 cv
123.516 27.9028 124.94 27.5063 125.876 27.5977 cv
cp
139.514 28.0845 mo
140.183 28.0454 140.912 27.2183 140.65 26.7861 cv
140.371 27.3179 139.793 27.5527 139.514 28.0845 cv
cp
129.611 27.7598 mo
129.896 28.061 130.084 27.6899 130.421 27.5977 cv
130.455 27.1313 130.381 26.7729 130.099 26.624 cv
129.975 27.0444 129.271 27.3735 129.611 27.7598 cv
cp
106.559 27.4355 mo
106.832 27.3159 107.49 26.7607 107.695 27.1113 cv
107.633 27.915 106.658 27.8066 106.396 28.4092 cv
107.559 28.3804 107.754 27.3877 108.669 27.1113 cv
108.887 27.2168 108.971 27.4575 108.994 27.7598 cv
109.385 27.8267 109.346 27.4634 109.805 27.5977 cv
109.43 26.4937 108.339 26.9268 107.695 26.2988 cv
107.411 26.6714 106.328 27.0879 106.559 27.4355 cv
cp
125.715 26.4609 mo
125.483 25.5552 123.766 26.1367 122.793 25.9741 cv
122.779 27.019 125.033 26.6504 125.715 26.4609 cv
cp
113.377 26.4609 mo
113.706 26.5093 113.809 26.7871 114.026 26.9482 cv
114.104 26.583 114.527 25.7324 114.188 25.4873 cv
114.069 25.9629 113.695 26.1851 113.377 26.4609 cv
cp
111.267 26.624 mo
112.699 26.7593 113.437 26.1958 113.863 25.3252 cv
112.87 25.6304 112.192 26.25 111.267 26.624 cv
cp
116.948 25.1626 mo
116.374 25.2383 115.384 24.897 115.488 25.6494 cv
115.816 26.0781 117.129 25.5225 117.272 26.1367 cv
116.277 26.1152 115.131 25.9438 115.162 26.9482 cv
116.256 27.0889 117.488 26.3213 117.759 27.4355 cv
117.481 27.6978 117.356 28.1143 117.435 28.7344 cv
117.691 29.29 118.127 29.6655 118.734 29.8701 cv
119.168 29.3677 118.294 29.2402 118.734 28.8965 cv
119.922 28.9795 121.269 27.8765 121.655 26.624 cv
120.001 26.7388 117.737 26.416 116.948 25.1626 cv
cp
122.793 25.6494 mo
123.659 25.6494 124.524 25.6494 125.389 25.6494 cv
125.28 24.8135 122.829 24.6333 122.793 25.6494 cv
cp
104.123 27.9219 mo
105.29 28.3403 106.77 26.5288 107.695 25.6494 cv
107.532 25.4341 107.542 25.0459 107.208 25 cv
106.364 26.1587 105.403 27.2012 104.123 27.9219 cv
cp
124.577 24.3511 mo
124.025 24.3398 123.444 24.3003 123.278 24.6753 cv
124.049 24.5557 124.396 24.8584 125.064 24.8379 cv
125.006 24.4531 124.687 23.499 124.253 24.0264 cv
124.437 24.0605 124.506 24.2065 124.577 24.3511 cv
cp
112.403 24.5137 mo
112.532 24.1553 113.166 24.3027 113.214 23.8638 cv
112.797 23.3203 112.167 24.4395 112.403 24.5137 cv
cp
123.278 23.2148 mo
123.278 23.3765 123.278 23.5391 123.278 23.7017 cv
123.668 23.603 124.456 23.9053 124.577 23.5391 cv
124.456 23.1172 123.712 22.8301 123.278 23.2148 cv
cp
111.104 26.4609 mo
111.286 25.6138 113.38 25.2759 113.863 24.188 cv
112.583 24.478 111.391 25.7192 110.292 25.6494 cv
110.863 24.7598 112.215 24.6504 112.403 23.3765 cv
109.604 21.2661 108.015 26.832 111.104 26.4609 cv
cp
122.954 22.2407 mo
122.919 22.5479 123.138 22.5991 123.117 22.8901 cv
123.388 22.8901 123.659 22.8901 123.929 22.8901 cv
123.875 22.5112 123.763 22.1909 123.441 22.0776 cv
123.414 22.2671 123.184 22.2544 122.954 22.2407 cv
cp
117.922 24.8379 mo
118.763 25.2417 119.907 25.3433 120.844 25.6494 cv
121.462 25.1841 122.273 24.9141 122.305 23.8638 cv
122.014 23.1802 121.383 22.8379 121.492 21.7534 cv
120.571 21.8594 119.224 21.54 118.572 21.916 cv
118.94 22.8286 117.63 23.4619 117.922 24.8379 cv
cp
121.979 21.2661 mo
122.258 21.6387 123.22 21.3267 123.766 21.4292 cv
123.578 20.8984 122.365 20.6763 121.979 21.2661 cv
cp
117.111 21.4292 mo
118.529 21.2241 120.774 21.8462 121.655 21.104 cv
120.565 20.9893 118.136 20.938 117.111 21.4292 cv
cp
123.766 18.6685 mo
124.505 18.5459 124.593 17.1719 124.09 16.7212 cv
124.12 17.5078 123.963 18.1069 123.766 18.6685 cv
cp
121.979 15.9097 mo
122.055 16.7002 121.811 17.8105 122.143 18.3442 cv
122.999 18.3311 122.64 16.2495 122.467 15.7466 cv
122.44 15.936 122.211 15.9233 121.979 15.9097 cv
cp
123.278 18.5073 mo
123.678 17.7144 123.942 16.7896 123.929 15.5854 cv
122.397 15.0576 122.825 18.1191 123.278 18.5073 cv
cp
116.136 16.0718 mo
116.465 17.0049 115.539 17.3389 115.812 18.6685 cv
117.665 18.4111 119.384 18.0205 121.655 18.1821 cv
121.655 17.4785 121.655 16.7754 121.655 16.0718 cv
119.193 16.6313 117.37 14.7993 116.136 16.0718 cv
cp
120.683 14.7729 mo
119.825 14.7266 118.239 14.5796 118.247 14.7729 cv
120.327 15.1089 122.517 14.873 120.683 14.7729 cv
cp
114.513 12.3374 mo
112.353 12.292 116.156 12.9482 116.136 12.1753 cv
115.815 11.8125 115.005 12.3345 114.513 12.3374 cv
cp
113.051 11.5259 mo
113.888 11.4385 115.94 11.7144 115.975 11.3638 cv
114.932 11.3784 113.429 11.1787 113.051 11.5259 cv
cp
119.545 12.6621 mo
120.67 12.7021 121.507 11.5967 121.492 11.0386 cv
120.931 11.668 120.161 12.0879 119.545 12.6621 cv
cp
123.603 11.0386 mo
124.131 11.0254 124.603 10.9551 124.903 10.7144 cv
124.411 10.7651 123.641 10.5347 123.603 11.0386 cv
cp
121.818 12.3374 mo
122.222 12.3623 122.321 12.083 122.63 12.0132 cv
122.619 11.3755 122.551 10.793 122.305 10.3896 cv
122.256 11.1514 121.813 11.5215 121.818 12.3374 cv
cp
112.24 9.09131 mo
111.385 10.1294 110.516 11.1538 109.805 12.3374 cv
110.434 13.7661 111.244 15.0112 112.077 16.2339 cv
113.63 15.6226 114.622 14.4478 116.298 13.9604 cv
116.298 13.582 116.298 13.2036 116.298 12.8247 cv
114.886 12.9287 112.941 13.3608 111.916 13.312 cv
112.235 13.0356 112.919 13.125 113.214 12.8247 cv
112.651 12.7378 111.673 13.0654 111.59 12.5005 cv
112.31 12.1899 113.346 12.1997 114.188 12.0132 cv
115.5 11.5532 111.826 12.3374 112.077 11.3638 cv
113.52 10.7456 114.584 11.0513 116.136 11.0386 cv
116.208 10.481 116.073 10.1294 115.975 9.74023 cv
114.561 9.69287 113.047 9.74463 112.24 9.09131 cv
cp
127.986 8.76611 mo
126.023 8.53418 125.007 9.24951 123.441 9.41553 cv
123.438 9.79834 123.721 9.89355 123.603 10.3896 cv
125.207 10.7881 127.841 10.1572 129.124 10.8765 cv
127.901 11.1162 126.465 11.1396 125.064 11.2017 cv
124.308 11.0859 124.308 11.4795 125.064 11.3638 cv
125.886 11.7876 127.67 11.2476 128.474 11.689 cv
128.452 12.1528 127.359 11.5479 127.338 12.0132 cv
127.865 12.2964 129.062 11.9126 129.285 12.5005 cv
127.653 12.2393 125.634 12.3638 123.766 12.3374 cv
123.622 13.1396 123.865 13.3794 123.603 14.1235 cv
124.177 14.0366 124.329 13.6475 124.903 13.9604 cv
124.925 14.3608 124.928 14.7437 124.74 14.9351 cv
126.117 14.1406 127.23 15.292 128.474 15.5854 cv
129.39 14.0645 130.745 12.9863 131.722 11.5259 cv
130.861 10.3857 129.408 8.28223 127.986 8.76611 cv
cp
122.143 9.57861 mo
122.281 9.44189 122.587 8.30957 121.979 8.44141 cv
121.815 8.604 121.919 9.32666 122.143 9.57861 cv
cp
117.272 12.5005 mo
119.219 12.4663 121.778 11.0107 121.492 8.76611 cv
119.629 8.02832 115.866 8.79883 117.272 12.5005 cv
cp
120.357 1.13574 mo
118.524 2.28027 116.356 3.08936 114.837 4.5459 cv
116.026 5.30615 116.081 7.19971 117.272 7.95459 cv
117.609 7.4248 118.777 7.72754 119.382 7.46777 cv
119.271 6.1167 118.662 4.40234 118.896 3.24609 cv
119.677 4.30615 118.979 6.84375 120.194 7.46777 cv
120.819 6.36035 119.711 3.521 120.844 2.92188 cv
120.667 3.50684 120.51 4.9624 120.844 5.51953 cv
120.933 5.28369 120.655 4.68018 121.007 4.70801 cv
121.007 5.57373 121.007 6.43945 121.007 7.30566 cv
121.555 6.70703 120.849 3.76904 121.818 3.08496 cv
121.831 4.23682 121.322 5.72412 121.655 6.65625 cv
122.098 6.01611 122.185 5.01953 122.954 4.70801 cv
122.945 5.81445 121.947 6.68701 122.143 7.46777 cv
122.413 7.46777 122.685 7.46777 122.954 7.46777 cv
123.742 6.36182 124.39 5.11426 125.228 4.05859 cv
123.51 3.17773 122.63 1.45996 120.357 1.13574 cv
cp
149.741 31.4941 mo
149.419 31.6045 149.369 31.9883 149.091 32.1436 cv
149.24 32.584 149.394 31.7104 149.902 31.9805 cv
149.529 32.689 148.638 32.8813 148.117 33.4424 cv
148.271 32.374 147.033 33.9932 146.331 33.4424 cv
147.125 32.9917 148.132 32.7534 148.767 32.1436 cv
148.041 30.8569 148.598 28.6787 149.254 27.7598 cv
150.344 27.3022 153.237 27.0254 153.474 28.4092 cv
154.21 27.8071 156.512 25.8779 158.344 27.4355 cv
158.054 28.6279 156.926 27.7358 156.233 27.9219 cv
154.615 28.3589 153.911 30.6367 154.935 31.9805 cv
157.41 32.5361 159.719 32.7534 159.481 29.5459 cv
159.521 28.7485 158.404 29.1069 158.67 28.0845 cv
159.695 27.5425 160.501 28.4878 160.617 29.3828 cv
160.967 28.8672 162.625 28.5635 162.891 29.3828 cv
162.762 29.9038 162.326 30.1172 161.592 30.0332 cv
159.869 31.9487 160.696 35.2407 163.539 35.228 cv
164.195 34.6309 165.097 34.2598 165.325 33.2793 cv
165.702 31.6611 164.472 30.6748 164.514 29.5459 cv
166.377 29.792 166.7 31.5801 167.111 33.2793 cv
167.72 33.0225 168.484 32.9209 169.222 32.792 cv
169.591 33.4507 170.561 33.5098 171.332 33.7666 cv
171.736 35.1094 171.989 36.8545 171.819 38.3125 cv
172.714 38.686 174.413 39.0371 173.767 40.4224 cv
171.944 39.0688 170.429 39.7593 168.897 40.9092 cv
167.354 44.6372 171.71 45.1865 173.605 43.8315 cv
173.612 42.4609 173.258 41.4585 174.091 40.7476 cv
175.485 41.7363 174.824 45.6338 172.955 45.4556 cv
175.928 45.71 175.72 50.8926 173.279 51.9487 cv
174.458 54.1606 173.316 57.2358 171.981 58.4424 cv
172.367 59.5 171.884 60.4521 171.981 61.6895 cv
167.955 63.9409 162.762 65.0239 160.617 69.1563 cv
160.09 69.251 159.861 69.0459 159.481 68.9946 cv
159.316 69.2104 159.328 69.5986 158.994 69.6436 cv
159.759 70.4004 159.261 71.6567 160.13 72.0781 cv
159.54 73.3828 159.053 74.7905 158.344 75.9741 cv
157.742 76.0366 157.92 75.3174 157.208 75.4888 cv
156.108 76.2271 156.539 78.499 155.422 79.2222 cv
153.893 78.4634 155.689 76.3901 155.422 74.8384 cv
154.76 73.626 152.092 74.3169 151.04 74.6763 cv
151.891 76.6992 155.127 77.1816 154.61 80.0337 cv
153.543 79.9966 152.336 79.3525 151.04 78.897 cv
148.663 78.0615 146.229 78.0039 145.032 76.6245 cv
141.292 76.7705 138.186 75.2954 134.644 74.6763 cv
119.315 71.998 102.199 73.8716 90.811 79.8706 cv
90.4355 79.9229 90.1885 79.8442 89.9995 79.7085 cv
88.6104 80.3223 87.4111 81.1245 86.1045 81.8188 cv
86.5005 82.4326 86.7642 82.7529 86.7534 83.4429 cv
93.939 79.585 105.035 76.9946 115.812 75.6499 cv
120.349 75.0835 124.807 76.0952 129.124 76.4614 cv
130.229 76.5557 131.711 76.0991 132.37 77.2729 cv
131.456 78.0869 129.189 77.8223 127.825 77.7603 cv
115.91 77.2197 103.015 77.6875 95.1943 81.981 cv
94.4683 80.8682 89.8413 82.9634 90.1621 84.417 cv
90.4214 85.5947 101.141 87.1265 103.312 87.3389 cv
108.791 87.8745 116.543 87.9395 121.818 87.6631 cv
126.2 87.4336 130.896 87.647 134.644 87.0132 cv
127.056 87.2163 117.694 86.9976 109.643 86.3647 cv
104.585 85.9673 98.9385 85.9028 96.4932 82.7935 cv
98.186 82.4277 99.7905 83.4692 101.364 83.9297 cv
105.262 85.0718 110.676 85.314 115.812 85.5527 cv
124.627 85.9624 134.501 85.6943 142.435 84.417 cv
141.863 84.0693 141.241 83.771 140.65 83.4429 cv
131.123 83.3711 119.372 84.6001 109.155 83.605 cv
106.09 83.3062 102.236 83.6831 100.714 81.4937 cv
102.647 81.1475 104.677 81.8662 106.883 81.981 cv
110.926 82.1934 114.944 82.1006 119.221 82.3062 cv
121.815 82.4312 124.143 82.9912 126.526 82.6313 cv
128.207 82.3765 131.433 82.2788 133.506 82.144 cv
133.504 81.8213 133.063 81.9375 133.182 81.4937 cv
131.353 80.9404 128.699 81.1758 127.175 81.1694 cv
125.788 81.1641 123.412 82.0889 122.954 80.521 cv
123.755 79.1567 126.679 79.9141 128.637 79.7085 cv
124.925 79.3491 120.646 79.1553 116.624 79.3833 cv
113.557 79.5581 110.681 80.6729 108.344 80.1958 cv
109.976 78.6914 113.154 78.6733 115.975 78.4106 cv
121.496 77.8936 129.096 78.3267 133.832 79.2222 cv
134.015 79.417 134.294 79.5151 134.156 80.0337 cv
138.701 79.7373 144.256 81.167 147.468 83.2798 cv
147.634 83.6543 148.026 83.8032 147.955 84.417 cv
150.816 83.9224 152.809 82.5615 153.962 80.3579 cv
156.093 81.0283 154.325 83.937 153.474 84.5786 cv
152.618 85.2256 150.972 85.3682 149.416 85.8774 cv
147.18 86.6099 146.041 87.1821 143.085 87.5005 cv
139.679 87.8682 135.964 88.8735 132.696 88.9619 cv
130.537 89.02 128.242 88.6084 125.876 88.7993 cv
113.269 89.8203 99.2461 88.7617 88.7007 86.04 cv
85.749 85.2773 84.3574 84.8594 84.1558 82.4683 cv
83.9277 79.7637 81.6606 77.2744 81.7197 74.3511 cv
83.8857 72.9111 86.9443 70.4766 89.9995 70.293 cv
90.7983 70.2446 91.2793 70.9399 92.1099 70.4551 cv
92.4712 70.2749 92.5503 69.8125 92.9214 69.6436 cv
97.1328 68.4375 101.532 66.5728 106.721 66.8838 cv
107.019 67.3828 106.575 67.6138 106.883 68.0205 cv
107.67 67.5176 108.646 66.5464 109.643 66.2344 cv
112.159 65.4468 115.503 65.7285 118.572 65.585 cv
122.372 65.4087 125.77 65.5254 128.961 65.585 cv
129.351 65.7378 129.62 66.0083 129.772 66.3975 cv
133.844 65.6826 138.515 66.8828 141.786 68.0205 cv
142.208 68.228 141.66 68.9907 141.949 68.9946 cv
142.636 69.5635 142.775 68.499 143.409 68.5073 cv
148.31 69.5059 152.496 71.2168 157.045 72.5654 cv
157.331 72.418 157.343 71.9976 157.532 71.7539 cv
155.811 69.9058 153.237 68.9063 150.553 68.0205 cv
149.978 67.9316 150.152 68.5952 149.578 68.5073 cv
147.981 67.668 145.955 67.2598 144.871 65.9102 cv
144.893 65.2739 145.599 65.436 146.007 65.585 cv
145.72 62.459 146.166 58.8755 147.955 57.3057 cv
148.226 58.1206 146.975 58.8115 146.818 59.7402 cv
147.512 60.2275 148.842 59.2393 149.741 58.9287 cv
150.144 57.0317 150.671 55.0845 149.091 54.0591 cv
148.529 54.0024 149.18 54.8218 148.604 55.0327 cv
146.087 55.2764 145.109 57.0581 145.032 59.7402 cv
143.744 60.6748 144.158 64.2915 144.545 65.9102 cv
143.115 66.5913 140.638 65.7783 139.352 65.2607 cv
139.663 63.3545 140.991 61.4277 140.812 59.0918 cv
140.628 56.6865 139.784 54.104 138.54 52.5981 cv
137.806 52.6274 137.624 52.9023 137.402 52.2734 cv
136.849 52.1509 137.196 52.9331 136.591 52.7603 cv
134.502 51.8755 132.32 53.647 132.37 55.6826 cv
132.398 56.8076 133.097 57.1211 133.506 58.1172 cv
134.057 58.1797 133.762 57.3989 134.48 57.6304 cv
134.634 56.9336 133.978 56.5581 134.317 56.1699 cv
134.778 56.4136 134.621 57.2734 134.968 57.6304 cv
135.358 57.6968 135.321 57.334 135.779 57.4688 cv
135.917 56.1934 135.261 55.7144 135.129 54.7085 cv
135.679 55.188 135.967 55.9277 136.104 56.8188 cv
136.657 56.042 135.756 55.332 135.779 54.5454 cv
136.352 54.5688 136.241 55.2749 136.43 55.6826 cv
136.679 55.9722 137.402 55.79 137.565 56.1699 cv
138.836 58.0098 138.099 60.8027 136.43 61.5264 cv
134.241 61.5581 133.301 62.8359 131.883 63.6367 cv
130.468 63.1558 129.439 62.0386 127.501 61.6895 cv
127.355 61.8027 127.631 62.6221 127.014 62.6631 cv
127.166 63.2676 128.4 62.7896 128.313 63.6367 cv
127.575 64.7441 126.026 63.8804 124.74 63.7998 cv
119.854 63.4902 113.452 64.3984 109.805 63.9619 cv
110.488 61.4512 112.338 59.2446 115 59.2539 cv
115.21 60.5161 112.811 60.5117 112.403 61.6895 cv
113.061 61.4619 114.614 61.792 115.325 61.5264 cv
118.011 60.5254 115.953 55.875 117.111 53.7339 cv
116.456 52.7114 115.579 51.9106 114.674 51.1362 cv
111.287 51.082 108.523 53.9556 110.129 57.3057 cv
110.879 57.2871 109.402 56.3809 110.129 55.8447 cv
111.535 56.5322 112.634 55.7324 113.377 54.8706 cv
113.546 53.8345 113.214 53.3008 112.564 53.0854 cv
111.76 52.9287 111.698 53.5181 111.104 53.5723 cv
111.124 52.5098 112.85 53.1533 113.051 52.2734 cv
113.728 52.9502 113.962 54.0684 114.026 55.3579 cv
114.246 55.7241 114.31 54.5732 115 54.8706 cv
116.242 55.269 116.513 58.1289 115.812 59.416 cv
114.684 59.4629 115.087 57.9756 115 56.9814 cv
114.616 56.6602 114.355 57.8442 113.702 57.793 cv
113.877 58.1245 114.479 58.4565 114.026 58.9287 cv
111.829 59.4316 109.992 57.8979 107.695 58.6045 cv
106.626 58.9336 106.021 60.9199 104.286 60.0649 cv
106.181 61.2559 108.969 61.5513 109.155 64.4482 cv
105.518 64.7354 102.169 64.9893 98.7666 65.9102 cv
95.9658 66.6675 94.1968 68.0903 92.1099 67.209 cv
90.3037 67.6758 88.5874 68.3755 86.7534 69.3193 cv
85.1006 70.1685 83.2979 71.9399 82.0454 72.0781 cv
81.3564 72.1558 81.3086 71.2749 80.9097 71.9165 cv
80.5122 71.8125 80.8848 71.1577 81.0708 71.105 cv
80.728 70.8521 80.2905 70.6953 80.2593 70.1309 cv
79.8047 70.5991 81.0322 71.4341 80.4224 72.0781 cv
78.5229 71.3257 78.7681 69.083 77.8247 67.6953 cv
76.2466 65.3765 73.8491 64.1885 70.8438 63.3125 cv
70.2183 62.3677 69.0142 60.5596 69.8691 58.6045 cv
69.0625 58.1021 67.394 57.1489 67.1104 55.6826 cv
66.8296 54.2334 67.0205 52.0308 68.5703 51.7866 cv
68.9321 52.5903 68.1641 53.2056 68.2461 54.2212 cv
68.7271 53.5664 68.96 52.6626 69.5449 52.1108 cv
68.9551 51.6885 67.6362 51.2559 68.2461 50.1636 cv
69.4175 50.5605 70.2666 51.2813 72.1426 50.9751 cv
72.1318 50.0415 73.6289 49.2651 73.604 47.4028 cv
73.4087 47.3237 72.7739 48.1909 72.4668 48.5396 cv
72.0728 48.0283 73.061 47.5171 73.2783 47.0786 cv
72.9229 46.3516 71.8506 46.3413 71.3311 45.7798 cv
70.5146 45.8838 70.5225 46.8115 69.708 46.9155 cv
69.9312 46.437 70.457 46.2593 70.6807 45.7798 cv
67.9946 45.4429 68.4199 48.4438 68.083 50.0005 cv
66.1499 49.229 67.4438 45.7788 68.5703 45.1304 cv
66.8633 43.5483 67.312 38.5366 70.1934 38.6367 cv
69.6489 37.7236 69.4268 35.3027 70.6807 34.9023 cv
71.5435 35.6519 70.6064 36.5781 70.8438 37.3379 cv
71.23 38.5786 73.0596 38.0771 72.791 39.4487 cv
74.3628 38.8555 75.73 38.0571 75.5518 35.7148 cv
75.0815 34.8853 74.0791 34.5903 73.9287 33.4424 cv
72.105 33.1333 71.7393 34.2842 70.3564 34.416 cv
70.2773 32.4971 72.105 32.4849 73.7656 32.3057 cv
74.3193 31.6143 74.7153 30.7661 74.9014 29.708 cv
75.6787 28.6226 78.1196 28.7368 79.1235 29.5459 cv
79.5454 28.6523 79.8853 28.2466 79.9351 27.2725 cv
81.2744 26.2935 84.2534 26.4883 84.9673 27.9219 cv
85.6641 27.0308 87.4888 25.7847 88.8633 26.624 cv
88.1621 28.0879 85.3535 27.4434 85.6172 29.8701 cv
86.0083 30.5601 86.6724 30.978 87.4019 31.332 cv
87.8936 31.1333 87.3164 30.6831 87.0776 30.6816 cv
87.5195 30.3311 88.2881 29.8618 89.188 29.5459 cv
89.4824 28.9922 89.166 28.7656 89.188 28.0845 cv
89.959 28.2876 89.4795 29.7407 89.9995 30.1943 cv
89.7354 31.0664 88.9336 31.4019 87.7275 31.332 cv
89.3926 32.3032 90.3594 30.8896 91.4609 30.3574 cv
92.1392 31.1318 91.1909 31.457 91.2983 32.3057 cv
91.5527 34.3237 93.7935 33.7974 94.8701 35.228 cv
95.1729 35.0981 95.4644 34.9565 95.8433 34.9023 cv
95.9658 34.4028 95.2847 34.7056 95.5186 34.0908 cv
96.6763 33.5708 97.1592 32.3765 97.4678 31.0068 cv
98.0869 30.7002 98.6592 31.1519 99.2539 31.332 cv
100.41 30.7026 101.567 30.0752 102.5 29.2217 cv
102.629 28.0098 102.326 27.229 101.688 26.7861 cv
101.525 27.4883 101.87 27.687 102.013 28.0845 cv
100.52 29.1348 99.8125 30.9712 96.9805 30.6816 cv
97.1606 30.1309 97.9922 29.9263 98.4404 29.5459 cv
99.1094 28.981 100.636 27.189 100.714 27.5977 cv
100.847 28.292 98.2822 29.5972 98.1162 30.1943 cv
99.0737 30.5547 99.1914 28.6763 100.227 28.5713 cv
100.256 29.1416 99.6787 29.1055 99.5781 29.5459 cv
100.695 28.9316 101.6 28.1045 101.364 26.1367 cv
100.022 25.9229 97.3389 25.6216 96.3301 27.2725 cv
95.4458 24.877 99.7612 24.0776 101.201 25.4873 cv
101.623 25.0483 101.963 23.8281 102.824 24.3511 cv
103.332 24.939 102.463 25.1919 102.5 25.8125 cv
102.739 26.6016 103.394 26.9741 103.799 27.5977 cv
105.858 27.147 106.348 24.332 108.182 24.188 cv
108.797 23.2871 109.331 22.3071 110.292 21.7534 cv
112.027 22.1289 113.767 22.499 114.513 23.8638 cv
114.557 24.5571 113.92 24.5698 113.702 25 cv
113.821 24.8853 114.496 24.5962 114.35 25.1626 cv
115.123 24.2578 114.641 22.0977 116.298 22.0776 cv
116.726 23.0405 115.812 23.938 115.649 24.8379 cv
115.975 24.8379 116.298 24.8379 116.624 24.8379 cv
116.971 23.7788 117.117 22.5181 117.759 21.7534 cv
117.038 21.8804 116.786 21.5376 116.136 21.5913 cv
116.019 21.1479 116.459 21.2646 116.46 20.9419 cv
115.877 20.999 115.679 21.1899 115.162 20.9419 cv
114.429 20.0029 114.53 18.5317 114.837 17.0454 cv
114.342 16.9863 113.41 17.8862 112.564 18.02 cv
111.078 16.856 109.959 15.3232 109.155 13.4741 cv
108.806 13.084 108.356 13.9668 108.02 13.312 cv
108.913 10.9038 110.602 9.2915 112.24 7.62988 cv
113.435 7.57178 114.471 7.67139 115.488 7.79248 cv
115.179 7.0166 114.483 5.22607 113.702 4.38379 cv
114.034 3.29883 115.562 2.49268 116.786 1.78613 cv
117.911 1.13672 119.615 -.00634766 120.683 0 cv
122.813 .0126953 124.216 2.17334 125.715 3.40918 cv
125.73 3.72168 126.318 3.15723 126.526 3.57227 cv
127.699 5.22168 125.878 6.52783 125.228 7.79248 cv
126.305 7.5166 127.957 7.81592 128.8 7.30566 cv
130.281 8.6748 132.949 9.71191 133.021 11.8511 cv
133.101 14.3145 129.644 15.8491 128.8 18.02 cv
127.361 17.7808 126.647 16.8159 125.389 16.396 cv
125.741 17.9395 125.166 18.8066 124.74 19.9673 cv
124.807 20.7461 126.005 21.3701 124.903 21.916 cv
125.755 22.5239 126.026 23.7148 126.526 24.6753 cv
126.806 23.5425 129.543 21.9487 129.772 23.7017 cv
128.084 23.8589 126.584 25.8931 128.149 27.1113 cv
129.132 26.4146 130.16 25.7676 130.586 24.5137 cv
131.34 23.8467 134.491 22.8994 134.805 24.6753 cv
134.288 25.2397 132.412 24.4253 131.722 25.1626 cv
131.836 25.9663 131.943 26.7793 131.883 27.7598 cv
133.063 28.0464 134.101 27.0059 134.317 25.8125 cv
135 26.3936 134.676 25.7119 135.292 25.4873 cv
135.16 26.8164 133.999 27.1167 133.345 27.9219 cv
134.399 28.0576 134.639 27.3765 135.455 27.2725 cv
135.685 26.1816 135.542 25.6094 135.292 24.6753 cv
136.019 24.2393 136.299 24.877 136.754 25.1626 cv
137.627 24.666 139.508 23.896 140.163 25 cv
139.691 26.1118 137.487 25.2988 136.754 26.4609 cv
136.577 27.3115 136.654 27.6899 136.917 28.4092 cv
138.24 28.2192 138.393 26.856 139.188 26.1367 cv
139.103 27.6748 137.861 28.0562 137.241 29.0586 cv
138.962 28.9282 139.831 26.5713 141.462 25.8125 cv
142.011 26.9731 144.463 25.3721 144.709 26.9482 cv
144.354 27.5688 142.912 27.1006 142.273 27.4355 cv
142.043 28.0981 141.742 29.0957 141.136 28.8965 cv
141.021 29.8779 141.392 30.3721 141.949 30.6816 cv
143.485 30.1621 144.224 28.8447 145.357 27.9219 cv
144.756 29.3242 143.67 30.2397 142.273 30.8447 cv
143.365 31.854 144.709 29.5566 146.007 29.2217 cv
146.055 28.5898 145.586 27.937 146.007 27.4355 cv
147.003 27.4683 147.082 28.417 147.143 29.3828 cv
147.483 29.6392 148.188 29.5288 148.279 30.0332 cv
147.538 31.0776 145.701 31.0254 145.195 32.3057 cv
145.04 32.8936 145.896 32.4707 146.007 32.792 cv
146.105 33.3975 145.592 33.8193 146.007 34.2539 cv
147.15 33.8115 148.474 33.6255 149.578 34.2539 cv
149.91 33.4824 150.281 32.3994 149.741 31.4941 cv
cp
ef
157.695 30.1943 mo
157.426 29.7803 157.26 30.8291 156.721 30.6816 cv
157.076 29.7925 157.84 29.3115 158.183 28.4092 cv
158.701 29.5132 157.69 31.6353 156.072 31.6563 cv
156.52 31.0767 157.381 30.9077 157.695 30.1943 cv
cp
ef
94.707 33.1172 mo
95.8306 32.7783 96.1006 31.5879 96.3301 30.3574 cv
96.9199 32.8501 94.6885 34.0117 92.4341 33.7666 cv
93.6768 33.2217 94.4482 32.2085 95.1943 31.1689 cv
95.1416 31.5493 94.999 31.8394 94.8701 32.1436 cv
95.564 32.0801 95.6431 31.4019 95.6816 30.6816 cv
96.4668 31.4155 95.272 32.6826 94.707 33.1172 cv
cp
ef
146.071 210.361 mo
145.836 210.616 147.156 211.448 146.422 212.145 cv
145.227 212.338 144.805 211.259 144.145 210.808 cv
143.087 210.086 141.536 209.785 140.816 208.728 cv
140.891 208.396 141.679 208.669 142.041 208.58 cv
141.609 207.709 139.847 207.965 138.712 207.689 cv
138.74 207.516 138.676 207.425 138.538 207.391 cv
138.53 206.94 138.908 206.815 139.063 206.501 cv
141.447 206.588 143.523 207.396 145.196 208.432 cv
146.527 209.257 148.361 210.376 148.175 211.847 cv
146.854 211.877 146.789 210.841 146.071 210.361 cv
cp
ef
106.997 210.065 mo
106.308 210.465 105.979 209.505 105.422 209.323 cv
103.569 208.763 101.122 208.708 99.6387 207.837 cv
99.5879 207.598 99.8042 207.582 99.8125 207.391 cv
102.209 207.602 107.07 207.766 106.997 210.065 cv
cp
ef
99.4629 208.134 mo
98.9824 208.945 97.9438 209.347 97.1851 209.916 cv
96.4282 210.484 95.7822 211.084 95.0835 211.697 cv
93.7129 212.903 92.6558 214.4 91.0537 215.41 cv
90.5728 214.093 92.3398 212.509 93.8574 211.104 cv
95.2275 209.836 97.6772 207.501 99.4629 208.134 cv
cp
ef
189.175 218.379 mo
189.973 218.396 188.855 218.873 189.175 219.42 cv
188.799 219.326 189.011 218.507 189.175 218.379 cv
cp
ef
225.62 223.577 mo
225.022 224.691 223.35 223.735 222.466 223.43 cv
219.445 222.377 215.367 221.314 211.778 220.608 cv
211.8 220.229 212.032 220.032 212.479 220.013 cv
217.086 220.418 221.977 221.862 225.62 223.577 cv
cp
ef
34.4575 224.173 mo
33.2178 224.583 32.854 223.373 31.4785 223.132 cv
30.3599 222.937 28.6318 223.058 27.4482 223.132 cv
25.8281 223.236 24.1489 224.123 23.2437 223.281 cv
25.478 221.755 33.687 221.093 34.4575 224.173 cv
cp
ef
121.893 224.915 mo
120.691 225.066 117.833 225.401 117.16 224.616 cv
117.896 223.626 121.764 223.709 121.893 224.915 cv
cp
ef
125.22 226.993 mo
124.306 227.517 123.948 226.468 122.768 226.251 cv
120.999 225.924 118.226 226.945 117.336 225.657 cv
117.307 225.483 117.375 225.393 117.51 225.36 cv
120.292 225.137 124.84 224.686 125.22 226.993 cv
cp
ef
204.419 231.744 mo
202.604 232.343 200.713 233.64 198.637 233.527 cv
200.388 232.972 202.887 231.497 204.419 231.744 cv
cp
ef
189.875 232.636 mo
189.035 233.994 186.891 234.769 185.145 235.456 cv
183.38 236.15 181.156 237 179.012 236.794 cv
178.681 235.825 180.398 235.796 181.115 235.605 cv
183.801 234.892 186.762 233.748 188.825 232.486 cv
189.258 232.467 189.67 232.465 189.875 232.636 cv
cp
ef
203.018 248.969 mo
206.236 249.023 209.082 248.765 211.078 247.78 cv
208.696 248.436 204.705 247.726 203.018 248.969 cv
cp
205.995 233.082 mo
206.112 233.082 206.229 233.082 206.348 233.082 cv
211.321 235.564 215.386 241.703 213.179 247.93 cv
210.567 249.745 204.92 250.258 200.214 249.86 cv
197.681 249.646 194.729 248.921 194.257 247.038 cv
195.885 246.893 196.794 248.518 198.637 248.672 cv
199.91 248.168 201.897 248.268 203.191 247.78 cv
200.913 247.038 199.274 245.756 197.586 244.515 cv
197.535 244.125 197.649 243.877 198.112 243.921 cv
197.075 242.996 196.514 241.554 195.308 240.655 cv
194.609 240.133 192.967 240.042 193.205 239.021 cv
196.133 238.895 199.057 242.82 199.688 244.664 cv
201.169 245.656 203.866 247.869 205.995 246.445 cv
205.83 245.472 206.27 244.712 206.172 243.771 cv
205.995 242.109 204.423 241.154 204.069 239.764 cv
205.916 239.447 208.136 239.449 210.376 239.467 cv
209.316 240.15 207.675 240.346 205.995 240.506 cv
205.901 241.081 206.442 241.116 206.521 241.543 cv
207.773 241.3 209.383 240.632 210.729 240.951 cv
210.437 242.189 208.549 242.076 207.047 242.287 cv
206.923 242.838 207.347 242.925 207.223 243.476 cv
208.584 243.619 210.291 242.823 212.129 242.882 cv
211.991 244.793 208.274 243.674 207.398 244.96 cv
208.406 245.702 211.106 244.237 212.129 244.96 cv
211.644 246.381 208.876 245.866 207.223 246.296 cv
207.25 246.667 206.947 246.756 206.873 247.038 cv
208.453 247.811 211.142 245.541 211.778 247.335 cv
212.834 246.697 212.772 244.862 212.654 243.771 cv
212.174 239.354 209.028 235.943 205.995 233.675 cv
205.995 233.478 205.995 233.28 205.995 233.082 cv
cp
ef
203.191 234.564 mo
204.213 234.9 202.529 235.973 201.966 235.456 cv
202.105 234.933 203.277 235.28 203.191 234.564 cv
cp
ef
116.108 240.356 mo
116.587 240.25 116.46 240.651 116.808 240.655 cv
116.813 241.497 116.556 242.122 115.758 242.287 cv
115.401 241.645 115.6 240.703 116.108 240.356 cv
cp
ef
187.772 240.951 mo
187.891 240.951 188.008 240.951 188.123 240.951 cv
190.003 241.402 191.572 242.397 193.028 243.324 cv
194.379 244.186 196.262 245.104 196.71 246.741 cv
193.353 245.331 191.034 243.038 187.772 241.543 cv
187.772 241.348 187.772 241.148 187.772 240.951 cv
cp
ef
77.21 250.307 mo
76.5293 250.288 76.3257 249.869 75.9829 249.563 cv
75.5449 249.834 75.5317 250.468 74.7583 250.455 cv
74.46 250.31 74.3071 250.045 74.4087 249.563 cv
73.5127 249.745 73.9106 251.022 73.1802 251.346 cv
70.9282 249.198 75.2813 248.276 76.6851 247.335 cv
77.7349 247.814 78.7803 249.709 77.21 250.307 cv
cp
ef
180.413 249.563 mo
180.88 251.14 176.662 251.811 176.56 250.157 cv
177.842 250.053 179.903 249.827 180.413 249.563 cv
cp
ef
87.0229 252.83 mo
85.6626 254.991 82.6533 255.759 81.4165 258.027 cv
82.4517 259.821 84.6304 260.648 85.7959 262.332 cv
81.6982 261.203 79.5122 258.453 78.4365 254.761 cv
80.3472 253.947 81.6221 251.826 84.2202 252.09 cv
83.3721 253.745 80.6587 253.819 79.8389 255.503 cv
80.1084 255.967 80.2129 256.572 80.5386 256.988 cv
82.5542 255.572 84.1143 252.993 87.0229 252.83 cv
cp
ef
155.533 253.572 mo
154.864 254.835 152.423 253.644 151.328 253.425 cv
151.328 253.227 151.328 253.027 151.328 252.83 cv
152.632 252.59 154.603 253.008 155.533 253.572 cv
cp
ef
152.73 255.8 mo
151.163 256.119 149.502 255.281 149.226 254.019 cv
150.582 253.88 152.127 254.811 152.73 255.8 cv
cp
ef
87.8979 255.06 mo
87.7607 256.134 86.5547 256.96 85.7959 257.73 cv
85.0508 258.487 84.2529 259.631 83.1685 259.661 cv
83.646 257.343 85.6826 256.347 87.1978 254.908 cv
87.5132 254.891 87.5669 255.093 87.8979 255.06 cv
cp
ef
89.8257 256.244 mo
88.6885 258.206 86.9019 260.393 84.9204 261.146 cv
85.8091 259.077 87.4316 257.633 88.9502 256.097 cv
89.3564 256.05 89.6235 256.121 89.8257 256.244 cv
cp
ef
102.792 270.055 mo
103.085 270.055 103.377 270.055 103.668 270.055 cv
103.74 271.527 104.366 272.53 104.545 273.914 cv
102.556 273.612 102.372 270.517 101.041 269.165 cv
100.094 268.827 98.7607 268.818 98.2368 268.124 cv
99.3677 266.965 102.783 268.356 102.792 270.055 cv
cp
ef
96.3091 263.076 mo
96.7202 263.124 96.48 263.725 96.835 263.819 cv
97.5684 263.151 99.3857 262.616 99.6387 262.036 cv
98.7207 262.544 97.2754 262.609 96.3091 263.076 cv
cp
102.091 262.036 mo
105.123 262.388 109.342 261.732 110.502 263.67 cv
111.004 263.1 110.045 262.739 110.328 261.889 cv
107.559 261.075 103.939 259.746 102.091 262.036 cv
cp
122.768 258.176 mo
125.178 265.339 132.729 268.147 136.96 273.767 cv
137.168 272.224 137.291 270.291 136.96 268.719 cv
136.81 268.004 135.707 266.835 137.137 266.64 cv
138.239 266.892 137.861 268.401 138.538 269.016 cv
139.473 269.371 140.382 270.044 141.34 270.648 cv
142.161 271.167 143.51 272.159 143.97 271.983 cv
142.188 268.983 141.895 265.467 138.888 263.67 cv
136.799 262.419 133.901 261.952 131.879 260.553 cv
130.756 259.774 130.234 258.842 129.075 258.027 cv
126.892 258.31 124.375 257.403 122.768 258.176 cv
cp
130.651 257.73 mo
130.581 257.372 130.972 257.407 130.827 256.988 cv
130.173 256.899 129.921 256.47 129.428 256.244 cv
129.62 256.922 130.241 257.238 130.651 257.73 cv
cp
122.592 257.581 mo
124.821 257.475 126.51 257.828 128.725 257.73 cv
128.049 255.256 124.575 257.02 122.592 257.581 cv
cp
122.415 257.136 mo
123.796 256.821 125.213 256.535 126.447 256.097 cv
125.046 256.097 123.644 256.097 122.242 256.097 cv
122.297 256.446 122.521 256.654 122.415 257.136 cv
cp
73.8804 255.354 mo
72.6211 255.869 70.9629 256.05 69.5005 256.395 cv
71.2822 256.418 73.4146 255.951 73.8804 255.354 cv
cp
122.065 255.503 mo
122.757 255.492 123.385 255.431 123.819 255.207 cv
123.286 255.347 122.042 254.889 122.065 255.503 cv
cp
126.624 255.06 mo
125.742 255.351 124.547 255.377 123.644 255.65 cv
123.265 255.546 122.528 255.804 123.294 255.8 cv
124.579 255.8 125.863 255.8 127.147 255.8 cv
127.089 255.453 126.969 255.16 126.624 255.06 cv
cp
113.131 255.949 mo
114.504 256.093 115.308 255.064 116.46 255.503 cv
116.358 255.105 116.978 254.574 116.46 254.314 cv
115.479 254.971 114.021 255.219 113.131 255.949 cv
cp
177.962 255.65 mo
179.798 255.475 181.07 254.823 181.815 253.722 cv
180.508 253.752 179.111 254.991 177.962 255.65 cv
cp
122.065 254.761 mo
123.487 255.196 125.088 254.569 126.797 254.761 cv
126.581 252.052 123.419 254.196 122.065 254.761 cv
cp
113.305 254.761 mo
114.578 254.255 116.886 254.626 116.986 253.127 cv
115.783 253.1 114.337 254.148 113.305 254.761 cv
cp
89.8257 253.869 mo
89.2852 253.729 88.8179 252.752 88.4253 252.979 cv
88.7749 253.281 89.3882 254.136 89.8257 253.869 cv
cp
174.981 255.65 mo
175.624 255.65 176.268 255.65 176.909 255.65 cv
178.161 254.633 180.265 254.336 180.94 252.83 cv
179.099 253.301 176.802 254.668 174.981 255.65 cv
cp
121.542 254.168 mo
122.248 253.894 123.343 252.466 123.294 252.533 cv
122.838 253.119 121.181 253.374 121.542 254.168 cv
cp
148.35 253.127 mo
148.5 252.906 148.791 252.809 149.226 252.83 cv
149.196 252.608 149.288 252.283 149.05 252.237 cv
148.995 252.596 147.972 252.893 148.35 253.127 cv
cp
106.472 252.386 mo
106.879 253.294 108.593 254.338 109.801 255.06 cv
109.803 254.763 110.28 254.869 110.15 254.462 cv
108.827 253.94 107.908 252.324 106.472 252.386 cv
cp
114.356 252.979 mo
115.462 252.974 116.192 252.652 117.16 252.533 cv
117.172 250.965 115.087 252.832 114.356 252.979 cv
cp
111.203 253.572 mo
110.64 252.464 108.359 252.025 107.172 251.938 cv
108.445 252.42 109.817 254.151 111.203 253.572 cv
cp
122.242 254.168 mo
123.523 253.865 124.57 253.366 125.571 252.83 cv
124.969 252.647 125.122 251.823 124.52 251.642 cv
123.842 252.551 123.006 253.329 122.242 254.168 cv
cp
111.552 252.83 mo
111.151 252.229 108.545 251.422 107.348 251.494 cv
108.875 251.649 110.869 252.945 111.552 252.83 cv
cp
115.233 252.237 mo
115.703 251.596 117.273 251.889 117.336 250.899 cv
116.462 251.104 115.185 251.745 115.233 252.237 cv
cp
176.033 254.462 mo
177.877 253.798 179.295 252.771 181.115 252.09 cv
180.868 251.473 181.616 250.94 181.115 250.603 cv
179.598 252.038 176.86 252.441 176.033 254.462 cv
cp
169.2 249.713 mo
168.605 249.752 167.78 249.596 167.448 249.86 cv
168.912 250.897 171.384 252.365 173.582 253.276 cv
173.142 251.223 170.592 250.958 169.2 249.713 cv
cp
121.716 253.276 mo
122.688 252.514 123.706 251.793 124.344 250.752 cv
123.887 250.494 124.158 249.622 123.644 249.415 cv
123.177 250.752 121.639 251.973 121.716 253.276 cv
cp
152.203 250.157 mo
153.381 250.919 156.341 251.663 158.161 250.899 cv
156.209 250.377 154.474 249.67 152.38 249.268 cv
152.506 249.72 152.201 249.808 152.203 250.157 cv
cp
150.802 250.157 mo
151.18 250.07 151.354 249.054 150.978 248.821 cv
151.202 249.392 150.047 250.09 150.802 250.157 cv
cp
127.5 251.049 mo
127.518 251.429 127.598 251.756 127.85 251.938 cv
129.001 250.887 130.519 250.143 132.053 249.415 cv
130.789 248.015 128.925 250.667 127.5 251.049 cv
cp
111.552 249.713 mo
111.989 249.52 112.28 250.146 112.429 249.713 cv
111.795 249.55 112.457 248.983 112.08 248.821 cv
111.923 249.134 111.546 249.259 111.552 249.713 cv
cp
164.994 248.672 mo
165.516 249.5 167.174 249.778 168.324 249.268 cv
167.3 248.676 166.713 248.498 164.994 248.672 cv
cp
121.542 248.376 mo
121.793 249.827 121.056 251.229 121.542 252.386 cv
122.099 251.223 122.878 250.251 123.468 249.118 cv
122.86 249.088 122.121 249.171 122.065 248.672 cv
122.745 248.593 122.922 248.938 123.644 248.821 cv
123.789 248.4 123.398 248.436 123.468 248.077 cv
122.719 248.086 122.186 248.278 121.542 248.376 cv
cp
158.161 247.78 mo
157.606 247.749 156.773 247.186 156.233 247.633 cv
157.058 247.58 157.68 248.413 158.161 247.78 cv
cp
162.017 247.78 mo
163.172 248.105 164.533 248.722 165.871 248.077 cv
164.89 247.461 163.266 247.072 162.017 247.78 cv
cp
121.542 248.077 mo
122.169 247.917 122.902 247.847 123.468 247.633 cv
123.43 247.37 123.646 246.889 123.118 247.038 cv
122.614 247.406 121.24 247.031 121.542 248.077 cv
cp
155.533 247.038 mo
155.511 246.795 154.331 246.795 154.308 247.038 cv
154.846 246.86 155.547 247.687 155.533 247.038 cv
cp
112.779 247.633 mo
111.913 249.475 113.198 247.34 112.954 246.891 cv
112.752 247.296 112.918 247.34 112.779 247.633 cv
cp
126.447 249.713 mo
127.533 248.75 129.311 247.585 130.302 247.038 cv
129.636 248.356 127.749 248.637 126.974 249.86 cv
128.393 249.832 129.131 248.058 131.179 248.077 cv
131.302 247.431 130.881 247.242 131.003 246.593 cv
129.48 247.239 125.594 248.01 126.447 249.713 cv
cp
121.716 247.038 mo
122.052 246.977 122.472 246.985 122.415 246.593 cv
122.184 246.593 121.949 246.593 121.716 246.593 cv
121.716 246.741 121.716 246.891 121.716 247.038 cv
cp
119.789 246.741 mo
119.763 247.111 119.88 247.359 120.138 247.484 cv
120.178 247.368 120.285 247.312 120.49 247.335 cv
120.393 247.12 120.694 246.567 120.313 246.593 cv
120.284 246.767 120.037 246.754 119.789 246.741 cv
cp
66.3472 247.484 mo
66.9185 247.368 67.7266 246.683 67.5732 246.445 cv
67.3252 246.928 66.2798 246.734 66.3472 247.484 cv
cp
92.1035 247.484 mo
93.1177 247.104 94.2793 246.854 95.0835 246.296 cv
94.1528 246.651 92.3901 247.081 92.1035 247.484 cv
cp
158.688 246.593 mo
159.617 246.944 161.881 247.411 162.893 246.741 cv
161.579 246.216 160.217 246.047 158.688 246.593 cv
cp
114.356 246.891 mo
114.683 246.91 114.942 246.988 115.059 247.188 cv
114.453 253.507 109.905 256.481 105.596 259.661 cv
108.013 260.236 110.654 260.622 112.253 261.889 cv
113.173 261.386 112.585 260.21 113.305 259.364 cv
111.421 258.876 108.525 259.947 107.698 258.77 cv
109.137 257.965 113.753 258.009 114.531 259.215 cv
115.231 258.176 115.748 256.978 116.285 255.8 cv
114.844 256.166 113.565 257.455 112.429 257.581 cv
112.937 256.774 114.256 256.654 114.883 255.949 cv
114.139 255.979 112.925 256.798 112.429 256.097 cv
112.672 255.56 113.539 255.551 113.832 255.06 cv
113.206 254.943 112.628 255.518 112.429 254.908 cv
113.121 254.207 114.321 253.94 115.059 253.276 cv
114.429 253.177 113.701 253.754 113.481 253.127 cv
113.757 252.669 114.5 252.606 114.883 252.237 cv
114.469 251.141 117.727 251.084 117.16 249.86 cv
116.376 250.188 116.068 250.915 115.059 251.049 cv
115.283 250.199 116.536 250.223 116.986 249.563 cv
116.822 249.404 116.337 249.516 116.46 249.118 cv
116.954 248.995 116.915 249.328 117.336 249.268 cv
117.31 248.303 117.364 247.411 117.86 246.891 cv
116.201 247.01 115.927 245.957 114.531 245.85 cv
114.531 246.246 114.599 246.699 114.356 246.891 cv
cp
156.583 246.001 mo
157.748 246.4 158.669 246.086 160.09 246.001 cv
159.518 245.045 157.337 245.456 156.583 246.001 cv
cp
155.708 245.702 mo
156.375 245.624 156.964 245.479 157.462 245.257 cv
156.757 245.303 156.064 245.361 155.708 245.702 cv
cp
153.605 245.109 mo
154.103 244.986 154.06 245.319 154.481 245.257 cv
154.79 244.593 153.555 244.723 153.605 245.109 cv
cp
154.656 245.257 mo
155.711 245.261 156.649 245.166 157.285 244.811 cv
156.475 244.706 154.609 243.978 154.656 245.257 cv
cp
150.452 244.367 mo
151.811 244.637 153.373 244.431 154.481 244.068 cv
153.272 243.441 151.405 243.646 150.452 244.367 cv
cp
73.1802 243.623 mo
70.1689 244.884 67.8945 246.767 65.8213 248.821 cv
65.2529 248.76 65.2656 248.203 64.769 248.077 cv
64.769 249.268 64.769 250.455 64.769 251.642 cv
67.9009 249.298 71.187 247.081 74.7583 245.109 cv
73.894 244.899 73.5483 244.253 73.1802 243.623 cv
cp
64.9453 244.811 mo
64.9644 245.439 65.4175 245.699 65.9971 245.85 cv
66.9438 244.971 68.9463 244.196 69.3257 243.324 cv
67.9819 243.921 66.7183 244.582 64.9453 244.811 cv
cp
149.226 243.771 mo
150.222 243.724 151.231 243.69 151.854 243.324 cv
151.268 242.721 149.585 242.955 149.226 243.771 cv
cp
67.749 246.148 mo
69.3447 245.075 71.0513 244.097 72.8296 243.177 cv
73.0098 242.625 72.4688 242.164 72.3047 242.732 cv
72.5186 242.749 72.7197 242.777 72.6548 243.031 cv
70.9214 243.888 68.5967 245.033 67.749 246.148 cv
cp
152.73 242.586 mo
153.427 242.539 153.611 242.929 154.308 242.882 cv
154.333 242.513 154.339 242.161 153.956 242.14 cv
153.741 242.45 152.9 242.235 152.73 242.586 cv
cp
162.543 243.623 mo
160.792 242.459 156.974 240.985 154.481 242.287 cv
154.687 242.313 154.672 242.521 154.656 242.732 cv
155.392 242.704 156.375 242.116 156.935 242.437 cv
156.67 243.003 155.332 242.662 155.008 243.177 cv
156.592 244.255 158.698 242.99 160.266 243.623 cv
159.363 243.651 158.457 243.678 157.984 244.068 cv
159.272 244.905 161.023 243.99 162.543 244.367 cv
162.253 244.816 161.187 244.604 160.789 244.96 cv
163.058 245.518 164.74 247.01 167.448 246.741 cv
167.518 247.296 166.353 246.804 166.221 247.188 cv
168.378 248.033 170.201 249.161 172.18 250.157 cv
171.777 249.438 171.803 248.784 172.18 248.077 cv
168.814 246.724 166.577 244.409 162.543 243.623 cv
cp
129.953 243.031 mo
130.579 243.018 130.964 242.799 131.528 242.732 cv
131.443 242.253 132.346 241.855 131.879 241.543 cv
131.373 242.155 130.546 242.493 129.953 243.031 cv
cp
176.385 253.127 mo
177.973 251.305 182.351 251.056 181.641 247.78 cv
180.524 248.015 177.812 248.964 176.909 247.93 cv
177.552 246.841 180.299 247.535 181.991 247.335 cv
181.854 246.724 182.261 246.573 182.166 246.001 cv
180.515 245.8 177.574 247.406 177.085 245.85 cv
178.475 244.899 181.915 245.687 182.868 244.367 cv
181.674 244.186 178.312 244.969 178.138 243.476 cv
179.266 242.877 181.36 243.732 183.218 243.476 cv
183.621 242.68 183.813 241.704 184.443 241.101 cv
176.534 240.561 172.885 248.049 176.385 253.127 cv
cp
155.708 241.396 mo
155.382 241.278 155.066 241.148 154.656 241.101 cv
154.436 241.6 155.545 241.714 155.708 241.396 cv
cp
151.152 242.437 mo
152.134 242.276 152.953 241.981 153.956 241.842 cv
154.041 240.437 151.337 241.744 151.152 242.437 cv
cp
123.644 244.367 mo
123.9 244.495 124.197 244.589 124.169 244.96 cv
126.6 244.148 128.379 242.786 130.127 241.396 cv
127.539 240.964 125.747 243.435 123.644 244.367 cv
cp
150.277 253.425 mo
148.763 253.761 147.334 254.928 145.372 255.354 cv
145.174 255.396 144.745 255.171 144.494 255.207 cv
142.313 255.507 138.195 257.477 137.137 254.314 cv
138.114 253.885 138.801 254.846 139.59 255.06 cv
146.12 254.75 149.453 251.736 150.277 246.593 cv
146.862 245.047 141.234 244.311 136.084 244.515 cv
135.016 244.559 133.368 245.088 132.755 244.367 cv
133.243 243.79 133.496 243.014 134.332 242.732 cv
133.956 242.606 133.713 242.369 133.807 241.842 cv
134.424 241.227 136.466 241.818 137.311 241.396 cv
136.028 241.344 135.001 241.076 133.807 240.951 cv
131.865 243.337 131.723 246.765 133.104 249.86 cv
131.162 249.557 129.123 251.324 127.85 252.533 cv
129.107 252.485 130.206 251.107 131.703 250.899 cv
132.289 250.817 132.891 251.212 133.457 251.049 cv
133.704 252.924 136.677 253.257 136.61 254.908 cv
134.351 254.498 133.397 252.979 132.231 251.642 cv
131.077 252.4 129.394 252.706 128.725 253.869 cv
129.024 254.208 129.241 254.62 129.602 254.908 cv
130.46 254.235 131.213 252.734 132.231 252.681 cv
131.486 253.635 130.387 254.286 129.774 255.354 cv
130.309 255.745 130.471 256.448 131.003 256.841 cv
131.523 255.647 132.193 254.581 133.457 254.019 cv
132.422 255.171 131.453 256.381 130.827 257.88 cv
131.412 257.88 131.996 257.88 132.581 257.88 cv
132.77 257.098 133.075 256.418 133.807 256.097 cv
133.597 256.91 132.965 257.362 132.755 258.176 cv
133.446 258.924 134.282 259.555 135.383 259.958 cv
135.588 259.192 135.65 258.304 136.26 257.88 cv
136.262 258.871 135.627 259.322 135.559 260.254 cv
137.285 261.167 138.789 262.269 141.34 262.481 cv
140.695 261.306 138.999 258.325 141.166 257.434 cv
141.46 259.785 141.505 263.488 145.896 262.332 cv
145.628 261.318 142.489 258.798 144.494 257.284 cv
145.446 258.861 145.652 261.542 147.998 261.741 cv
148.949 261.819 149.713 261.258 150.802 260.997 cv
150.408 260.293 149.454 259.547 148.875 258.622 cv
148.412 257.883 147.392 256.529 148.524 255.8 cv
149.613 256.37 150.408 260.313 152.029 260.254 cv
152.741 260.229 154.16 258.228 154.656 257.434 cv
155.446 256.173 155.634 254.821 156.583 254.019 cv
156.917 253.984 156.971 254.186 157.285 254.168 cv
157.294 253.433 157.493 252.856 157.635 252.237 cv
155.104 252.353 153.347 251.813 151.678 251.198 cv
151.203 251.934 150.11 252.145 150.277 253.425 cv
cp
124.52 243.177 mo
124.5 243.651 125.632 242.667 126.271 242.287 cv
127.088 241.803 128.068 241.372 128.549 240.951 cv
126.63 241.205 125.864 242.438 124.52 243.177 cv
cp
123.294 242.732 mo
123.106 242.728 122.848 242.802 123.118 242.882 cv
124.187 242.154 126.515 241.703 126.797 240.803 cv
125.7 241.506 124.224 241.89 123.294 242.732 cv
cp
110.853 243.324 mo
111.055 244.394 110.528 245.621 110.853 246.296 cv
111.559 244.802 110.967 243.721 111.027 242.437 cv
111.203 242.438 111.236 242.315 111.379 242.287 cv
112.143 242.628 112.119 243.641 112.954 243.921 cv
113.36 242.68 113.865 241.523 114.531 240.506 cv
113.229 240.788 112.503 241.557 111.027 241.694 cv
110.621 241.593 110.772 241.019 110.328 240.951 cv
110.232 241.525 110.639 241.676 110.502 242.287 cv
110.149 242.731 108.821 242.63 108.224 242.437 cv
108.207 242.669 108.247 242.951 107.874 242.882 cv
108.023 243.498 108.113 244.163 108.399 244.664 cv
108.432 243.898 108.619 243.266 109.276 243.031 cv
109.637 243.573 110.302 242.942 110.853 243.324 cv
cp
162.543 241.99 mo
162.329 241.131 162.094 240.291 161.491 239.764 cv
161.618 240.695 161.582 241.765 162.543 241.99 cv
cp
162.017 239.911 mo
162.565 240.536 162.813 241.413 163.066 242.287 cv
166.562 243.484 169.175 245.426 172.529 246.741 cv
173.395 244.159 175.849 242.923 177.61 241.101 cv
173.484 239.479 167.188 239.235 162.017 239.911 cv
cp
156.409 240.209 mo
158.207 240.517 159.647 241.127 161.314 241.543 cv
161.15 240.051 159.975 239.413 159.037 238.575 cv
158.156 239.117 157.057 239.471 156.409 240.209 cv
cp
85.0942 239.168 mo
83.4043 238.422 81.6284 238.716 79.3135 238.872 cv
78.7803 240.568 74.2788 240.564 73.8804 242.14 cv
73.6074 243.227 75.0952 243.852 75.6333 244.811 cv
80.3584 242.185 86.106 240.42 91.7534 238.575 cv
90.4253 238.584 86.2808 237.844 85.0942 239.168 cv
cp
75.6333 239.764 mo
76.1182 239.161 75.7124 238.472 76.8599 238.278 cv
76.4277 238.298 76.0161 238.302 75.8105 238.129 cv
75.8027 238.627 75.1382 239.333 75.6333 239.764 cv
cp
129.428 239.467 mo
137.041 239.216 145.709 239.17 150.978 241.694 cv
151.829 241.424 152.678 241.156 153.43 240.803 cv
151.278 240.646 150.065 239.695 147.648 239.764 cv
147.106 239.678 147.188 239.065 146.598 239.021 cv
144.577 239.021 141.826 239.021 138.362 239.021 cv
135.755 239.021 130.206 239.547 131.003 237.833 cv
130.818 238.5 128.784 239.076 129.428 239.467 cv
cp
161.141 239.911 mo
161.058 239.049 161.874 238.95 162.017 238.278 cv
161.252 238.135 160.754 237.764 160.09 237.536 cv
160.59 238.36 160.916 239.216 161.141 239.911 cv
cp
153.956 239.021 mo
154.257 239.211 154.174 239.728 154.656 239.764 cv
155.101 238.948 156.646 238.282 156.583 237.536 cv
155.912 238.202 154.595 238.324 153.956 239.021 cv
cp
153.956 238.278 mo
154.361 237.936 155.785 237.012 155.533 237.09 cv
155.044 237.422 153.48 237.619 153.956 238.278 cv
cp
160.439 237.237 mo
162.313 237.684 164.591 238.569 166.922 238.129 cv
164.46 237.89 162.431 237.285 160.439 236.645 cv
160.439 236.842 160.439 237.04 160.439 237.237 cv
cp
105.772 236.645 mo
93.0103 238.719 81.4346 242.422 72.4795 247.633 cv
69.5474 249.34 66.6973 251.331 64.769 253.722 cv
70.2598 254.672 76.0811 253.434 79.6641 251.791 cv
79.9189 251.461 79.7817 250.802 80.189 250.603 cv
88.0024 247.027 96.9648 244.426 105.07 241.101 cv
105.52 240.939 105.685 241.738 105.946 241.248 cv
105.114 240.53 106.74 240.022 106.297 239.614 cv
97.4893 240.916 91.1157 245.056 83.1685 246.593 cv
82.5562 246.942 83.2856 247.555 82.6426 247.93 cv
81.6475 247.867 80.271 248.699 79.8389 247.78 cv
81.0742 246.166 83.4243 245.361 85.4463 244.515 cv
91.8418 241.834 99.2817 240.081 106.122 237.98 cv
105.964 237.569 106.482 236.586 105.772 236.645 cv
cp
157.812 236.941 mo
157.108 238.128 155.81 238.808 155.008 239.911 cv
157.009 239.873 157.709 238.736 159.037 238.129 cv
158.448 237.491 158.112 236.636 157.111 236.348 cv
156.625 237.028 155.013 237.538 155.008 238.129 cv
155.8 237.712 156.964 236.82 157.812 236.941 cv
cp
175.334 239.168 mo
176.15 239.577 176.621 239.037 177.085 238.725 cv
177.282 237.942 176.61 237.341 177.085 236.794 cv
176.603 236.558 176.055 236.38 175.509 236.198 cv
175.921 237.234 175.864 238.291 175.334 239.168 cv
cp
160.09 237.09 mo
160.262 236.2 159.389 236.198 158.863 235.902 cv
159.109 236.437 159.365 236.962 160.09 237.09 cv
cp
88.9502 236.348 mo
89.7046 236.343 90.2397 236.154 90.7017 235.902 cv
89.8647 235.835 89.3105 236.009 88.9502 236.348 cv
cp
88.6001 235.902 mo
87.9517 235.996 86.8535 235.71 86.498 236.05 cv
87.2769 236.096 88.1108 236.385 88.6001 235.902 cv
cp
72.3047 237.98 mo
71.6597 236.774 69.8911 238.712 68.9756 237.684 cv
67.1152 238.731 66.5381 240.864 65.6475 242.732 cv
67.791 241.764 70.377 239.519 73.3564 240.655 cv
74.2036 238.996 75.0693 237.354 76.1602 235.902 cv
76.3438 235.895 76.2974 235.712 75.9829 235.755 cv
74.4653 236.246 73.4219 237.146 72.3047 237.98 cv
cp
173.056 238.725 mo
175.272 239.051 174.592 236.775 174.106 235.902 cv
173.639 235.755 173.182 235.597 172.529 235.605 cv
172.798 236.641 173.465 237.53 173.056 238.725 cv
cp
84.2202 237.684 mo
84.5991 237.362 85.2417 237.263 85.7959 237.09 cv
85.7329 236.154 83.7788 236.82 83.5195 236.05 cv
83.7407 235.844 84.3765 235.985 84.394 235.605 cv
83.9854 235.605 83.5771 235.605 83.1685 235.605 cv
82.9927 236.746 83.4722 237.328 84.2202 237.684 cv
cp
153.956 237.536 mo
154.674 236.905 155.883 236.692 156.583 236.05 cv
155.755 235.854 155.446 235.142 154.481 235.456 cv
154.495 236.062 153.725 236.002 153.605 236.495 cv
154.595 237.09 155.161 235.646 155.884 236.05 cv
155.488 236.658 153.864 237.009 153.956 237.536 cv
cp
171.478 238.575 mo
172.687 237.744 171.288 236.211 170.952 235.309 cv
170.292 235.365 169.369 234.879 168.85 235.309 cv
170.292 235.916 171.021 237.131 171.478 238.575 cv
cp
115.758 237.09 mo
116.611 236.822 116.886 236.065 117.51 235.605 cv
116.676 235.669 116.532 235.147 115.934 235.011 cv
115.762 235.607 115.72 236.314 115.758 237.09 cv
cp
122.415 237.536 mo
123.104 236.68 124.735 235.838 124.696 234.863 cv
123.649 235.415 122.121 236.343 122.415 237.536 cv
cp
118.387 238.129 mo
119.694 237.307 121.441 236.069 121.716 234.863 cv
120.592 235.842 118.684 236.946 118.387 238.129 cv
cp
70.377 236.794 mo
71.8872 236.341 73.3262 235.825 74.2314 234.863 cv
73.6895 234.849 73.2607 234.931 73.0068 235.159 cv
73.3115 236.115 70.8184 235.977 70.377 236.794 cv
cp
159.913 235.755 mo
159.332 235.307 158.404 235.152 157.812 234.714 cv
158.035 235.3 159.719 236.12 159.913 235.755 cv
cp
74.0586 240.655 mo
75.2349 240.218 75.0747 238.646 75.8105 237.833 cv
76.3711 238.265 76.6934 237.595 77.3848 237.684 cv
77.8384 236.829 78.125 235.835 79.1367 235.456 cv
78.6973 236.222 78.1406 236.888 77.7349 237.684 cv
78.7681 237.668 79.9609 237.786 80.5386 237.387 cv
79.9526 236.762 79.6904 235.525 80.0137 234.564 cv
76.251 234.989 74.8076 238.17 74.0586 240.655 cv
cp
132.931 236.645 mo
134.268 236.639 135.732 236.742 136.26 236.05 cv
135.442 235.506 134.712 234.888 133.807 234.417 cv
133.5 235.147 133.207 235.888 132.931 236.645 cv
cp
104.894 235.605 mo
103.921 235.222 103.168 235.922 102.442 236.198 cv
103.824 236.133 104.806 235.727 106.122 235.605 cv
105.83 235.309 106.137 234.504 105.772 234.27 cv
105.542 234.768 105.472 235.401 104.894 235.605 cv
cp
85.7959 234.714 mo
86.9019 234.718 88.0854 234.655 88.9502 234.863 cv
89.4756 234.863 90.002 234.863 90.5278 234.863 cv
90.397 234.527 89.5439 234.803 89.126 234.714 cv
88.0493 234.71 86.0146 234.022 85.4463 234.564 cv
85.4854 234.682 85.5942 234.738 85.7959 234.714 cv
cp
153.43 234.714 mo
153.407 234.239 153.033 234.062 152.38 234.12 cv
152.369 234.627 152.907 235.113 153.43 234.714 cv
cp
122.592 234.564 mo
123.026 234.916 123.277 234.273 123.468 233.972 cv
123.052 234.065 122.652 234.17 122.592 234.564 cv
cp
82.4678 237.536 mo
81.7041 236.692 81.6064 234.746 81.7676 233.972 cv
80.4966 234.757 81.1826 237.699 82.4678 237.536 cv
cp
119.963 235.902 mo
120.509 234.929 122.054 234.803 122.415 233.675 cv
120.956 233.774 119.667 234.807 119.963 235.902 cv
cp
111.729 234.12 mo
111.864 235.54 112.428 236.595 113.305 237.387 cv
112.984 236.324 112.905 235.055 112.954 233.675 cv
112.293 233.609 112.132 233.966 111.729 234.12 cv
cp
82.9927 234.714 mo
83.4014 234.714 83.8105 234.714 84.2202 234.714 cv
84.626 233.875 83.4414 234.384 83.5195 233.822 cv
83.8501 233.757 84.5752 234.026 84.394 233.527 cv
83.749 233.183 83.1084 234.113 82.9927 234.714 cv
cp
113.305 233.378 mo
113.325 234.103 113.549 236.018 114.006 235.011 cv
114.377 235.488 113.905 236.684 114.531 236.941 cv
114.441 235.975 114.641 235.252 114.883 234.564 cv
113.975 234.593 114.137 233.714 113.832 233.229 cv
113.801 233.403 113.553 233.391 113.305 233.378 cv
cp
151.152 235.456 mo
149.245 234.922 146.764 231.812 145.196 234.12 cv
143.77 234.147 143.247 234.943 142.393 235.456 cv
141.443 235.321 140.543 235.142 139.765 234.863 cv
139.576 236.09 138.149 236.266 137.662 237.237 cv
142.705 237.172 147.46 237.348 150.452 239.021 cv
151.418 238.851 152.183 239.628 152.906 239.168 cv
152.084 238.131 151.526 236.872 151.152 235.456 cv
cp
114.356 233.229 mo
114.242 233.771 114.476 234.02 114.706 234.27 cv
115.522 234.217 115.465 233.426 115.934 233.082 cv
115.385 233.111 114.648 232.98 114.356 233.229 cv
cp
150.802 234.12 mo
150.579 233.469 149.741 233.337 149.226 232.933 cv
149.341 233.679 150.161 233.822 150.802 234.12 cv
cp
100.865 234.863 mo
101.193 234.982 101.505 235.111 101.917 235.159 cv
102.108 234.625 102.277 233.295 101.917 232.783 cv
101.554 233.469 101.242 234.193 100.865 234.863 cv
cp
99.6387 234.564 mo
99.9434 234.554 100.185 234.599 100.339 234.714 cv
100.322 234.149 101.046 232.815 100.69 232.933 cv
100.347 233.483 99.9316 233.972 99.6387 234.564 cv
cp
147.998 232.933 mo
148.436 232.909 148.541 233.167 148.875 233.229 cv
149.01 232.699 148.143 232.369 147.998 232.933 cv
cp
102.616 234.564 mo
102.939 233.948 103.848 233.827 104.194 233.229 cv
103.879 233.248 103.785 233.082 103.843 232.783 cv
103.293 233.013 102.866 232.879 102.442 232.636 cv
102.554 233.232 102.214 234.213 102.616 234.564 cv
cp
56.71 233.822 mo
58.9185 233.666 61.48 233.808 62.8438 232.933 cv
60.5723 232.731 56.292 232.314 56.71 233.822 cv
cp
154.656 233.527 mo
153.976 233.309 153.228 232.367 152.556 232.636 cv
153.268 232.827 153.771 233.975 154.656 233.527 cv
cp
128.901 237.833 mo
129.899 237.955 130.454 236.499 131.179 235.902 cv
130.891 235.206 130.642 234.476 130.127 233.972 cv
129.638 235.042 129.595 236.492 129.075 237.536 cv
128.859 235.712 130.491 233.781 129.251 232.486 cv
129.061 234.163 128.385 236.033 128.901 237.833 cv
cp
151.504 232.486 mo
151.47 232.267 151.08 232.35 150.802 232.337 cv
150.429 232.885 151.694 233.009 151.504 232.486 cv
cp
150.452 232.486 mo
150.48 232.243 149.371 232.243 149.399 232.486 cv
149.669 232.512 150.603 233.035 150.452 232.486 cv
cp
99.8125 233.822 mo
99.9009 233.206 100.426 232.957 100.515 232.337 cv
100.282 232.337 100.047 232.337 99.8125 232.337 cv
100.054 232.946 99.3906 233.551 99.8125 233.822 cv
cp
161.141 235.902 mo
161.023 234.564 160.515 233.562 160.266 232.337 cv
159.933 232.371 159.878 232.172 159.563 232.189 cv
160.112 233.408 159.611 235.515 161.141 235.902 cv
cp
98.2368 233.972 mo
98.5698 234.035 98.6772 234.293 99.1128 234.27 cv
99.1729 233.671 99.7759 232.76 99.2886 232.189 cv
99.001 232.836 98.5435 233.341 98.2368 233.972 cv
cp
61.4414 232.486 mo
60.7227 232.302 59.2461 231.975 58.4619 232.337 cv
59.207 232.599 60.4351 232.449 61.4414 232.486 cv
cp
98.061 233.675 mo
98.1807 232.983 98.7441 232.67 98.938 232.043 cv
98.6318 232.053 98.3916 232.009 98.2368 231.894 cv
98.3662 232.553 97.6421 233.261 98.061 233.675 cv
cp
142.041 232.486 mo
143.09 233.17 144.883 233.229 145.546 232.189 cv
144.028 232.085 142.771 231.396 142.041 232.486 cv
cp
97.0107 232.636 mo
97.3154 232.625 97.5547 232.668 97.7109 232.783 cv
97.6255 232.314 98.0273 232.259 97.8867 231.744 cv
97.1563 231.671 97.0459 232.122 97.0107 232.636 cv
cp
65.2954 235.456 mo
65.7642 235.456 66.229 235.456 66.6973 235.456 cv
67.5825 234.346 69.0708 233.645 70.377 232.933 cv
71.0439 232.568 72.3174 231.915 72.1284 231.744 cv
69.2817 232.499 67.1841 233.89 65.2954 235.456 cv
cp
123.819 238.725 mo
123.658 239.95 124.013 240.736 124.52 241.396 cv
122.976 242.369 122.609 240.146 122.415 239.021 cv
121.348 239.676 118.55 240.539 117.86 239.467 cv
118.965 238.373 121.066 237.334 121.366 236.05 cv
120.517 237.067 119.232 238.5 117.687 238.426 cv
117.71 237.456 119.198 236.939 119.086 236.348 cv
116.977 237.131 117.244 239.934 114.883 240.506 cv
114.403 241.733 113.456 242.563 113.481 244.22 cv
114.862 244.726 116.912 246.205 118.562 245.109 cv
117.521 244.802 115.861 245.022 115.583 244.068 cv
116.317 243.076 117.981 244.476 119.264 243.921 cv
119.923 243.491 119.86 242.447 121.014 242.437 cv
121.781 243.164 120.615 243.82 120.313 244.515 cv
122.607 244.626 124.233 243.383 124.696 242.437 cv
123.654 242.843 122.415 243.868 121.189 243.623 cv
122.825 242.285 125.025 241.43 126.974 240.356 cv
125.951 240.051 125.154 240.437 124.87 239.467 cv
124.732 238.855 125.708 239.188 125.571 238.575 cv
125.384 235.98 126.013 233.592 125.396 231.447 cv
124.324 231.975 124.158 233.27 122.768 233.527 cv
122.697 234.261 123.907 233.018 123.993 233.822 cv
123.956 234.197 123.106 234.643 123.468 234.863 cv
123.977 235.042 124.371 234.538 125.396 234.417 cv
125.142 235.934 123.774 236.51 122.942 237.536 cv
123.321 237.859 123.535 238.321 123.819 238.725 cv
cp
95.4331 234.12 mo
95.0591 234.716 96.2163 233.362 96.1353 232.783 cv
96.543 232.519 97.0869 231.807 96.835 231.447 cv
95.4761 231.582 95.8086 233.152 95.4331 234.12 cv
cp
69.1509 235.309 mo
69.8477 234.69 70.8174 233.894 71.7783 233.229 cv
72.6348 232.64 74.4233 231.888 74.2314 231.447 cv
71.6997 232.519 68.9673 233.421 67.5732 235.456 cv
68.1509 235.449 68.4458 235.208 69.1509 235.309 cv
cp
59.8638 231.894 mo
62.0679 232.004 64.8569 232.874 66.8735 232.189 cv
64.4058 232.197 62 230.817 59.8638 231.894 cv
cp
89.6499 237.536 mo
91.7998 237.569 95.9023 235.909 98.938 236.198 cv
97.7129 236.942 95.6196 236.95 94.207 237.536 cv
96.3975 237.513 97.9844 236.975 99.9883 236.794 cv
99.8633 236.341 100.168 236.252 100.165 235.902 cv
98.8789 235.705 96.5977 236.352 96.1353 235.456 cv
96.1406 234.916 96.6484 234.803 97.3613 234.863 cv
97.1758 234.277 96.5518 234.062 96.1353 233.675 cv
95.6768 234.13 95.7432 235.026 94.9072 235.159 cv
94.8047 233.49 95.626 232.602 95.7832 231.151 cv
94.4814 231.682 93.7539 232.698 92.6299 233.378 cv
93.1807 233.605 94.0913 233.525 94.0313 234.27 cv
93.6362 234.787 92.0659 234.172 92.1035 234.564 cv
93.0854 234.575 93.5273 235.042 94.0313 235.456 cv
92.5186 235.412 91.749 235.996 90.7017 236.348 cv
92.2729 236.488 93.3716 235.443 94.7319 235.902 cv
93.2314 236.61 91.4038 237.04 89.6499 237.536 cv
cp
134.156 233.378 mo
135.51 233.916 136.173 235.035 137.662 235.456 cv
137.903 235.067 138.459 234.944 138.538 234.417 cv
137.044 233.779 135.531 233.133 134.332 232.189 cv
133.762 231.74 133.213 230.455 132.053 231.002 cv
132.419 231.236 132.113 232.041 132.405 232.337 cv
133.259 231.618 134.64 231.803 134.156 233.378 cv
cp
73.7065 231.151 mo
74.46 231.048 75.4795 231.169 75.8105 230.705 cv
74.9419 230.714 74.2305 230.851 73.7065 231.151 cv
cp
135.383 230.558 mo
135.078 230.545 134.839 230.59 134.683 230.705 cv
134.472 230.737 134.575 230.87 134.683 231.002 cv
135.594 231.627 136.805 232.62 138.187 233.229 cv
139.267 233.707 141.622 234.71 142.393 233.972 cv
139.776 233.071 136.924 232.369 135.383 230.558 cv
cp
77.3848 230.705 mo
78.9653 230.583 77.2837 230.41 76.1602 230.705 cv
76.7412 231.041 76.9688 230.737 77.3848 230.705 cv
cp
181.291 231.447 mo
181.812 231.044 183.518 230.863 183.393 230.408 cv
182.85 230.691 180.529 231.506 181.291 231.447 cv
cp
138.538 230.408 mo
138.886 231.055 140.675 231.764 141.691 232.337 cv
141.77 231.911 142.445 231.987 142.568 231.597 cv
140.799 231.643 139.772 230.325 138.538 230.408 cv
cp
62.6675 231.3 mo
65.1328 231.564 68.853 232.816 70.5527 231.151 cv
67.7129 230.478 65.2324 230.034 62.6675 231.3 cv
cp
106.472 231.744 mo
108.07 231.979 108.992 229.783 109.45 229.073 cv
108.56 230.05 107.361 230.766 106.472 231.744 cv
cp
159.739 229.368 mo
159.273 229.163 158.295 228.618 157.635 229.073 cv
158.539 228.906 159.101 229.803 159.739 229.368 cv
cp
67.5732 230.26 mo
70.4565 231.582 73.3574 230.438 76.5103 230.26 cv
78.3735 230.154 80.0962 230.581 81.7676 229.963 cv
78.1816 228.362 71.7271 229.362 67.5732 230.26 cv
cp
105.596 231.744 mo
106.344 231.586 106.881 230.805 107.524 230.26 cv
108.091 229.778 109.337 229.197 108.926 228.774 cv
107.918 229.853 106.603 230.668 105.596 231.744 cv
cp
104.545 231.447 mo
106.126 230.906 106.904 229.684 108.049 228.774 cv
106.396 228.703 105.633 230.56 104.545 231.447 cv
cp
103.843 231.151 mo
104.603 231.035 106.672 229.211 106.297 228.625 cv
105.74 229.506 103.531 230.519 103.843 231.151 cv
cp
103.843 230.26 mo
104.419 229.924 105.739 228.74 105.596 228.774 cv
105.021 229.11 103.702 230.293 103.843 230.26 cv
cp
101.741 230.705 mo
103.386 230.961 103.991 229.318 105.07 228.625 cv
103.028 228.032 102.414 229.67 101.741 230.705 cv
cp
95.959 229.368 mo
97.6982 229.729 99.3457 230.162 101.217 230.408 cv
101.859 229.817 102.469 229.195 102.968 228.478 cv
100.396 228.575 97.8057 228.659 95.959 229.368 cv
cp
172.703 233.972 mo
172.945 233.304 174.253 232.954 175.159 232.486 cv
175.9 232.102 177.503 231.254 177.085 231.3 cv
175.052 232.052 173.645 233.334 171.128 233.675 cv
173.48 231.759 176.851 230.703 179.538 229.073 cv
175.442 229.366 172.187 232.44 169.2 233.675 cv
171.566 231.572 174.881 230.273 177.962 228.774 cv
177.049 228.707 176.136 228.638 175.334 228.478 cv
172.622 230.139 169.865 231.764 166.922 233.229 cv
169.111 231.323 172.229 230.204 174.632 228.478 cv
171.98 228.128 170.396 229.089 168.5 230.112 cv
167.538 230.629 165.114 231.888 165.171 232.486 cv
165.205 232.854 167.058 233.885 167.448 233.972 cv
169.331 234.396 172.087 233.731 173.582 234.417 cv
174.792 233.81 176.894 233.167 177.437 232.486 cv
175.948 232.959 174.401 234.17 172.703 233.972 cv
cp
109.625 228.774 mo
109.706 228.304 110.385 228.481 110.502 228.774 cv
110.553 228.473 110.977 228.483 111.027 228.18 cv
110.502 228.18 109.976 228.18 109.45 228.18 cv
109.481 228.403 109.39 228.73 109.625 228.774 cv
cp
162.017 236.198 mo
162.179 235.167 161.171 234.346 161.314 233.822 cv
162.023 234.412 162.389 235.291 162.366 236.495 cv
164.415 237.268 167.894 237.511 169.2 238.426 cv
169.606 238.474 169.874 238.404 170.075 238.278 cv
169.623 236.385 167.491 235.914 166.047 234.863 cv
165.563 233.486 163.755 233.059 162.366 232.043 cv
160.266 230.501 157.995 228.828 154.481 228.774 cv
154.069 228.92 153.622 229.034 153.08 229.073 cv
153.662 228.479 152.854 228.414 152.906 227.438 cv
151.079 227.987 149.361 229.984 147.299 229.368 cv
146.488 229.968 145.435 230.362 144.669 231.002 cv
145.745 231.13 146.772 231.299 147.474 231.744 cv
150.014 230.733 151.18 231.108 154.481 231.002 cv
154.381 232.228 155.891 232.085 156.06 233.082 cv
156.506 233.195 156.865 232.499 157.111 232.933 cv
157.092 233.314 156.426 233.144 156.409 233.527 cv
157.434 234.243 158.599 234.84 159.913 235.309 cv
159.679 234.17 159.256 233.195 159.213 231.894 cv
156.104 230.519 151.504 230.406 146.947 230.26 cv
153.82 229.432 161.328 230.512 163.243 234.863 cv
162.23 234.334 161.801 233.314 160.789 232.783 cv
161.158 233.955 161.109 235.482 162.017 236.198 cv
cp
153.605 227.438 mo
153.848 227.432 153.991 227.508 154.132 227.588 cv
153.887 227.16 154.609 226.833 154.132 226.696 cv
153.975 226.957 153.42 226.885 153.605 227.438 cv
cp
147.648 227.735 mo
148.339 227.279 149.389 227.132 149.752 226.399 cv
148.932 226.646 147.579 227.228 147.648 227.735 cv
cp
163.944 225.954 mo
163.375 226.125 162.866 225.501 162.543 225.954 cv
162.891 226.32 163.712 226.645 163.944 225.954 cv
cp
157.635 227.883 mo
157.943 227.798 158.665 228.064 158.688 227.735 cv
157.834 227.519 158.443 226.063 157.984 225.508 cv
157.686 226.145 157.558 226.926 157.635 227.883 cv
cp
165.521 225.063 mo
164.844 225.091 164.229 225.067 163.769 224.915 cv
163.814 225.727 165.241 225.577 165.521 225.063 cv
cp
156.409 227.588 mo
156.56 227.412 156.889 225.325 156.583 224.766 cv
156.475 225.661 156.336 226.535 156.409 227.588 cv
cp
79.1367 226.251 mo
79.0376 225.299 78.9937 224.293 77.9121 224.173 cv
78.1274 225.028 78.5361 225.723 79.1367 226.251 cv
cp
159.037 228.774 mo
161.681 229.407 162.906 231.236 164.994 232.337 cv
166.601 230.531 169.137 229.512 171.478 228.329 cv
168.119 228.306 164.875 228.379 162.193 228.924 cv
162.025 228.321 161.195 228.284 160.965 227.735 cv
160.863 227.154 161.685 227.355 161.841 226.993 cv
160.056 227.037 160.805 224.423 160.615 223.577 cv
159.228 224.546 159.512 227.389 160.615 227.883 cv
158.494 227.588 159.619 224.935 159.563 223.876 cv
158.478 224.342 158.484 225.732 158.512 227.143 cv
158.548 227.531 160.08 227.986 159.213 228.18 cv
159.213 228.098 159.07 228.013 159.037 228.18 cv
159.473 228.204 159.089 228.684 159.037 228.774 cv
cp
136.787 224.766 mo
136.664 224.16 137.578 223.665 137.137 223.281 cv
136.889 223.574 136.357 224.395 136.787 224.766 cv
cp
162.716 226.846 mo
162.928 226.178 161.678 225.579 161.314 224.915 cv
161.99 225.282 162.124 223.164 161.667 223.132 cv
160.447 223.869 160.657 227.59 162.716 226.846 cv
cp
162.193 225.063 mo
162.457 225.243 163.352 225.65 163.593 225.36 cv
162.426 224.887 163.578 223.361 162.716 222.686 cv
162.19 223.18 162.15 224.086 162.193 225.063 cv
cp
138.712 223.281 mo
138.695 222.859 139.406 222.299 139.063 222.093 cv
138.849 222.316 138.368 223.075 138.712 223.281 cv
cp
163.419 224.32 mo
163.864 224.542 165.13 224.842 165.696 224.469 cv
165.381 224.141 164.722 224.106 164.293 223.876 cv
164.963 223.694 164.998 222.199 164.645 221.646 cv
163.566 222.093 163.115 223.093 163.419 224.32 cv
cp
189.701 222.242 mo
188.641 222.244 187.554 221.49 187.073 221.498 cv
187.611 221.937 188.865 222.548 189.701 222.242 cv
cp
191.803 221.201 mo
190.755 221.681 189.148 220.83 188.649 221.646 cv
188.446 221.429 188.446 221.272 188.649 221.054 cv
187.667 221.334 187.23 220.384 186.897 220.608 cv
187.422 221.679 190.914 222.715 191.803 221.201 cv
cp
134.856 222.539 mo
134.78 221.578 135.755 220.727 135.383 220.013 cv
135.067 220.639 134.478 221.817 134.856 222.539 cv
cp
188.123 220.608 mo
187.685 220.485 187.568 220.088 187.247 219.865 cv
187.145 220.357 187.834 220.94 188.123 220.608 cv
cp
53.3809 221.945 mo
55.1577 223.434 59.6616 221.493 57.7617 219.865 cv
58.2334 222.149 55.1279 222.015 53.3809 221.945 cv
cp
164.47 220.755 mo
165.287 220.657 165.726 220.237 166.047 219.717 cv
165.338 219.908 164.988 220.403 164.47 220.755 cv
cp
193.028 220.459 mo
193.175 220.18 193.677 219.688 193.028 219.569 cv
192.894 219.671 192.641 220.396 193.028 220.459 cv
cp
55.4844 220.904 mo
55.689 220.577 56.6309 220.105 56.0103 219.569 cv
55.7539 219.854 55.248 220.695 55.4844 220.904 cv
cp
135.033 223.43 mo
136.012 222.675 136.176 220.44 136.26 219.42 cv
135.824 220.637 135.051 222.354 135.033 223.43 cv
cp
171.304 219.865 mo
172.77 219.97 173.866 219.761 174.281 218.974 cv
173.281 218.913 172.155 219.387 171.304 218.974 cv
171.304 219.271 171.304 219.569 171.304 219.865 cv
cp
168.674 219.271 mo
168.475 220.058 168.595 220.373 168.674 221.201 cv
170.402 221.279 171.856 221.127 172.529 220.312 cv
171.598 219.863 169.222 220.639 168.85 219.717 cv
169.553 219.717 170.252 219.717 170.952 219.717 cv
170.978 219.349 170.861 219.1 170.603 218.974 cv
170.156 219.485 169.389 219.75 168.674 219.271 cv
cp
136.26 222.686 mo
136.71 221.48 137.433 219.722 137.486 218.678 cv
136.517 219.439 136.125 221.481 136.26 222.686 cv
cp
77.3848 220.904 mo
77.7202 221.313 78.1289 221.659 78.6138 221.945 cv
78.2686 220.75 77.8574 219.613 77.3848 218.528 cv
77.2773 219.436 77.8296 220.158 77.3848 220.904 cv
cp
188.123 219.865 mo
188.015 219.414 188.348 218.587 187.947 218.379 cv
187.223 218.683 187.753 219.601 188.123 219.865 cv
cp
127.674 225.063 mo
126.951 222.803 126.461 220.349 125.571 218.232 cv
124.775 220.853 126.566 223.145 127.674 225.063 cv
cp
183.043 220.608 mo
184.75 220.751 186.023 219.001 185.321 218.083 cv
185.204 219.47 183.938 219.882 183.043 220.608 cv
cp
53.0308 220.904 mo
54.3975 221.107 54.3955 218.678 55.3081 219.865 cv
55.5117 219.383 54.7739 218.952 55.3081 218.678 cv
55.6699 218.717 55.3506 219.335 55.8345 219.271 cv
56.2949 218.689 55.6182 218.451 55.6597 218.083 cv
54.7729 217.983 54.3335 218.423 53.9063 217.934 cv
52.9736 218.531 52.458 219.856 53.0308 220.904 cv
cp
140.99 219.717 mo
141.341 219.377 141.977 217.842 141.691 217.934 cv
141.556 218.518 140.748 219.308 140.99 219.717 cv
cp
188.649 220.312 mo
189.299 220.206 189.401 220.564 190.051 220.459 cv
189.896 219.981 190.629 220.256 190.577 219.865 cv
189.92 219.75 190.673 219.194 190.75 218.824 cv
191.249 218.802 190.605 219.743 191.103 219.717 cv
191.415 219.436 191.229 218.736 191.277 218.232 cv
190.488 217.691 189.374 218.109 188.999 217.638 cv
188.882 217.638 188.766 217.638 188.649 217.638 cv
188.384 218.306 188.384 219.643 188.649 220.312 cv
cp
129.774 230.112 mo
130.121 229.998 129.302 229.638 129.602 229.073 cv
133.91 228.595 140.33 229.339 143.794 227.735 cv
144.329 227.629 144.309 227.991 144.846 227.883 cv
146.657 226.054 148.483 224.234 149.226 221.498 cv
147.949 221.047 148.891 218.713 148.35 217.638 cv
146.578 217.919 145.287 218.606 143.97 219.271 cv
143.242 221.527 142.658 223.902 141.866 226.102 cv
142.165 223.682 142.808 221.553 143.618 219.569 cv
142.556 219.756 142.125 220.48 141.166 220.755 cv
140.41 222.214 140.888 224.123 139.94 224.766 cv
139.563 223.774 140.792 222.142 140.464 221.201 cv
139.089 221.917 139.37 224.037 137.837 224.616 cv
137.979 223.947 138.136 223.286 138.362 222.686 cv
137.122 223.269 137.487 225.212 136.26 225.807 cv
135.771 225.87 136.396 224.995 135.908 225.063 cv
135.613 225.95 135.729 227.187 134.856 227.588 cv
134.638 226.457 135.411 225.388 135.033 224.616 cv
134.306 224.941 134.332 225.904 133.807 226.399 cv
133.319 226.466 133.944 225.59 133.457 225.657 cv
132.485 226.723 131.168 227.455 129.602 228.329 cv
129.559 228.115 129.313 228.08 129.251 227.883 cv
129.745 226.293 132.146 226.045 132.931 224.616 cv
133.387 223.783 132.851 222.755 133.807 221.945 cv
133.936 222.899 133.066 223.787 133.457 224.469 cv
133.796 223.271 134.79 221.84 134.506 220.608 cv
133.378 221.715 130.659 223.043 129.428 224.469 cv
128.859 225.125 128.797 226.553 127.674 225.954 cv
127.573 226.213 127.884 226.826 127.5 226.846 cv
126.34 225.204 126.481 222.459 125.046 221.054 cv
124.737 223.839 125.808 225.457 126.624 227.291 cv
127.264 227.208 127.562 227.11 127.85 227.588 cv
127.957 228.222 127.28 228.193 127.324 228.774 cv
127.782 228.731 128.077 228.829 128.025 229.221 cv
128.014 232.332 127.434 236.2 128.199 239.021 cv
126.607 237.035 128.01 232.297 127.5 229.813 cv
125.674 230.512 126.095 231.788 126.098 233.675 cv
126.1 235.358 125.73 237.23 125.922 239.021 cv
126.938 238.951 127.5 239.268 128.375 239.317 cv
128.319 238.422 128.585 237.259 128.025 236.794 cv
128.3 236.833 128.311 237.016 128.375 236.645 cv
128.74 234.575 129.01 231.174 128.725 229.666 cv
129.239 229.247 129.479 229.898 129.774 230.112 cv
cp
28.6763 218.379 mo
30.6431 218.774 32.4277 218.734 33.4067 217.638 cv
31.6011 217.693 29.8535 217.796 28.6763 218.379 cv
cp
137.486 221.945 mo
138.481 220.856 139.361 218.882 139.415 217.49 cv
138.014 218.235 137.55 220.561 137.486 221.945 cv
cp
33.7578 218.824 mo
34.5029 218.837 34.9824 219.073 35.8594 218.974 cv
36.5034 218.314 38.7803 217.514 38.4873 217.043 cv
36.6128 217.385 35 217.948 33.7578 218.824 cv
cp
178.312 217.49 mo
178.624 217.129 178.957 217.41 178.662 217.786 cv
179.423 217.837 179.58 217.377 179.714 216.895 cv
179.151 216.922 177.985 217.205 178.312 217.49 cv
cp
173.056 216.895 mo
172.713 217.578 171.25 217.995 171.478 218.678 cv
173.766 218.734 175.652 218.453 176.385 217.191 cv
175.189 217.166 173.773 217.326 173.056 216.895 cv
cp
186.722 218.528 mo
187.242 217.967 187.054 217.077 186.371 216.748 cv
186.737 217.13 186.311 218.186 186.722 218.528 cv
cp
183.393 219.123 mo
186.294 217.808 182.009 215.658 180.413 217.341 cv
180.294 218.629 180.535 219.615 181.815 219.717 cv
182.651 219.336 182.671 218.264 183.743 218.083 cv
183.7 218.403 183.1 219.006 183.393 219.123 cv
cp
139.59 220.608 mo
140.91 219.55 141.207 217.623 142.218 216.302 cv
140.004 216.507 139.73 219.143 139.59 220.608 cv
cp
137.662 217.043 mo
137.842 216.791 138.866 216.492 138.362 216.152 cv
138.146 216.375 137.121 216.672 137.662 217.043 cv
cp
38.1372 218.824 mo
43.3862 218.62 47.8208 217.727 51.4536 216.152 cv
46.0063 216.189 40.8672 216.487 38.1372 218.824 cv
cp
79.1367 221.945 mo
78.8311 219.629 77.7759 217.951 77.21 215.855 cv
77.6104 218.09 78.2798 220.099 79.1367 221.945 cv
cp
33.7578 216.45 mo
35.231 216.363 36.9121 216.451 37.7871 215.855 cv
36.4663 215.834 34.2881 215.41 33.7578 216.45 cv
cp
184.094 216.302 mo
184.102 215.646 182.577 215.516 182.166 215.709 cv
182.947 215.789 183.25 216.273 184.094 216.302 cv
cp
86.8462 225.212 mo
87.3911 225.889 88.0562 226.824 88.7749 226.696 cv
89.4282 224.421 88.0415 222.725 87.5483 221.646 cv
87.4131 221.352 87.292 220.654 87.1978 220.312 cv
86.5352 217.897 86.0293 216.154 84.5703 214.669 cv
83.8232 218.837 85.0586 222.982 86.8462 225.212 cv
cp
183.218 214.669 mo
183.509 214.669 183.801 214.669 184.094 214.669 cv
184.039 214.908 184.33 215.07 184.443 214.817 cv
184.197 214.777 184.244 214.49 184.094 214.372 cv
183.658 214.349 183.367 214.448 183.218 214.669 cv
cp
65.6475 214.372 mo
65.1157 214.813 65.0322 215.632 64.9453 216.45 cv
65.6021 216.511 65.8667 216.58 66.5229 216.895 cv
67.1377 216.521 66.7354 215.761 66.6973 215.114 cv
66.9048 214.942 67.3169 214.947 67.749 214.964 cv
68.2529 215.557 68.1641 216.736 67.749 217.341 cv
68.7671 217.065 68.0674 215.333 68.2754 214.372 cv
67.3545 213.912 66.5645 214.832 65.6475 214.372 cv
cp
111.203 227.291 mo
112.939 227.529 114.093 226.108 115.233 225.36 cv
114.921 225.082 114.787 225.481 114.182 225.36 cv
112.075 221.7 110.397 217.678 108.224 214.073 cv
105.496 219.651 115.169 223.396 111.203 227.291 cv
cp
40.064 215.855 mo
41.4785 215.865 42.5356 215.574 43.9194 215.558 cv
44.3789 214.813 45.4604 214.589 46.3735 214.223 cv
44.5962 213.866 41.7803 215.173 40.064 215.855 cv
cp
26.9233 213.184 mo
23.8086 213.713 21.061 214.55 19.3892 216.302 cv
22.8555 217.791 28.042 218.244 31.3037 216.302 cv
29.9502 216.261 29.0229 215.858 27.8003 215.709 cv
26.5703 215.982 23.916 217.784 22.8931 216.302 cv
23.6064 215.717 25.1768 215.86 25.8721 215.261 cv
25.1724 214.914 23.7876 215.148 23.5942 214.372 cv
25.2275 215.012 26.9233 215.065 28.1504 214.669 cv
28.5371 214.687 28.2251 215.298 28.3252 215.558 cv
30.0254 215.638 31.9956 216.707 32.8809 215.41 cv
30.4282 214.619 27.1626 214.516 24.6455 213.778 cv
27.7251 213.691 30.2837 214.839 32.7061 214.817 cv
30.6348 214.394 28.6543 213.894 26.9233 213.184 cv
cp
47.5981 213.778 mo
48.0601 213.509 49.6006 212.964 50.0518 213.628 cv
49.605 214.733 47.4736 214.415 46.7236 215.261 cv
48.7534 215.299 50.3872 215.001 52.5054 215.114 cv
52.3389 214.512 51.4023 213.94 51.9785 213.184 cv
50.6631 213 49.415 213.059 47.248 213.034 cv
47.3452 213.299 47.3389 213.651 47.5981 213.778 cv
cp
204.243 212.887 mo
202.492 212.813 200.913 214.187 198.988 214.372 cv
200.376 214.986 203.058 215.264 202.667 216.895 cv
200.052 216.237 198.402 214.318 194.958 214.817 cv
195.766 215.875 198.619 215.953 198.637 217.191 cv
194.939 216.746 192.067 214.068 187.6 215.261 cv
193.24 218.574 203.438 218.29 209.676 215.558 cv
207.826 214.983 206.312 212.972 204.243 212.887 cv
cp
136.61 215.855 mo
137.802 215.132 138.847 214.287 140.816 214.223 cv
140.502 213.693 140.312 213.065 139.59 212.887 cv
138.695 213.862 136.958 214.914 136.61 215.855 cv
cp
36.0352 215.261 mo
39.8237 215.738 41.9229 213.531 45.1465 213.034 cv
44.0166 213.151 43.4214 212.813 42.3428 212.887 cv
42.2061 214.773 37.373 213.905 36.0352 215.261 cv
cp
84.0444 214.073 mo
83.5859 214.246 83.291 213.617 83.3423 214.223 cv
83.6543 216.78 83.3086 219.894 84.5703 221.646 cv
83.3076 218.869 85.0459 214.437 83.6943 212.292 cv
83.6631 213.012 83.8315 213.56 84.0444 214.073 cv
cp
81.0659 223.577 mo
80.5259 223.375 81.4771 223.989 81.4165 224.32 cv
80.3848 226.141 83.3086 227.555 83.1685 229.073 cv
82.2813 227.796 81.2363 226.65 80.7158 225.063 cv
80.0737 225.112 79.7417 224.897 79.3135 224.766 cv
79.6851 226.034 80.7959 226.677 81.0659 228.032 cv
80.3218 227.574 80.2129 226.577 79.4888 226.102 cv
79.4951 226.553 79.5913 227.078 78.9639 226.993 cv
78.208 225.752 77.6284 223.572 75.9829 223.577 cv
76.5107 224.565 77.0879 225.514 77.562 226.547 cv
76.0044 225.789 76.4175 223.359 74.582 222.835 cv
74.6128 223.95 75.9873 224.711 75.458 225.807 cv
74.6938 224.522 74.6396 222.64 73.0068 222.093 cv
73.0698 223.08 74.3604 223.813 73.8804 224.766 cv
73.3545 223.924 73.2153 222.755 72.3047 222.242 cv
71.4048 222.527 72.7178 223.848 72.3047 224.173 cv
71.5752 223.354 71.728 221.789 70.2026 221.646 cv
70.1572 222.382 70.9458 223.188 70.5527 223.725 cv
69.8765 222.715 69.9756 221.048 68.625 220.608 cv
68.5415 221.229 69.3931 222.112 68.625 222.39 cv
68.5513 221.114 67.8862 219.553 66.8735 219.569 cv
67.1006 219.926 67.6836 220.754 67.2231 221.201 cv
66.6865 220.318 66.6172 218.253 65.1211 218.678 cv
65.3745 219.208 66.0972 220.121 65.6475 220.755 cv
65.4048 219.922 64.9771 219.244 64.769 218.379 cv
64.1299 217.993 63.9839 218.678 63.5435 218.379 cv
62.9604 216.745 61.269 215.26 60.2139 214.52 cv
60.4487 214.921 61.02 215.81 60.7397 216.152 cv
59.6279 215.116 59.9229 212.886 58.4619 212.145 cv
57.9844 212.729 58.48 214.139 57.5859 214.372 cv
56.6387 213.639 55.1978 213.328 54.0806 212.738 cv
53.9663 213.233 52.9863 212.995 52.6807 213.331 cv
53.4238 214.533 54.6919 215.29 55.6597 216.302 cv
57.4575 216.305 57.8662 217.49 58.6382 218.232 cv
60.0059 219.546 62.1855 220.487 64.0693 221.498 cv
68.0366 223.629 72.021 225.588 76.335 227.143 cv
78.5327 227.935 81.0171 228.29 82.8174 229.666 cv
82.8091 229.856 82.5918 229.872 82.6426 230.112 cv
83.1758 230.104 83.7959 230.023 83.6943 230.558 cv
77.8804 230.43 73.6128 231.614 71.0781 234.27 cv
76.2256 233.844 79.7671 232.277 83.1685 230.705 cv
83.5459 230.831 83.7881 231.071 83.6943 231.597 cv
85.6875 231.985 87.9019 232.188 89.6499 232.783 cv
90.959 232.11 92.0908 231.288 93.1553 230.408 cv
91.937 230.202 90.8198 229.913 89.6499 229.666 cv
90.0503 229.46 90.2949 229.121 90.3516 228.625 cv
89.7681 228.575 89.5747 228.195 88.7749 228.329 cv
88.7021 229.087 89.6772 229.737 89.126 230.408 cv
88.6123 229.456 88.5083 227.369 86.8462 227.883 cv
87.356 228.59 87.9927 229.19 88.4253 229.963 cv
86.7153 229.38 86.9253 227.174 84.9204 226.846 cv
84.9658 228.291 86.1968 229.522 86.6729 230.112 cv
84.3965 229.417 85.147 226.158 82.9927 225.36 cv
83.062 227.43 84.6978 228.171 85.0942 229.963 cv
83.0371 228.44 83.1421 225.084 81.0659 223.577 cv
cp
83.5195 219.865 mo
82.7583 217.54 83.6313 213.831 82.2925 211.995 cv
82.0757 214.691 81.7603 218.387 83.5195 219.865 cv
cp
27.4482 213.184 mo
30.0146 213.359 31.8237 214.964 34.1079 214.817 cv
36.2261 214.681 37.897 212.854 40.415 213.034 cv
41.2402 213.108 40.8389 212.769 40.2412 212.887 cv
37.3086 212.94 33.5923 212.259 31.3037 212.738 cv
31.1133 212.276 31.3579 211.901 30.4282 211.847 cv
30.5747 213.259 28.2251 212.554 27.4482 213.184 cv
cp
76.8599 217.341 mo
76.5752 215.45 76.7808 211.683 75.6333 210.808 cv
76.144 212.899 76.1772 215.396 76.8599 217.341 cv
cp
169.376 218.232 mo
172.786 215.63 176.645 213.403 179.538 210.361 cv
177.551 210.622 176.295 213.54 173.756 213.331 cv
170.915 217.002 165.177 217.801 165.171 223.577 cv
166.538 224.015 168.369 223.638 168.85 222.835 cv
168.239 222.947 167.527 222.384 167.098 222.835 cv
167.237 222.85 167.628 223.326 167.271 223.281 cv
166.88 222.725 166.08 222.51 165.696 221.945 cv
166.102 221.897 166.37 221.969 166.572 222.093 cv
166.508 220.601 166.812 219.425 167.975 218.974 cv
167.414 219.887 166.655 220.629 166.922 222.242 cv
168.362 222.397 170.033 222.578 170.603 221.646 cv
169.831 221.643 168.863 221.559 169.025 221.945 cv
168.811 221.431 167.495 221.854 167.098 221.498 cv
167.121 221.073 167.829 221.228 168.324 221.201 cv
168 219.674 168.477 218.114 169.726 217.49 cv
169.819 217.846 168.957 218.535 169.376 218.232 cv
cp
153.43 210.511 mo
153.969 213.272 153.752 216.674 156.06 217.934 cv
156.954 217.326 155.996 216.666 155.708 216.004 cv
154.981 214.332 154.558 212.054 153.956 210.212 cv
153.946 210.122 153.929 210.037 153.781 210.065 cv
153.696 210.241 153.594 210.402 153.43 210.511 cv
cp
44.7964 209.767 mo
43.4873 210.491 41.8877 210.967 40.7661 211.847 cv
44.8882 211.87 48.9263 212.289 52.5054 211.995 cv
50.1973 211.031 47.5762 210.332 44.7964 209.767 cv
cp
38.312 211.847 mo
41.2568 212.015 41.8643 210.205 43.9194 209.619 cv
41.6943 210.06 39.5508 210.569 38.312 211.847 cv
cp
32.1797 211.4 mo
33.689 210.947 34.9326 210.269 35.8594 209.323 cv
34.1792 209.631 33.1924 210.528 32.1797 211.4 cv
cp
30.4282 210.808 mo
32.0815 211.117 33.2612 209.882 34.4575 209.323 cv
32.4497 209.255 31.6201 210.185 30.4282 210.808 cv
cp
39.5391 209.767 mo
36.71 209.399 35.873 210.721 34.4575 211.55 cv
38.1602 212.306 39.7256 209.979 42.3428 209.323 cv
40.8145 209.33 39.6064 209.068 37.9624 209.173 cv
37.9893 209.794 39.3716 209.268 39.5391 209.767 cv
cp
29.9019 210.511 mo
31.2017 209.906 31.8784 209.563 33.0557 209.025 cv
31.0664 208.792 30.1372 210.191 28.8516 210.065 cv
29.2432 209.507 30.291 209.504 30.7778 209.025 cv
29.3984 209.193 27.209 208.672 26.3984 209.323 cv
27.6284 209.666 28.5615 210.26 29.9019 210.511 cv
cp
197.236 209.173 mo
198.829 209.705 201.329 209.466 202.317 210.511 cv
203.022 210.268 204.006 210.259 204.419 209.767 cv
201.939 209.709 199.451 208.076 197.236 209.173 cv
cp
55.8345 210.511 mo
56.1543 209.867 56.0684 208.751 55.4844 208.432 cv
55.4644 209.239 55.5352 209.971 55.8345 210.511 cv
cp
76.6851 219.123 mo
75.6392 216.719 76.2974 212.294 75.2832 210.065 cv
75.1484 209.767 74.0732 208.72 73.8804 209.173 cv
74.4492 212.107 75.3276 215.571 75.9829 217.934 cv
74.0732 215.396 74.6572 210.743 72.8296 208.134 cv
73.0806 212.675 73.9976 216.648 76.6851 219.123 cv
cp
167.975 212.887 mo
168.83 211.236 170.367 209.372 170.426 207.54 cv
169.847 209.425 167.827 210.88 167.975 212.887 cv
cp
59.6875 211.697 mo
60.2476 211.571 60.2305 211.932 60.5659 211.995 cv
60.603 211.092 60.6235 209.705 61.7915 210.212 cv
61.6777 209.37 62.0225 208.138 61.6177 207.54 cv
61.3081 209.209 60.4067 210.376 59.6875 211.697 cv
cp
166.572 217.191 mo
166.743 217.881 165.526 217.395 165.696 218.083 cv
169.917 215.126 174.367 211.574 174.981 206.056 cv
171.574 209.257 168.986 213.149 166.572 217.191 cv
cp
31.6538 205.759 mo
30.5815 205.535 25.0693 206.209 23.9448 206.501 cv
23.938 206.502 22.7734 207.383 22.3677 207.244 cv
23.4546 207.807 24.4307 208.465 25.6963 208.877 cv
27.917 208.134 32.0986 209.054 34.1079 208.134 cv
32.7529 207.681 33.2993 206.102 31.6538 205.759 cv
cp
156.409 213.628 mo
155.872 211.907 155.624 209.937 155.008 208.283 cv
155.064 210.715 156.011 213.665 157.111 215.709 cv
157.771 212.557 158.488 207.878 156.409 205.61 cv
155.359 207.871 158.062 211.315 156.409 213.628 cv
cp
78.7871 216.748 mo
79.2412 219.743 81.3818 222.041 82.9927 224.023 cv
83.9326 223.778 84.4829 224.633 84.9204 224.32 cv
83.0767 221.429 80.8657 218.847 80.0137 215.114 cv
80.8125 215.773 81.188 216.793 81.9429 217.49 cv
81.6284 213.313 82.124 209.435 81.7676 205.61 cv
80.2593 208.8 78.1572 212.589 78.7871 216.748 cv
cp
32.8809 205.908 mo
33.5796 207.02 34.5796 209.046 36.7354 207.986 cv
34.9326 207.843 34.3003 205.421 32.8809 205.908 cv
cp
34.2837 205.61 mo
35.3818 207.055 37.3662 208.539 40.2412 207.986 cv
38.6997 207.559 37.9473 206.465 37.0864 205.461 cv
36.0083 205.39 35.4111 205.727 34.2837 205.61 cv
cp
65.9971 205.461 mo
64.8901 207.396 63.9189 209.442 62.4917 211.104 cv
62.1353 211.022 62.1479 210.658 61.7915 210.957 cv
61.9941 212.021 61.4668 213.25 61.7915 213.926 cv
61.916 213.094 62.0298 211.786 63.1938 212.292 cv
64.043 210.136 65.7588 207.147 65.9971 205.461 cv
cp
194.08 208.134 mo
198.221 207.732 200.135 205.444 202.841 203.829 cv
198.569 204.117 197.111 206.793 194.08 208.134 cv
cp
171.653 208.728 mo
172.396 206.832 175.471 206.124 175.159 203.829 cv
174.169 205.515 172.107 207.085 171.653 208.728 cv
cp
206.172 203.68 mo
204.286 204.658 202.512 205.727 200.74 206.798 cv
203.857 206.608 207.443 205.27 209.851 205.461 cv
207.464 206.31 204.457 206.632 201.615 207.094 cv
201.724 207.669 201.762 207.706 201.439 208.134 cv
200.828 208.211 200.117 208.2 199.688 208.432 cv
201.976 208.662 203.801 209.694 205.821 209.471 cv
208.462 209.179 212.027 206.422 214.057 205.313 cv
214.99 204.802 216.098 204.606 216.859 203.978 cv
213.746 203.497 209.786 203.735 206.172 203.68 cv
cp
199.688 206.798 mo
201.457 205.771 203.385 204.882 204.945 203.68 cv
202.664 204.172 200.734 205.752 199.688 206.798 cv
cp
193.73 204.125 mo
194.256 203.531 194.965 203.091 195.308 202.345 cv
194.494 202.596 193.536 203.511 193.73 204.125 cv
cp
177.085 205.313 mo
176.238 207.264 176.475 209.567 175.159 211.4 cv
176.616 210.947 176.674 209.415 177.437 208.134 cv
178.675 206.051 181.331 204.444 181.115 201.749 cv
180.206 203.183 177.828 203.599 177.085 205.313 cv
cp
63.1938 209.025 mo
63.9673 207.207 64.4614 205.149 65.8213 203.829 cv
66.1787 203.873 66.2881 204.125 66.5229 204.274 cv
66.6382 203.378 67.3232 202.185 66.8735 201.303 cv
65.8462 203.741 62.5884 205.855 63.1938 209.025 cv
cp
60.3896 209.471 mo
59.8794 209.829 59.9492 210.682 58.9878 210.658 cv
58.7656 209.925 59.4282 209.943 59.8638 209.767 cv
60.5522 208.024 62.2954 206.385 61.6177 203.978 cv
61.1821 205.835 60.2314 207.258 59.1641 208.58 cv
59.0815 209.104 59.4497 210.012 58.6382 209.916 cv
57.1729 208.914 58.0034 207.156 57.5859 205.759 cv
56.9639 203.679 54.5518 201.989 53.9063 200.116 cv
54.1362 204.228 56.292 206.708 57.5859 209.916 cv
56.4858 210.704 57.5376 212.713 57.7617 213.778 cv
57.8413 212.903 57.876 211.993 58.6382 211.697 cv
58.8091 211.899 59.106 211.995 59.3398 212.145 cv
58.9512 211.328 60.7852 209.785 60.3896 209.471 cv
cp
172.354 206.798 mo
173.541 204.782 176.096 203.139 175.334 199.968 cv
174.435 202.228 171.952 203.933 172.354 206.798 cv
cp
177.259 204.125 mo
178.565 203.052 181.793 201.532 181.991 199.522 cv
180.614 201.226 178.002 201.884 177.259 204.125 cv
cp
183.918 200.562 mo
183.789 199.9 184.515 199.193 184.094 198.779 cv
183.616 199.244 183.43 199.944 183.918 200.562 cv
cp
63.1938 205.165 mo
64.374 203.096 65.2847 200.8 67.3989 199.522 cv
67.2549 199.1 67.0039 198.767 66.5229 198.631 cv
65.5 200.784 62.9893 202.468 63.1938 205.165 cv
cp
59.1641 208.134 mo
61.21 205.657 62.6108 201.309 61.2656 197.294 cv
61.1484 199.695 58.9849 202.07 58.6382 204.422 cv
58.4736 205.535 59.2861 206.734 58.9878 207.54 cv
58.9878 207.458 58.8467 207.372 58.813 207.54 cv
59.2896 207.434 58.6865 208.24 59.1641 208.134 cv
cp
57.4111 204.422 mo
56.752 201.615 54.2407 200.377 53.9063 197.294 cv
53.897 197.205 53.8804 197.119 53.7305 197.146 cv
53.644 200.685 56.1167 202.055 57.4111 204.422 cv
cp
177.962 202.046 mo
179.412 200.896 183.424 199.06 182.691 196.552 cv
181.02 198.302 178.938 199.706 177.962 202.046 cv
cp
63.1938 201.749 mo
63.8174 199.557 66.4893 198.308 66.3472 195.958 cv
65.2847 197.783 63.2393 199.56 63.1938 201.749 cv
cp
200.913 195.216 mo
201.486 195.522 201.948 195.924 203.018 195.81 cv
203.096 195.381 203.637 195.346 203.544 194.771 cv
202.807 195.036 201.647 194.945 200.913 195.216 cv
cp
53.7305 196.552 mo
55.1177 197.821 55.2935 201.355 57.4111 202.492 cv
57.3311 198.946 54.3247 197.882 53.7305 194.771 cv
53.7305 195.364 53.7305 195.958 53.7305 196.552 cv
cp
202.841 196.403 mo
202.351 196.557 201.356 196.017 201.266 196.849 cv
203.595 197.227 205.549 195.745 204.595 194.325 cv
204.414 195.385 203.911 196.069 202.841 196.403 cv
cp
183.918 198.631 mo
184.732 197.822 184.77 194.816 184.443 194.028 cv
184.484 195.903 183.955 197.594 183.918 198.631 cv
cp
32.8809 194.473 mo
33.8726 194.522 33.9316 193.78 34.4575 193.434 cv
33.7842 193.655 33.1685 193.925 32.8809 194.473 cv
cp
63.0176 198.928 mo
63.5308 196.841 66.6401 195.525 65.8213 193.286 cv
64.917 195.093 62.1733 196.133 63.0176 198.928 cv
cp
58.6382 200.116 mo
59.2197 198.431 59.8711 196.014 61.0918 195.364 cv
60.4487 197.811 58.0264 200.263 58.813 202.938 cv
59.5596 199.995 62.3345 196.037 60.5659 193.286 cv
59.5342 195.135 57.8999 197.262 58.6382 200.116 cv
cp
32.356 193.731 mo
33.104 193.771 33.2485 193.3 33.5815 192.989 cv
33.0737 193.153 32.397 193.172 32.356 193.731 cv
cp
43.3945 193.137 mo
43.3438 192.537 43.0933 192.105 43.0444 191.503 cv
42.6084 191.698 42.3164 191.067 42.1675 191.503 cv
42.583 192.042 42.7539 192.788 43.3945 193.137 cv
cp
34.1079 193.286 mo
34.292 192.945 34.8989 192.517 35.3335 192.84 cv
35.0195 193.513 34.4077 193.936 33.9316 194.473 cv
35.3462 194.235 35.96 193.32 36.21 192.098 cv
35.8818 191.931 35.8374 191.523 35.5093 191.356 cv
35.3398 192.155 33.6851 192.479 34.1079 193.286 cv
cp
169.902 207.689 mo
170.024 206.998 170.861 206.65 171.128 205.908 cv
172.218 202.864 170.062 197.811 172.18 195.364 cv
173.293 197.079 171.946 201.149 172.703 203.531 cv
173.208 201.589 175.896 199.981 175.509 197.74 cv
175.434 197.307 174.807 196.753 174.632 196.403 cv
173.628 194.4 172.803 191.79 170.075 191.207 cv
173.22 200.681 163.99 205.399 166.221 214.073 cv
166.684 212.651 167.069 211.077 167.622 209.619 cv
168.151 208.229 168.558 206.511 169.902 205.759 cv
170.786 206.21 169.599 207.34 169.902 207.689 cv
cp
62.6675 195.513 mo
63.8516 193.685 66.7285 191.803 64.5957 189.276 cv
63.376 190.911 61.209 192.928 62.6675 195.513 cv
cp
170.603 190.167 mo
170.371 189.719 170.164 189.25 169.553 189.127 cv
169.453 189.854 170.231 189.838 170.603 190.167 cv
cp
25.1704 189.127 mo
26.9043 189.31 27.1372 188.221 27.8003 187.495 cv
26.8135 187.946 25.8921 188.452 25.1704 189.127 cv
cp
213.004 187.346 mo
215.962 188.287 218.57 191.454 222.816 189.869 cv
219.407 189.207 217.101 186.499 213.004 187.346 cv
cp
216.685 190.167 mo
213.538 189.07 211.022 186.65 206.697 187.049 cv
209.035 188.829 212.317 190.601 216.685 190.167 cv
cp
18.8633 188.831 mo
22.9253 189.682 25.3535 188.712 26.7485 186.9 cv
23.644 187.142 21.0869 187.845 18.8633 188.831 cv
cp
30.9536 188.236 mo
31.4292 187.849 32.0605 187.592 32.0049 186.751 cv
31.4063 186.943 30.9497 188.03 30.9536 188.236 cv
cp
28.8516 188.831 mo
30.4092 188.767 30.7241 187.646 31.3037 186.751 cv
29.9961 187.029 29.5879 188.069 28.8516 188.831 cv
cp
29.0264 188.088 mo
29.3999 187.614 29.8506 187.203 30.2529 186.751 cv
29.4707 186.787 29.0317 187.889 29.0264 188.088 cv
cp
27.2739 188.98 mo
28.4043 188.747 29.0195 187.293 29.2012 186.751 cv
28.6563 187.578 27.7842 188.125 27.2739 188.98 cv
cp
205.295 186.604 mo
207.113 186.097 203.351 187.001 205.295 186.604 cv
205.295 186.604 li
cp
27.0981 187.495 mo
27.4111 187.065 28.2251 187.063 28.3252 186.454 cv
28.1504 186.454 27.9741 186.454 27.8003 186.454 cv
27.9941 187.074 26.5029 187.026 27.0981 187.495 cv
cp
14.4824 188.088 mo
17.606 189.11 20.1777 186.716 23.2437 186.306 cv
20.1748 186.774 17.0757 187.216 14.4824 188.088 cv
cp
217.385 186.751 mo
219.89 187.452 221.977 188.503 223.691 189.869 cv
224.421 189.695 225.289 189.638 225.62 189.127 cv
222.656 188.619 220.409 184.908 217.385 186.751 cv
cp
43.7446 187.049 mo
44.8574 186.831 45.1147 185.074 44.4448 184.228 cv
43.439 185.027 43.7866 186.275 43.7446 187.049 cv
cp
198.637 185.712 mo
198.733 185.063 199.887 183.853 199.514 183.782 cv
199.198 184.312 198.357 185.175 198.637 185.712 cv
cp
39.3643 186.751 mo
39.7349 186.175 39.2407 184.866 40.064 184.674 cv
40.2095 185.094 39.8184 185.057 39.8892 185.416 cv
40.1978 185.501 40.9185 185.235 40.9409 185.565 cv
40.9702 185.985 39.8604 185.44 39.8892 185.86 cv
40.4917 186.143 40.2813 187.113 40.9409 187.346 cv
41.4448 186.683 41.9805 186.048 42.6924 185.565 cv
42.1899 185.356 41.8032 185.968 41.6431 185.565 cv
42.8657 185.214 43.8418 184.657 44.0942 183.485 cv
41.3691 182.344 37.9688 184.417 39.3643 186.751 cv
cp
15.8843 181.852 mo
12.7393 183.789 6.86328 183.412 3.96973 185.565 cv
10.5596 186.718 15.1064 184.821 20.6152 183.931 cv
19.1406 183.151 17.7925 182.266 15.8843 181.852 cv
cp
191.979 183.485 mo
190.235 182.736 188.853 180.888 187.247 180.515 cv
188.931 181.316 190.266 183.205 191.979 183.485 cv
cp
207.047 177.842 mo
207.392 178.302 207.277 178.232 207.573 178.733 cv
206.939 179.485 205.868 180.652 206.172 181.703 cv
207.182 180.532 208.017 179.209 208.625 177.693 cv
208.024 177.582 208.401 178.298 207.75 178.139 cv
207.75 177.892 208.318 177.056 207.573 177.1 cv
207.52 177.45 206.963 177.377 207.047 177.842 cv
cp
188.3 179.477 mo
187.212 178.712 185.879 177.371 184.619 177.247 cv
185.748 177.974 187.056 179.339 188.3 179.477 cv
cp
196.534 181.109 mo
196.608 179.364 196.207 178.02 195.482 176.951 cv
195.431 178.68 195.94 179.931 196.534 181.109 cv
cp
14.6577 179.922 mo
14.0601 179.438 13.3525 179.047 12.9058 178.437 cv
15.2964 178.491 18.3027 178.812 20.6152 178.437 cv
19.4956 178.136 18.9302 176.793 17.4609 176.507 cv
15.1602 176.055 11.9844 176.971 9.57715 176.951 cv
11.1665 177.932 12.9395 179.547 14.6577 179.922 cv
cp
207.573 176.507 mo
208.083 176.352 208.151 174.72 207.573 174.577 cv
207.808 175.326 207.047 176.003 207.573 176.507 cv
cp
21.3169 175.468 mo
21.1494 174.37 18.8672 173.782 16.5864 173.981 cv
17.0557 175.416 18.937 175.653 21.3169 175.468 cv
cp
214.932 175.319 mo
213.454 176.789 211.794 178.102 210.729 179.922 cv
214.492 179.351 216.826 177.567 219.487 176.06 cv
216.439 176.497 214.211 178.42 211.778 178.881 cv
214.399 177.044 217.852 175.912 221.591 175.022 cv
221.784 174.502 223.132 173.512 222.466 173.24 cv
219.861 173.854 217.344 174.54 214.932 175.319 cv
cp
195.132 178.139 mo
195.677 175.939 194.557 174.055 193.028 172.794 cv
193.642 174.651 194.086 176.651 195.132 178.139 cv
cp
44.4448 173.387 mo
43.2808 175.322 41.9453 177.11 40.9409 179.179 cv
44.7446 177.404 47.3496 174.612 49.7021 171.605 cv
49.6812 171.426 49.6489 171.255 49.3521 171.309 cv
47.813 172.083 46.1772 172.777 44.4448 173.387 cv
cp
15.5347 172.943 mo
16.4146 172.851 17.606 173.082 17.9873 172.943 cv
17.7202 171.683 16.2344 171.458 14.8345 171.161 cv
14.7441 172.028 15.4438 172.226 15.5347 172.943 cv
cp
195.658 173.981 mo
195.499 172.927 195.229 171.18 194.958 170.714 cv
195.008 171.958 195.181 173.099 195.658 173.981 cv
cp
9.22705 176.358 mo
11.3057 176.823 14.0757 175.881 16.7612 176.06 cv
16.0278 174.8 13.8672 173.463 12.9058 171.902 cv
12.2944 171.88 12.1641 172.263 11.6792 172.348 cv
9.25879 171.083 6.66895 169.962 2.91895 169.825 cv
3.89941 171.177 7.32666 175.932 9.22705 176.358 cv
cp
38.312 175.169 mo
38.4673 175.574 39.1396 174.409 39.3643 174.873 cv
38.6997 175.499 38.0762 176.158 37.7871 177.1 cv
38.2671 178.162 38.9531 179.316 38.6631 180.218 cv
41.5776 178.129 41.2295 173.494 40.5908 169.379 cv
39.6992 171.197 38.6685 172.897 38.312 175.169 cv
cp
45.6714 171.755 mo
47.6909 171.238 48.8462 169.989 51.4536 169.972 cv
51.5508 169.51 51.5972 169.005 51.8047 168.637 cv
49.5649 169.51 47.0249 170.129 45.6714 171.755 cv
cp
12.9058 169.972 mo
13.1152 169.737 11.9834 168.585 11.6792 168.784 cv
12.2036 169.083 12.2061 169.823 12.9058 169.972 cv
cp
33.7578 171.309 mo
33.8779 169.374 32.3799 168.022 31.4785 167.449 cv
32.2788 168.702 32.6807 170.29 33.7578 171.309 cv
cp
182.517 175.912 mo
184.155 175.332 185.561 176.714 186.547 176.654 cv
184.664 174.86 183.344 172.392 181.641 170.566 cv
181.099 169.986 179.755 169.441 180.238 168.488 cv
182.296 168.83 183.352 171.288 184.795 172.646 cv
184.406 171.34 184.201 169.881 183.918 168.488 cv
182.21 167.659 180.768 166.605 178.138 166.557 cv
178.331 170.747 180.596 173.186 182.517 175.912 cv
cp
10.979 166.557 mo
11.208 167.701 12.2988 168.901 13.0806 169.082 cv
12.186 168.405 11.8096 167.29 10.979 166.557 cv
cp
211.078 173.24 mo
213.217 171.291 215.196 168.582 218.085 167.745 cv
217.47 167.342 217.73 166.587 217.561 166.111 cv
215.461 168.442 212.375 170.726 211.078 173.24 cv
cp
11.854 165.962 mo
12.4946 167.155 13.7935 168.576 14.8345 168.933 cv
13.7397 168.028 12.8882 166.919 11.854 165.962 cv
cp
10.8037 166.111 mo
10.2051 165.827 10.2031 165.036 9.57715 164.775 cv
9.30762 165.701 10.3525 166.29 10.8037 166.111 cv
cp
14.1328 170.121 mo
14.728 169.927 15.3555 170.452 15.5347 170.121 cv
12.7349 168.781 11.6069 165.234 9.40186 163.885 cv
11.0371 165.914 12.6128 167.994 14.1328 170.121 cv
cp
44.269 165.815 mo
43.5098 167.375 44.019 169.8 44.0942 172.052 cv
44.1914 171.39 45.001 171.334 44.7964 170.417 cv
47.7231 168.643 48.3042 164.878 51.6284 163.439 cv
51.7983 162.491 53.0591 161.683 52.6807 160.766 cv
50.8696 161.756 45.0854 164.144 44.269 165.815 cv
cp
191.979 170.714 mo
191.871 170.708 191.771 170.693 191.803 170.566 cv
191.089 167.581 189.053 164.848 188.123 162.103 cv
187.817 161.197 188.08 159.953 187.073 159.429 cv
186.567 163.357 187.193 168.244 186.196 171.755 cv
186.661 171.756 187.228 171.672 187.247 172.052 cv
189.003 176.207 192.039 179.276 194.606 182.743 cv
195.039 182.724 195.451 182.72 195.658 182.892 cv
195.84 183.581 195.909 184.361 196.71 184.524 cv
196.71 183.683 196.71 182.841 196.71 182 cv
194.442 180.695 194.364 174.842 191.277 174.724 cv
191.997 173.568 188.535 172.73 188.825 171.457 cv
190.437 172.565 191.742 173.935 193.205 175.169 cv
192.871 171.295 189.658 169.86 187.6 167.449 cv
189.553 168.02 190.542 170.199 191.979 170.714 cv
cp
210.729 170.714 mo
212.26 168.428 214.25 166.247 215.808 164.181 cv
216.354 163.458 216.744 162.471 217.734 162.103 cv
216.912 163.792 215.593 165.182 214.406 166.706 cv
213.264 168.171 211.507 169.625 210.729 171.161 cv
210.475 171.656 210.192 172.279 210.551 172.943 cv
212.604 170.029 215.331 167.687 217.91 165.22 cv
218.004 163.368 218.224 160.834 218.085 159.282 cv
214.74 162.237 210.366 165.114 210.729 170.714 cv
cp
47.248 161.359 mo
47.5308 160.728 48.3906 159.101 47.9502 158.836 cv
47.9312 159.762 46.9761 160.68 47.248 161.359 cv
cp
41.2905 166.409 mo
41.3223 166.827 42.123 166.594 41.9927 167.151 cv
40.7563 169.08 41.2676 173.234 41.8154 175.468 cv
43.8701 173.692 43.3252 168.924 43.5693 166.111 cv
43.3945 166.49 42.3091 166.543 42.1675 166.111 cv
42.543 165.194 43.6855 164.924 44.269 164.181 cv
45.1846 163.398 47.7148 162.647 47.248 161.657 cv
46.6768 161.22 46.6675 162.899 45.8467 162.251 cv
45.1431 160.903 47.7471 158.365 46.8984 156.905 cv
44.3916 159.533 42.6802 162.834 41.2905 166.409 cv
cp
207.923 157.352 mo
208.926 158.654 211.538 157.06 210.729 155.865 cv
210.688 155.75 210.581 155.693 210.376 155.718 cv
210.48 157.043 209.606 157.539 207.923 157.352 cv
cp
207.223 154.53 mo
207.505 155.053 206.831 155.836 207.75 156.014 cv
208.281 155.377 208.938 154.845 209.851 154.53 cv
209.453 153.856 209.683 154.182 210.025 153.639 cv
208.611 152.974 208.229 154.364 207.223 154.53 cv
cp
207.398 156.608 mo
204.927 155.159 207.717 153.154 209.501 153.045 cv
207.19 151.781 204.036 156.095 207.398 156.608 cv
cp
35.8594 151.559 mo
36.2007 151.256 37.1846 151.494 37.2612 150.966 cv
36.7354 150.966 36.21 150.966 35.6846 150.966 cv
35.7129 151.188 35.6216 151.514 35.8594 151.559 cv
cp
196.534 151.262 mo
196.767 151.262 197.001 151.262 197.236 151.262 cv
197.162 150.978 197.171 150.625 196.71 150.668 cv
196.654 150.87 196.458 150.953 196.534 151.262 cv
cp
34.4575 152.005 mo
34.3486 151.603 34.6802 150.827 34.2837 150.668 cv
33.9336 151.008 34.2129 151.715 34.4575 152.005 cv
cp
199.863 152.005 mo
200.675 151.993 201.34 150.633 200.74 150.372 cv
200.575 150.976 199.523 151.451 199.863 152.005 cv
cp
194.08 150.668 mo
194.464 150.748 195.215 151.028 195.308 150.521 cv
194.924 150.441 194.174 150.162 194.08 150.668 cv
cp
198.813 151.262 mo
199.161 151.265 199.034 151.668 199.514 151.559 cv
199.645 150.978 200.195 150.752 200.391 150.224 cv
199.482 149.826 199.15 150.735 198.813 151.262 cv
cp
190.927 150.224 mo
191.928 150.129 193.5 151.029 193.906 150.075 cv
192.84 150.005 191.805 149.738 190.927 150.224 cv
cp
198.286 150.668 mo
198.758 150.996 199.119 150.275 199.338 149.926 cv
199.113 149.918 199.096 149.735 198.813 149.778 cv
198.741 150.164 198.289 150.225 198.286 150.668 cv
cp
196.009 151.115 mo
196.121 150.609 197.143 150.103 196.884 149.778 cv
196.75 150.286 195.184 150.731 196.009 151.115 cv
cp
197.41 149.926 mo
197.669 150.003 197.852 150.146 198.112 150.224 cv
198.203 150.003 198.372 149.849 198.462 149.629 cv
198.203 149.552 198.02 149.41 197.763 149.333 cv
197.669 149.552 197.501 149.707 197.41 149.926 cv
cp
24.9951 153.341 mo
26.0303 153.936 27.7085 153.522 27.9741 152.599 cv
27.2109 152.503 25.9951 152.793 25.5215 152.451 cv
25.5391 152.07 26.1753 152.212 26.3984 152.005 cv
26.4268 151.535 25.9312 151.51 26.0464 150.966 cv
26.5439 151.118 27.0024 151.83 26.5723 152.302 cv
27.1226 152.271 27.8579 152.402 28.1504 152.153 cv
28.3115 151.274 27.8501 150.923 27.8003 150.224 cv
28.2461 150.206 28.7017 150.195 28.6763 149.778 cv
26.7705 148.582 23.6338 149.827 23.4185 151.857 cv
24.5693 151.941 24.6475 151.116 25.3467 150.817 cv
24.6982 151.204 24.6836 152.597 24.9951 153.341 cv
cp
196.358 149.926 mo
196.54 149.535 197.054 149.426 197.236 149.036 cv
196.502 148.87 196.174 149.81 196.358 149.926 cv
cp
195.832 149.778 mo
195.95 149.379 196.603 148.989 196.185 148.59 cv
195.477 148.674 194.973 149.593 195.832 149.778 cv
cp
194.257 148.738 mo
194.691 148.715 194.799 148.972 195.132 149.036 cv
195.225 148.815 195.392 148.661 195.482 148.44 cv
194.942 148.035 194.543 148.247 194.257 148.738 cv
cp
192.681 148.738 mo
193.088 148.738 193.497 148.738 193.906 148.738 cv
193.802 148.217 194.734 148.25 194.257 147.848 cv
193.485 147.937 192.884 148.168 192.681 148.738 cv
cp
207.573 150.075 mo
208.367 149.185 207.731 148.175 207.223 147.253 cv
206.991 147.938 207.323 149.314 207.573 150.075 cv
cp
191.103 147.996 mo
191.73 147.958 191.745 148.442 192.328 148.44 cv
192.553 148.038 193.227 148.014 193.381 147.551 cv
192.625 146.95 191.572 147.505 191.103 147.996 cv
cp
189.875 146.956 mo
189.743 147.514 190.545 147.28 190.577 147.699 cv
191.171 147.509 191.689 147.256 192.152 146.956 cv
191.597 146.227 190.69 146.725 189.875 146.956 cv
cp
208.449 148.293 mo
209.203 147.466 208.396 146.16 207.923 145.471 cv
208.122 146.393 208.091 147.509 208.449 148.293 cv
cp
33.4067 144.878 mo
33.2114 145.851 32.769 147.677 32.7061 149.036 cv
32.6924 149.314 32.5845 150.979 32.8809 150.521 cv
32.9346 148.291 33.9917 146.908 33.9316 144.58 cv
33.708 144.572 33.689 144.39 33.4067 144.432 cv
33.4067 144.58 33.4067 144.729 33.4067 144.878 cv
cp
209.325 146.808 mo
209.178 145.399 208.975 144.037 208.272 143.096 cv
208.313 144.597 208.558 145.923 209.325 146.808 cv
cp
211.078 151.559 mo
211.169 151.913 211.662 151.344 211.778 151.262 cv
215.266 148.834 219.302 146.061 221.415 142.799 cv
217.704 145.494 214.371 148.51 211.078 151.559 cv
cp
180.589 142.947 mo
181.001 142.899 181.246 142.713 181.815 142.799 cv
184.369 144.2 186.99 145.543 189.524 146.956 cv
189.8 146.596 190.27 146.4 190.927 146.363 cv
190.935 145.269 188.572 146.181 188.123 145.471 cv
188.565 145.463 190.632 145.537 189.701 145.324 cv
188.108 144.941 187.315 143.879 186.547 142.799 cv
184.431 143.031 181.85 141.654 179.714 141.907 cv
180.153 142.129 180.327 142.574 180.589 142.947 cv
cp
34.8086 141.61 mo
34.7905 142.071 34.8872 142.434 35.1582 142.651 cv
35.2979 142.174 35.6768 141.9 35.6846 141.313 cv
35.145 141.204 35.3481 141.722 34.8086 141.61 cv
cp
200.74 146.66 mo
199.799 144.29 197.986 141.865 195.832 141.017 cv
197.603 142.783 198.963 144.898 200.74 146.66 cv
cp
44.0942 141.61 mo
46.9722 141.228 50.2144 141.153 52.5054 140.274 cv
49.8643 138.145 46.0034 140.159 44.0942 141.61 cv
cp
211.778 144.432 mo
212.907 142.665 215.49 141.343 215.457 139.086 cv
214.575 141.061 212.041 142.429 211.778 144.432 cv
cp
50.7539 138.493 mo
52.396 138.881 54.0972 139.222 54.7827 140.423 cv
52.1387 141.548 48.5313 142.647 45.3218 142.799 cv
45.3232 142.604 45.6279 142.663 45.6714 142.502 cv
45.064 142.382 44.999 142.723 44.4448 142.651 cv
44.3252 144.727 40.9854 144.074 39.8892 145.324 cv
48.9155 147.073 54.2324 142.247 58.1123 138.196 cv
56.4092 137.709 53.3691 137.563 51.2788 137.898 cv
51.8926 138.195 50.7646 138.237 50.7539 138.493 cv
cp
27.6245 145.175 mo
26.4248 142.07 26.4155 138.127 23.0688 136.859 cv
21.8862 136.411 20.4287 136.492 18.8633 135.968 cv
20.8892 139.796 23.7202 142.938 27.6245 145.175 cv
cp
195.482 144.58 mo
195.533 144.873 195.246 144.875 195.132 145.025 cv
195.99 145.685 196.635 146.525 197.41 147.253 cv
198.03 147.675 198.809 147.05 198.813 147.996 cv
195.354 147.142 194.126 144.072 191.803 142.205 cv
189.971 140.731 187.795 139.796 185.671 138.493 cv
186.921 140.847 187.332 143.914 190.75 144.432 cv
193.404 147.084 197.832 148.232 201.966 149.629 cv
199.94 146 196.924 143.21 194.433 139.978 cv
194.882 144.15 198.107 145.971 200.74 148.293 cv
196.857 146.484 193.71 143.263 193.906 138.493 cv
191.696 137.84 189.814 136.12 187.947 135.671 cv
189.871 139.141 192.181 142.281 195.482 144.58 cv
cp
217.035 138.79 mo
216.763 138.778 216.912 139.221 217.035 138.938 cv
217.763 137.574 219.283 136.093 219.487 134.78 cv
218.655 136.104 216.9 136.646 217.035 138.79 cv
cp
209.851 145.769 mo
210.263 144.457 210.87 143.756 210.376 142.354 cv
210.604 141.804 211.103 141.485 211.778 141.313 cv
212.476 139.591 211.941 135.969 211.428 133.889 cv
210.403 137.448 207.369 141.918 209.851 145.769 cv
cp
185.321 137.898 mo
187.487 138.438 188.938 140.376 190.75 140.719 cv
188.433 138.379 187.936 134.495 183.918 133.591 cv
184.22 135.168 184.826 136.486 185.321 137.898 cv
cp
35.5093 146.51 mo
36.1123 145.166 38.1074 144.636 38.1372 143.245 cv
42.7056 140.236 47.1724 136.349 50.9287 133.147 cv
43.9702 135.961 37.5825 140.051 35.5093 146.51 cv
cp
212.828 139.978 mo
213.378 137.826 212.408 134.666 211.953 132.404 cv
212.169 134.994 212.495 137.489 212.828 139.978 cv
cp
201.966 133.147 mo
202.947 132.69 203.857 131.386 203.894 130.622 cv
203.37 131.517 201.892 132.223 201.966 133.147 cv
cp
32.1797 131.811 mo
32.2817 133.208 32.4326 131.295 32.356 130.771 cv
32.0659 130.52 31.9756 130.103 31.6538 129.88 cv
31.8359 130.518 31.9712 131.195 32.1797 131.811 cv
cp
200.214 129.435 mo
200.35 129.815 200.388 130.277 200.74 130.475 cv
200.703 129.501 201.733 128.646 201.439 127.95 cv
201.247 128.627 200.626 128.941 200.214 129.435 cv
cp
195.308 129.583 mo
195.024 128.583 193.55 127.808 192.854 127.652 cv
193.776 128.208 194.387 129.027 195.308 129.583 cv
cp
44.4448 129.138 mo
45.8716 129.432 47.1841 128.293 46.1987 127.504 cv
45.7539 128.167 44.708 128.321 44.4448 129.138 cv
cp
198.462 131.662 mo
197.548 131.1 197.167 130.085 196.009 129.731 cv
195.637 130.839 196.732 130.702 197.41 130.919 cv
197.593 131.853 198.42 132.242 198.813 132.999 cv
198.817 133.348 198.51 133.436 198.637 133.889 cv
200.901 137.959 203.211 141.992 203.368 147.848 cv
203.513 148.219 203.849 148.431 203.894 148.886 cv
203.123 149.901 204.091 150.914 204.243 152.005 cv
203.895 152.007 204.022 152.41 203.544 152.302 cv
202.704 151.824 202.893 150.476 201.266 150.668 cv
201.393 151.42 200.783 151.548 200.74 152.153 cv
201.892 152.102 202.097 153.107 203.018 152.451 cv
203.489 153.041 203.657 153.89 204.419 154.231 cv
204.61 156.919 205.089 161.676 205.295 165.519 cv
205.372 166.94 205.653 168.395 205.295 169.526 cv
204.85 170.938 203.723 169.689 203.894 169.082 cv
203.769 170.114 203.646 171.148 203.368 172.052 cv
203.938 172.013 204.212 172.229 204.243 172.646 cv
203.721 179.379 200.959 184.217 197.936 188.831 cv
197.663 189.045 197.253 189.143 196.884 189.276 cv
195.712 192.886 193.032 195.218 191.277 198.334 cv
191.513 198.432 191.604 198.651 191.629 198.928 cv
189.701 201.7 187.186 203.973 185.145 206.65 cv
185.22 206.933 185.646 206.918 185.495 207.391 cv
182.552 210.338 178.072 212.972 174.807 215.558 cv
174.425 215.86 173.712 216.333 173.932 216.748 cv
175.618 216.741 177.587 216.974 178.138 216.004 cv
177.245 215.87 175.673 216.311 175.334 215.709 cv
177.18 215.441 179.69 215.738 180.589 214.669 cv
179.893 214.563 178.649 214.926 178.487 214.372 cv
179.734 213.921 180.898 214.557 182.166 213.926 cv
182.452 213.784 182.322 213.381 182.517 213.184 cv
183.613 212.069 186.399 212.887 188.3 212.887 cv
193.012 212.887 197.413 211.498 201.439 210.808 cv
201.022 210.079 199.526 209.994 198.462 209.767 cv
196.121 209.273 194.182 208.722 192.328 209.767 cv
194.561 210.154 198.301 210.053 199.164 211.104 cv
196.237 211.077 193.729 209.781 191.103 209.916 cv
188.478 210.051 186.864 212.448 184.619 211.995 cv
186.189 209.911 189.549 209.342 192.681 208.58 cv
194.707 206.883 197.447 205.791 199.514 204.125 cv
198.251 203.993 196.494 204.7 195.658 203.978 cv
195.595 204.418 195.354 204.708 194.958 204.868 cv
191.273 205.904 188.632 207.821 186.371 210.065 cv
186.333 209.95 186.226 209.892 186.021 209.916 cv
186.763 207.129 189.456 205.998 192.152 204.868 cv
192.641 204.436 191.578 204.482 191.803 203.829 cv
192.442 202.687 194.257 201.75 194.257 200.562 cv
193.659 201.097 192.542 201.977 191.453 201.601 cv
191.446 200.392 193.948 200.064 194.606 198.928 cv
195.285 198.765 195.229 199.453 195.658 199.077 cv
195.889 198.678 196.128 198.288 196.358 197.888 cv
195.453 198 194.134 198.262 193.906 197.443 cv
194.455 196.425 197.527 197.543 197.41 195.958 cv
196.862 195.482 195.323 195.845 195.132 195.067 cv
195.963 194.154 199.5 194.935 199.164 195.958 cv
200.18 194.12 203.174 194.434 204.419 193.286 cv
204.411 193.737 204.578 194.041 204.945 194.177 cv
204.849 193.466 204.836 192.685 204.595 192.098 cv
203.319 192.188 202.393 191.983 201.266 191.949 cv
199.635 192.524 200.304 194.484 199.338 195.364 cv
199.338 194.721 199.338 194.078 199.338 193.434 cv
198.469 193.379 197.205 193.658 197.06 192.989 cv
197.347 192.392 198.31 192.365 199.338 192.395 cv
199.901 191.486 201.255 191.248 201.966 190.464 cv
201.153 190.064 199.188 190.641 198.988 189.722 cv
199.195 188.611 202.37 190.015 202.142 188.534 cv
201.3 188.604 200.691 188.476 200.563 187.939 cv
200.725 187.285 202.048 187.614 202.667 187.346 cv
202.574 186.771 202.979 186.621 202.841 186.009 cv
202.608 185.712 201.695 185.991 201.966 185.267 cv
202.212 184.832 202.945 184.81 203.718 184.823 cv
203.826 184.271 204.136 183.889 204.243 183.336 cv
203.635 183.603 202.972 183.429 202.841 182.892 cv
203.157 182.417 204.028 182.413 204.595 182.148 cv
204.823 181.501 205.124 180.915 205.119 180.069 cv
204.624 180.226 203.373 180.445 203.368 179.772 cv
203.597 179.225 204.435 179.192 205.119 179.03 cv
205.071 178.428 204.819 177.999 204.77 177.396 cv
205.998 176.844 206.533 174.904 205.645 173.833 cv
206.567 173.624 206.938 172.95 206.873 171.902 cv
206.169 171.855 205.071 172.143 205.295 171.309 cv
205.628 170.651 207.586 171.369 207.223 170.121 cv
206.849 169.793 205.733 170.095 205.821 169.379 cv
206.093 168.668 207.824 169.194 207.573 168.042 cv
206.911 168.009 205.993 168.193 205.995 167.596 cv
205.669 166.577 207.536 167.417 207.573 166.706 cv
207.219 166.411 206.223 166.662 206.348 165.962 cv
206.499 165.173 207.627 166.028 207.75 165.37 cv
207.921 164.431 205.87 165.376 206.348 164.181 cv
206.526 163.838 207.15 163.874 207.75 163.885 cv
207.75 163.39 207.75 162.895 207.75 162.398 cv
206.899 162.276 205.735 162.422 205.995 161.359 cv
206.471 160.887 207.78 161.917 207.75 160.915 cv
207.255 160.563 205.853 161.314 205.821 160.32 cv
205.896 159.542 207.653 160.19 207.75 159.429 cv
207.75 159.282 207.75 159.133 207.75 158.984 cv
207.616 158.6 206.453 159.093 206.521 158.538 cv
206.337 157.985 206.889 158.06 207.047 157.796 cv
204.267 156.653 205.796 152.476 208.449 152.153 cv
209.072 152.079 209.892 152.619 210.376 152.153 cv
207.374 151.784 210.034 150.289 210.729 149.481 cv
211.287 148.826 211.397 147.757 211.953 146.808 cv
213.093 144.859 215.091 142.883 214.756 141.462 cv
211.546 144.334 209.812 148.458 207.573 152.153 cv
207.223 152.153 206.873 152.153 206.521 152.153 cv
205.467 150.521 205.893 148.39 205.472 146.956 cv
204.567 143.905 204.386 140.99 203.191 138.196 cv
201.601 134.467 199.511 130.79 197.236 127.652 cv
196.475 128.461 194.76 127.206 194.08 127.504 cv
195.428 128.888 198.153 129.894 198.462 131.662 cv
cp
42.8677 127.504 mo
43.3135 127.72 43.207 128.404 43.7446 128.543 cv
44.4917 128.236 45.2183 127.911 45.4966 127.208 cv
44.5322 127.232 43.5928 127.277 42.8677 127.504 cv
cp
198.988 127.95 mo
198.988 127.703 198.988 127.455 198.988 127.208 cv
198.746 127.214 198.603 127.137 198.462 127.059 cv
198.539 127.438 198.706 127.741 198.988 127.95 cv
cp
30.4282 137.157 mo
31.4438 136.362 31.2417 134.389 31.1279 133.295 cv
30.8154 130.265 29.1514 127.184 27.9741 125.128 cv
27.936 125.012 27.8286 124.956 27.6245 124.979 cv
27.5967 129.854 28.4907 133.948 30.4282 137.157 cv
cp
37.2612 123.94 mo
37.7344 123.984 37.5767 124.565 37.9624 124.683 cv
38.0317 124.296 38.4849 124.235 38.4873 123.792 cv
38.0874 123.642 37.6025 123.879 37.2612 123.94 cv
cp
206.521 123.792 mo
206.562 123.54 206.323 123.424 206.348 123.792 cv
205.342 125.168 204.563 126.735 203.018 127.652 cv
202.958 128.594 202.182 129.713 202.317 130.325 cv
203.967 128.359 205.37 126.181 206.521 123.792 cv
cp
17.8115 130.475 mo
18.4238 132.911 22.9214 135.659 24.6455 137.305 cv
23.5283 134.194 18.8862 133.275 18.8633 129.731 cv
20.1699 131.397 21.1978 134.089 23.4185 134.483 cv
22.8218 132.84 20.1934 130.286 21.3169 128.692 cv
23.0151 130.519 23.7876 133.132 24.9951 135.375 cv
25.8135 135.622 26.876 135.663 27.0981 136.414 cv
26.5703 136.218 26.1455 135.934 25.3467 135.968 cv
25.9902 137.056 26.1201 138.579 27.4482 139.086 cv
27.2861 139.245 26.8022 139.133 26.9233 139.532 cv
28.0366 141.015 27.874 143.577 29.2012 144.878 cv
30.0718 138.583 27.1733 135.244 24.4707 131.068 cv
22.3794 127.838 20.5229 125.042 17.9873 123.495 cv
18.1431 126.027 17.2793 128.349 17.8115 130.475 cv
cp
26.7485 129.731 mo
26.0117 127.458 27.3989 124.208 25.8721 122.752 cv
26.0791 125.151 25.4888 128.226 26.7485 129.731 cv
cp
198.462 126.91 mo
198.631 126.261 199.097 125.864 198.988 124.979 cv
198.577 125.024 198.232 125.296 198.112 124.831 cv
198.536 124.296 199.213 123.194 198.637 122.307 cv
197.548 123.317 197.574 125.604 198.462 126.91 cv
cp
48.4751 122.752 mo
49.23 122.599 49.9067 122.381 50.4033 122.01 cv
49.293 121.861 48.8057 122.242 48.4751 122.752 cv
cp
205.645 127.208 mo
206.55 125.376 208.182 122.278 207.75 120.971 cv
207.764 121.017 207.736 121.073 207.75 121.119 cv
207.228 121.619 207.131 122.477 206.697 123.049 cv
207.012 123.031 207.107 123.197 207.047 123.495 cv
205.586 126.266 204.249 129.143 201.792 131.068 cv
201.837 131.679 201.078 132.041 201.792 132.404 cv
202.938 131.142 204.51 129.505 205.645 127.208 cv
cp
197.936 122.604 mo
198.349 121.915 199.065 121.482 198.813 120.228 cv
197.633 120.501 197.735 121.774 197.936 122.604 cv
cp
24.6455 128.692 mo
24.2134 127.97 23.4629 127.517 23.4185 126.465 cv
23.6694 126.429 23.7139 126.22 23.9448 126.168 cv
24.4365 126.195 24.4243 126.653 24.8203 126.762 cv
24.377 124.268 25.3105 120.605 23.0688 119.634 cv
23.0342 123.417 21.8457 127.387 24.6455 128.692 cv
cp
182.342 126.91 mo
182.363 126.532 182.597 126.335 183.043 126.316 cv
186.613 128.043 189.356 130.469 194.782 130.622 cv
194.999 129.121 192.888 128.523 191.979 127.504 cv
191.731 126.971 191.476 126.446 190.75 126.316 cv
190.857 128.354 192.434 129.149 193.555 130.325 cv
191.478 129.759 190.511 128.253 190.225 126.168 cv
187.112 126.133 185.283 125.012 183.218 124.09 cv
183.058 123.685 182.891 124.484 182.342 124.237 cv
180.095 122.677 177.766 121.186 175.684 119.485 cv
177.105 122.638 179.62 124.86 182.342 126.91 cv
cp
50.0518 121.564 mo
54.2681 121.178 56.8896 119.44 59.6875 117.854 cv
55.3672 118.149 52.3159 119.523 50.0518 121.564 cv
cp
60.04 118.892 mo
57.1626 119.324 55.3306 120.642 53.0308 121.564 cv
53.7529 121.451 54.4849 121.774 54.0806 122.159 cv
50.9121 121.804 48.2578 123.157 46.3735 124.386 cv
54.4473 123.954 60.2139 121.564 64.2456 117.704 cv
62.0913 117.463 61.1182 118.222 60.04 118.892 cv
cp
190.051 120.971 mo
188.745 120.098 186.819 119.75 185.145 119.189 cv
185.509 118.653 186.664 119.464 186.897 119.041 cv
184.786 117.698 181.667 116.19 178.312 117.555 cv
179.999 119.144 181.067 121.259 184.094 121.713 cv
187.708 123.104 191.39 125.23 195.132 126.02 cv
193.875 124.017 192.442 122.162 189.701 121.416 cv
189.089 122.087 187.32 122.564 186.371 122.456 cv
186.755 121.89 187.854 121.93 188.474 121.564 cv
187.106 121.288 185.065 121.583 184.094 120.971 cv
185.576 120.058 188.931 120.778 190.051 120.971 cv
cp
176.735 116.07 mo
176.847 116.817 177.455 117.144 178.138 117.408 cv
178.877 116.748 180.708 117.013 181.641 116.516 cv
180.774 116.507 180.608 115.907 180.063 115.625 cv
178.984 115.799 177.944 116.006 176.735 116.07 cv
cp
174.632 116.07 mo
174.535 115.648 174.022 114.816 173.756 115.031 cv
174.174 115.271 173.946 116.058 174.632 116.07 cv
cp
46.0215 118 mo
46.7402 117.372 47.6636 116.917 48.6499 116.516 cv
48.0049 116.024 48.2725 114.758 47.9502 113.991 cv
47.5117 115.405 45.8896 116.601 46.0215 118 cv
cp
182.868 115.477 mo
182.654 115.493 182.452 115.521 182.517 115.774 cv
188.296 118.547 194.26 121.166 196.71 126.762 cv
196.606 121.902 194.047 118.496 189.175 117.258 cv
189.198 116.892 189.202 116.542 188.999 116.367 cv
186.101 114.617 182.509 112.664 179.012 111.913 cv
180.612 112.833 181.224 114.593 182.868 115.477 cv
cp
190.225 111.318 mo
190.873 111.558 191.863 110.97 192.681 110.873 cv
192.583 110.657 192.885 110.106 192.504 110.13 cv
192.131 110.854 190.805 110.77 190.225 111.318 cv
cp
40.2412 113.397 mo
40.9912 111.9 39.5811 111.021 39.189 109.686 cv
39.3389 111.093 39.6255 112.383 40.2412 113.397 cv
cp
206.348 116.07 mo
206.019 116.589 205.276 116.814 205.119 117.408 cv
204.932 118.117 205.467 118.696 205.472 119.485 cv
205.479 122.055 203.37 124.487 203.368 127.059 cv
205.552 124.108 208.683 121.168 208.1 116.367 cv
207.445 117.348 207.057 118.555 205.821 119.041 cv
209.081 116.82 207.998 111.617 205.995 108.794 cv
205.1 111.561 203.862 113.767 205.295 116.813 cv
206.494 115.751 206.507 113.683 207.223 112.21 cv
207.045 113.689 207.084 114.909 206.348 116.07 cv
cp
191.629 111.764 mo
190.807 112.256 189.91 111.542 189.875 110.873 cv
190.051 110.675 190.042 110.321 190.4 110.279 cv
190.409 110.483 190.318 110.606 190.225 110.725 cv
191.004 110.245 192.018 109.965 192.504 109.24 cv
192.255 108.61 191.086 109.036 190.927 109.388 cv
190.94 109.129 190.889 108.927 190.75 108.794 cv
187.17 108.805 190.594 114.053 191.629 111.764 cv
cp
199.338 107.012 mo
198.499 109.964 198.102 114.083 198.112 117.258 cv
199.107 116.064 200.245 114.228 201.615 113.843 cv
200.437 115.914 197.305 117.119 197.936 120.228 cv
199.275 119.929 197.922 117.344 199.338 117.109 cv
200.038 117.111 199.674 118.014 200.038 118.298 cv
200.724 117.54 201.714 116.254 202.667 116.22 cv
202.135 117.575 199.094 118.303 200.214 120.08 cv
201.036 119.143 201.69 118.065 202.841 117.408 cv
202.458 119.409 199.322 119.87 200.214 122.456 cv
201.142 121.46 201.774 120.215 203.191 119.634 cv
202.508 121.317 199.727 122.345 200.214 124.09 cv
201.087 123.329 201.714 121.621 202.841 121.564 cv
201.994 123.272 199.393 124.286 200.391 127.059 cv
201.125 125.802 201.31 124.077 202.667 123.347 cv
202.23 125.205 200.407 126.677 200.563 128.543 cv
202.713 126.404 203.161 122.826 204.243 119.783 cv
203.538 114.243 202.833 108.703 199.164 105.677 cv
198.451 106.311 199.299 106.294 199.338 107.012 cv
cp
37.0864 108.052 mo
38.0215 109.767 37.293 112.107 37.7871 113.991 cv
38.1963 115.549 39.4063 116.274 39.7139 117.258 cv
36.6743 116.073 37.4629 111.643 36.7354 108.498 cv
34.1226 112.225 36.0332 118.623 37.9624 122.01 cv
38.7969 119.458 40.8105 117.496 40.2412 114.436 cv
39.9824 113.054 38.8276 111.675 38.6631 109.834 cv
38.5239 108.278 38.9141 106.883 38.4873 105.231 cv
38.0981 106.237 37.4751 107.045 37.0864 108.052 cv
cp
21.1406 167.745 mo
21.2065 168.929 22.3965 171.234 21.667 173.09 cv
21.1968 170.521 20.7646 167.916 19.7402 165.815 cv
16.1636 163.153 11.9468 161.034 6.24756 160.173 cv
6.53516 160.87 7.2749 161.183 7.65039 161.805 cv
8.0625 161.809 8.16602 161.55 8.7002 161.657 cv
14.042 165.94 18.1138 171.3 23.4185 175.615 cv
23.77 175.615 24.1196 175.615 24.4707 175.615 cv
25.5078 176.694 26.2939 178.068 27.6245 179.03 cv
28.5962 179.733 30.5522 179.976 30.4282 181.257 cv
27.2827 180.941 25.3452 178.349 23.5942 176.358 cv
22.1929 176.207 21.1147 176.443 19.7402 176.654 cv
20.8828 177.269 21.7373 178.129 23.4185 178.288 cv
22.8008 178.408 22.8555 179.097 22.1929 179.179 cv
20.6274 178.782 17.375 179.021 15.3594 179.179 cv
16.6572 179.581 17.0986 180.63 18.5132 180.813 cv
20.8848 181.118 23.7905 179.401 26.2222 179.922 cv
25.9106 180.004 25.4951 179.998 25.3467 180.218 cv
27.2402 180.89 29.6997 181.084 30.9536 182.297 cv
30.042 183.149 28.4355 182.209 27.2739 181.852 cv
25.9092 181.432 24.4429 181 23.4185 180.515 cv
22.1265 180.706 20.9204 180.972 19.564 181.109 cv
20.7983 181.975 22.6143 182.661 24.4707 183.336 cv
26.4077 184.042 28.6299 184.37 30.2529 184.97 cv
31.3442 185.374 32.1436 185.933 33.4067 185.565 cv
33.3496 184.158 31.7793 181.889 33.0557 180.813 cv
33.3047 185.948 35.584 189.36 37.9624 192.691 cv
37.9199 192.954 37.6606 193.03 37.2612 192.989 cv
40.71 196.996 43.5518 201.517 47.4233 205.165 cv
47.6572 205.413 47.8867 205.663 47.7729 206.203 cv
48.3823 206.333 49.0464 206.414 49.1772 206.947 cv
47.4634 207.937 44.9766 206.169 42.6924 206.203 cv
42.2183 206.111 42.2563 205.583 41.6431 205.61 cv
40.3125 205.745 38.915 205.153 37.7871 205.61 cv
39.4146 207.745 42.2354 208.871 46.5483 208.728 cv
46.5654 208.961 46.5239 209.243 46.8984 209.173 cv
50.75 210.019 53.9204 211.439 57.0601 212.887 cv
56.7959 211.923 56.9546 210.6 56.3604 209.916 cv
55.9502 210.51 56.5596 211.967 55.8345 212.292 cv
54.9014 210.458 55.6382 207.211 53.7305 206.203 cv
53.6079 207.716 54.7075 209.534 53.9063 210.658 cv
53.332 208.572 54.2217 205.245 51.8047 204.72 cv
51.8564 206.21 52.7109 207.809 52.3306 209.173 cv
51.5151 206.994 51.9746 203.733 49.877 202.64 cv
49.8687 204.53 50.4575 206.7 50.4033 208.134 cv
49.1885 206.243 50.3892 202.304 48.4751 201.007 cv
48.2705 202.37 49.0176 203.712 48.4751 204.868 cv
47.9175 202.964 48.667 199.954 46.7236 199.225 cv
46.5757 200.034 47.4292 201.441 46.5483 201.898 cv
46.4053 200.336 46.7656 198.348 45.4966 197.74 cv
45.5029 198.389 45.562 199.083 45.1465 199.373 cv
45.3516 197.666 44.9189 196.498 43.9194 195.81 cv
43.7256 197.609 44.4224 199.44 44.269 200.71 cv
43.6982 199.065 43.5918 197.027 43.3945 195.067 cv
40.8838 190.958 36.9019 187.303 35.1582 183.04 cv
37.1704 185.393 38.4819 188.341 40.9409 190.315 cv
41.2065 189.652 41.8452 189.278 41.2905 188.682 cv
38.0889 188.591 39.0332 186.589 38.6631 184.674 cv
38.5156 183.907 37.5068 182.872 36.9102 181.852 cv
35.1572 178.856 32.6353 175.993 32.356 172.794 cv
33.3667 174.263 33.5439 176.44 34.9834 177.546 cv
34.3755 172.887 30.8398 169.656 31.1279 165.815 cv
31.9648 166.343 32.0176 167.537 32.8809 168.042 cv
32.8037 165.087 30.2046 163.48 30.604 160.618 cv
31.3916 162.078 31.5898 164.038 32.7061 165.22 cv
33.0356 161.228 29.2168 159.96 29.376 156.608 cv
30.5503 158.188 30.8369 160.52 32.5298 161.657 cv
33.082 159.041 31.041 157.106 31.6538 155.42 cv
32.1777 155.917 32.0068 157.002 32.5298 157.499 cv
32.3101 152.702 31.3525 147.571 33.4067 143.838 cv
33.6826 143.852 33.5439 144.217 33.9316 144.134 cv
33.9082 143.223 34.0581 142.46 34.4575 141.907 cv
34.3657 140.938 34.4492 140.735 34.4575 139.681 cv
36.9985 134.259 39.2061 128.558 43.2173 124.386 cv
43.4707 124.469 43.6455 124.617 43.7446 124.831 cv
43.8447 125.565 42.6523 125.978 43.0444 126.465 cv
44.002 126.089 45.7139 126.352 46.5483 125.87 cv
45.7461 125.511 44.1177 125.851 43.9194 124.979 cv
48.439 121.187 52.4067 116.928 61.0918 116.664 cv
62.2832 115.446 64.123 113.988 64.5957 112.655 cv
59.0024 114.053 53.8667 115.837 49.5269 118.298 cv
50.2314 117.459 51.5342 117.128 52.1548 116.22 cv
47.6201 118.217 44.0728 121.841 40.7661 124.386 cv
41.0313 122.481 42.2075 120.561 42.8677 119.485 cv
42.75 119.65 42.2856 120.256 42.1675 119.931 cv
44.1494 115.479 49.1938 109.76 45.6714 103.894 cv
43.709 107.292 41.5498 110.797 41.2905 115.625 cv
41.1387 118.463 40.9038 120.146 39.8892 122.159 cv
40.0264 122.969 40.8364 121.254 41.1157 121.713 cv
40.73 122.228 40.7954 123.124 40.2412 123.495 cv
40.0347 123.452 39.5117 122.841 39.5391 123.495 cv
38.9478 123.876 39.1069 124.096 39.3643 124.683 cv
37.8164 127.133 37.0293 130.227 35.1582 132.404 cv
35.2725 133.446 34.6602 134.778 34.2837 135.522 cv
33.0356 137.981 33.4932 141.205 31.8301 143.541 cv
31.7456 144.757 31.3682 145.725 30.604 146.363 cv
30.2373 146.686 30.1035 146.288 29.5518 146.363 cv
28.7246 148.039 29.8525 149.251 30.0781 150.372 cv
30.4878 152.407 29.8359 153.733 28.1504 154.975 cv
28.0186 160.169 27.561 164.79 28.8516 169.082 cv
28.7871 169.423 28.0835 169.224 28.1504 169.675 cv
29.2939 173.458 30.3896 177.281 32.1797 180.515 cv
29.3447 180.733 30.0566 176.677 28.3252 175.468 cv
27.8086 173.727 26.9014 172.317 25.6963 171.161 cv
26.0708 172.944 27.3608 175.465 26.3984 177.396 cv
26.0879 172.662 24.5889 168.141 20.9648 166.706 cv
22.3584 169.386 24.6094 172.131 24.6455 175.468 cv
23.6802 172.721 22.4067 170.236 21.1406 167.745 cv
cp
39.3643 105.379 mo
39.1172 104.764 39.8638 104.232 39.3643 103.894 cv
38.9297 104.082 39.144 105.464 39.3643 105.379 cv
cp
50.7539 107.458 mo
51.9092 104.874 53.98 102.274 54.7827 99.8848 cv
52.0205 101.108 50.9141 104.525 50.7539 107.458 cv
cp
64.9453 104.934 mo
67.2148 103.011 69.2764 100.935 71.0781 98.3994 cv
63.7881 100.063 57.8853 103.117 53.3809 107.161 cv
51.5664 108.791 50.1191 110.98 49.001 113.102 cv
49.9844 113.067 51.3408 112.132 52.5054 111.764 cv
52.6406 112.143 51.8188 112.447 52.3306 112.655 cv
53.0156 112.049 54.0806 111.763 54.7827 111.17 cv
54.1934 111.077 53.5059 111.658 53.2065 111.318 cv
57.4136 109.208 61.5703 107.792 64.9453 104.934 cv
cp
53.2065 104.191 mo
52.1812 105.918 51.1543 107.485 50.4033 109.092 cv
50.3945 109.249 50.4854 109.469 50.5767 109.24 cv
53.9326 105.946 57.188 101.775 58.813 97.5088 cv
55.5371 98.6558 54.8076 101.492 53.2065 104.191 cv
cp
56.3604 103.746 mo
57.4302 103.216 57.6558 101.974 59.3398 101.963 cv
60.9902 100.146 62.9468 97.7959 63.1938 95.2813 cv
59.3145 96.6484 57.4976 100.553 56.3604 103.746 cv
cp
166.047 93.6484 mo
170.241 95.8843 175.209 97.4653 178.487 100.479 cv
177.404 100.207 178.013 101.364 177.259 101.371 cv
176.744 101.214 176.924 100.466 176.209 100.479 cv
175.715 100.563 174.727 100.996 174.281 100.627 cv
174.489 100.012 175.974 100.478 176.209 99.8848 cv
172.571 98.0181 169.006 96.0894 165.171 94.3911 cv
166.786 99.3574 171.279 101.885 174.807 105.231 cv
178.649 106.232 181.693 107.908 184.795 109.537 cv
185.436 109.635 185.466 109.215 186.021 109.24 cv
186.286 112.778 188.927 114.3 190.577 116.664 cv
191.113 116.557 191.216 116.816 191.629 116.813 cv
190.6 115.45 189.947 114.978 189.524 113.547 cv
189.153 113.167 188.745 113.987 188.3 113.547 cv
188.506 110.946 186.444 110.267 186.371 107.904 cv
184.204 106.326 183.143 103.811 180.413 102.706 cv
179.374 103.177 177.131 104.16 176.033 103.597 cv
177.338 103.168 178.98 103.027 180.063 102.409 cv
178.168 101.564 176.006 103.009 174.457 102.855 cv
175.505 101.962 177.812 102.136 178.662 101.073 cv
182.031 101.582 183.644 103.583 185.495 105.379 cv
184.482 102.792 183.159 100.309 181.115 98.8447 cv
180.362 98.3057 179.202 98.1768 178.837 97.2119 cv
179.64 96.3999 180.816 97.5293 181.466 97.8062 cv
181.425 97.1978 181.38 96.5923 181.115 96.1729 cv
181.145 96.4951 180.493 96.2393 180.238 96.3213 cv
179.6 94.8911 176.512 94.5464 174.981 93.7969 cv
174.888 94.0127 175.188 94.5645 174.807 94.5391 cv
173.989 92.7305 167.812 91.8208 166.047 93.6484 cv
cp
165.344 93.3516 mo
165.219 92.6006 165.603 92.2827 166.047 92.0151 cv
165.696 92.0151 165.344 92.0151 164.994 92.0151 cv
165.151 92.4263 164.636 93.4092 165.344 93.3516 cv
cp
184.094 100.479 mo
185.632 103.119 187.214 105.544 188.123 108.646 cv
187.323 101.553 185.553 95.2832 182.166 90.3823 cv
182.012 94.8345 182.615 97.9395 184.094 100.479 cv
cp
212.654 148.44 mo
215.535 146.328 218.078 143.931 220.715 141.61 cv
221.007 141.61 221.298 141.61 221.591 141.61 cv
222.395 138.78 223.577 135.457 224.043 132.107 cv
224.184 131.097 223.76 129.598 225.094 129.138 cv
225.998 134.185 222.928 139.154 222.466 143.541 cv
220.615 146.491 218.413 149.195 215.983 151.857 cv
215.24 152.672 214.479 153.887 213.004 153.936 cv
212.507 153.617 212.715 153.145 212.828 152.599 cv
215.046 152.189 215.925 149.791 217.561 148.44 cv
215.698 149.488 213.458 151.5 211.428 152.896 cv
213.688 154.351 212.741 158.431 209.15 157.944 cv
208.922 158.6 208.796 159.486 209.676 159.578 cv
208.64 160.782 209.331 161.776 208.975 163.29 cv
208.806 163.829 209.761 163.415 209.676 163.885 cv
208.586 164.94 208.979 167.254 208.625 168.933 cv
209.66 165.822 210.772 162.891 213.004 160.766 cv
214.575 159.271 216.5 157.593 218.962 156.905 cv
220.12 159.271 219.038 163.819 218.787 166.854 cv
220.348 166.404 221.618 164.999 223.166 164.033 cv
224.692 163.081 226.382 161.862 228.248 161.805 cv
228.651 162.189 227.892 162.491 227.722 162.846 cv
228.796 167.639 225.229 171.011 223.516 174.427 cv
225.174 174.086 227.17 172.658 228.95 173.387 cv
226.749 175.087 222.624 175.155 220.889 177.247 cv
220.556 177.526 220.448 177.265 220.013 177.247 cv
218.462 178.698 216.5 179.723 214.581 180.813 cv
212.721 181.869 210.978 183.214 208.799 183.931 cv
208.321 183.451 208.83 182.856 209.15 182.594 cv
208.743 182.641 208.478 182.57 208.272 182.445 cv
210.346 181.926 212.001 181.05 213.179 179.772 cv
211.856 180.038 210.785 180.515 209.325 180.664 cv
210.137 177.87 212.563 175.859 214.581 173.981 cv
215.604 173.032 216.838 172.219 217.91 171.309 cv
218.971 170.411 219.844 169.117 221.415 168.784 cv
221.78 170.249 219.785 170.926 218.787 171.755 cv
217.702 172.654 216.765 173.696 215.808 174.577 cv
218.044 173.847 220.396 173.217 222.992 172.794 cv
224.828 170.093 226.898 167.591 226.847 163.29 cv
221.799 166.041 217.283 169.242 212.828 172.497 cv
211.043 176.626 208.35 179.986 206.521 184.079 cv
205.535 184.314 205.907 184.821 205.295 185.416 cv
205.938 185.416 206.579 185.416 207.223 185.416 cv
207.677 185.289 206.886 184.765 207.398 184.524 cv
208.008 184.489 208.563 184.571 209.15 184.524 cv
215.77 183.998 219.419 179.858 224.219 177.842 cv
224.123 179.796 221.027 181.042 219.137 182 cv
217.027 183.069 214.609 184.177 212.305 184.823 cv
219.275 184.923 222.978 181.578 226.672 178.288 cv
227.669 177.401 228.895 176.447 229.649 175.468 cv
230.293 174.633 230.568 172.425 232.453 173.09 cv
230.132 178.252 225.87 181.767 221.765 185.416 cv
223.532 187.384 227.027 187.623 229.476 188.682 cv
229.283 190.147 227.208 190.791 225.794 191.356 cv
219.239 193.974 208.509 192.299 205.295 187.643 cv
203.777 187.941 203.938 189.662 203.191 190.612 cv
209.636 190.764 205.745 199.836 200.038 197.146 cv
198.391 198.966 197.538 201.461 196.009 203.383 cv
202.683 202.35 213.685 202.535 219.487 203.086 cv
219.224 204.411 217.763 205.198 216.685 206.056 cv
215.63 206.893 214.54 207.882 213.354 208.58 cv
210.77 210.101 207.497 210.34 204.595 211.697 cv
205.089 212.156 205.805 211.545 206.521 211.697 cv
206.505 212.081 205.839 211.91 205.821 212.292 cv
208.059 213.613 210.821 214.489 212.305 216.45 cv
208.458 219.398 201.125 220.116 193.906 219.717 cv
193.313 221.7 188.543 224.087 186.722 221.646 cv
186.461 221.298 186.333 220.713 186.371 220.162 cv
185.516 220.599 183.454 221.637 181.466 221.201 cv
180.234 220.932 179.742 220.025 179.538 218.974 cv
175.436 221.587 172.522 225.206 167.622 227.143 cv
172.782 227.611 177.354 227.018 180.94 228.478 cv
180.334 229.538 178.746 229.853 177.61 230.408 cv
176.393 231.005 175.28 231.653 174.106 232.189 cv
176.198 231.735 178.82 229.652 181.291 229.517 cv
179.135 231.106 176.155 231.996 173.932 233.527 cv
176.909 232.536 179.491 231.21 182.517 230.26 cv
182.838 229.879 181.278 229.831 181.641 228.924 cv
182.793 228.924 184.216 229.535 185.495 229.963 cv
186.712 230.369 188.347 230.818 188.649 231.894 cv
187.309 232.43 185.85 230.913 184.27 230.705 cv
181.513 231.735 179.128 233.08 176.56 234.27 cv
179.828 234.02 182.577 232.044 185.846 231.3 cv
182.937 232.916 179.91 234.738 176.033 234.714 cv
175.668 233.961 177.443 233.863 177.785 233.229 cv
176.762 233.65 175.812 234.131 174.632 234.417 cv
175.982 235.104 177.815 235.382 178.662 236.495 cv
177.87 237.113 178.173 237.315 178.312 238.426 cv
178.636 238.881 178.573 237.772 179.188 237.98 cv
179.785 237.872 179.477 238.529 179.889 238.575 cv
181.252 237.992 183.185 236.762 185.671 236.645 cv
188.273 236.521 191.887 236.675 193.028 238.278 cv
190.099 238.273 188.48 237.508 185.495 237.684 cv
182.317 237.873 180.745 240.415 177.785 239.467 cv
176.963 240.018 178.261 240.018 178.138 240.803 cv
178.771 240.499 179.227 240.042 180.063 239.911 cv
181.449 240.799 185.283 239.389 187.247 240.356 cv
187.408 241.283 186.244 241.09 185.321 241.101 cv
185.225 241.315 185.526 241.866 185.145 241.842 cv
185.27 242.218 186.146 241.48 186.196 242.14 cv
184.906 244.074 183.602 246.747 183.393 250.157 cv
183.254 252.394 183.834 254.756 181.991 255.949 cv
180.581 256.863 178.479 256.351 177.085 257.581 cv
176.549 257.438 177.287 257.186 177.259 256.988 cv
172.402 257.097 169.368 255.657 166.748 253.869 cv
166.601 253.698 166.517 253.472 166.572 253.127 cv
164.447 252.318 161.432 250.661 159.037 252.237 cv
158.863 260.605 152.35 264.878 141.516 264.709 cv
143.295 267.659 145.518 271.018 145.546 274.955 cv
143.188 274.33 141.857 272.834 139.765 271.983 cv
139.198 273.98 140.144 277.257 138.013 277.925 cv
137.446 276.717 138.792 274.921 138.362 272.875 cv
137.871 273.747 138.615 275.664 137.486 275.994 cv
136.116 275.527 135.871 274.207 135.209 273.321 cv
132.944 270.304 129.18 268.307 125.746 266.046 cv
126.047 264.071 123.826 263.313 123.294 261.59 cv
122.874 261.909 123.72 262.408 123.468 263.076 cv
119.063 259.926 120.666 252.993 120.138 247.78 cv
119.773 251.826 118.86 255.411 116.986 258.176 cv
116.798 258.732 117.419 258.599 117.336 259.066 cv
116.625 260.544 114.936 261.192 114.356 262.778 cv
114.021 262.842 113.916 263.1 113.481 263.076 cv
112.236 265.03 110.686 266.812 109.276 268.719 cv
107.892 270.591 107.036 272.733 105.422 274.51 cv
104.06 274.165 105.167 272.749 105.422 272.135 cv
106.47 269.595 107.837 266.742 109.45 264.858 cv
109.45 264.117 108.822 263.904 108.926 263.076 cv
106.542 263.263 103.059 263.234 100.865 262.778 cv
99.6147 263.798 97.8784 264.405 96.6611 265.451 cv
96.5474 266.735 97.7827 266.876 98.061 267.827 cv
96.5 268.336 95.5376 267.25 95.6089 265.896 cv
94.6177 265.89 93.9565 266.815 92.9795 266.343 cv
93.6929 265.345 93.8237 264.774 95.4331 264.562 cv
95.481 264.055 95.2974 263.357 95.6089 263.076 cv
92.1162 263.084 86.6206 263.725 85.6211 261.146 cv
87.375 261.208 88.8413 262.108 90.8774 262.187 cv
95.5215 262.362 100.213 261.334 102.968 259.364 cv
102.593 258.146 101.903 257.197 101.566 255.949 cv
100.276 256.242 98.9053 256.464 97.5347 256.689 cv
97.3726 257.281 96.3364 259.327 97.7109 259.364 cv
96.249 260.396 96.7158 257.64 97.0107 256.841 cv
96.5391 256.498 95.3203 256.787 94.5571 256.689 cv
94.3213 255.654 93.0352 255.507 92.1035 255.06 cv
88.7344 256.283 86.4307 253.006 86.3223 250.008 cv
88.2793 248.832 88.4746 251.491 89.8257 252.681 cv
90.98 253.698 94.6646 255.407 96.4854 255.65 cv
100.238 256.153 102.71 254.169 105.596 252.83 cv
105.203 254.5 107.674 254.496 107.874 256.097 cv
106.637 255.004 105.498 253.327 103.843 254.908 cv
104.275 255.782 105.515 256.757 105.596 257.434 cv
104.51 257.017 104.373 255.796 103.493 255.207 cv
102.844 255.301 102.467 255.622 101.917 255.8 cv
102.36 256.91 102.68 258.121 103.318 259.066 cv
105.742 258.251 107.582 256.938 109.276 255.503 cv
108.864 254.229 105.853 253.457 105.772 252.237 cv
105.715 251.383 106.348 250.361 107.698 250.008 cv
107.721 250.376 107.724 250.726 107.524 250.899 cv
108.909 251.457 110.542 251.806 111.902 252.386 cv
112.296 252.223 112.211 251.656 112.604 251.494 cv
111.314 250.312 108.57 250.359 106.997 249.415 cv
109.288 249.65 111.022 250.359 112.779 251.049 cv
112.632 249.365 108.692 249.68 106.997 248.821 cv
107.685 248.276 109.185 249.379 110.502 249.268 cv
110.01 248.359 108.489 248.799 107.348 248.227 cv
106.803 246.127 107.547 243.223 106.472 242.287 cv
103.042 245.049 97.1104 248.09 91.4038 249.268 cv
90.1685 249.521 88.5483 249.683 87.373 249.268 cv
81.3398 250.825 78.1104 256.734 70.728 257.434 cv
67.1587 257.771 62.9038 257.444 61.6177 254.462 cv
62.2524 253.667 63.1821 253.118 64.0693 252.533 cv
63.1704 251.587 63.438 248.669 63.8955 247.484 cv
64.2642 247.159 64.6724 247.456 64.9453 247.633 cv
64.9644 247.024 64.9814 246.417 64.769 246.001 cv
64.627 245.639 63.8467 246.294 63.5435 245.85 cv
63.7607 242.896 65.8462 240.804 65.9971 238.278 cv
66.4609 237.385 67.4858 236.968 68.4512 236.495 cv
64.7998 236.692 60.4048 236.394 57.0601 235.902 cv
55.6655 235.697 53.8403 235.879 53.2065 234.863 cv
56.3506 233.831 60.2305 236.346 64.2456 235.456 cv
65.2026 235.243 66.0625 234.316 66.8735 233.822 cv
67.8633 233.222 68.6812 232.748 69.6768 232.337 cv
67.9146 232.133 65.9087 233.005 63.8955 233.082 cv
64.5049 233.492 65.4092 232.885 66.1714 232.933 cv
63.5078 233.854 58.1943 234.531 55.1323 233.675 cv
58.1636 229.362 63.5581 227.056 72.3047 227.588 cv
67.9819 225.41 63.4741 223.39 59.6875 220.755 cv
58.79 221.342 59.2695 222.115 58.4619 222.686 cv
57.1411 223.624 55.0986 222.542 53.9063 223.43 cv
54.0674 222.83 52.9106 223.032 52.3306 222.686 cv
50.1553 220.483 51.1504 217.283 54.0806 216.45 cv
53.1108 216.313 52.1787 216.981 51.2788 217.341 cv
42.6865 220.774 27.3384 220.654 18.5132 217.043 cv
17.7197 214.426 21.7861 213.53 24.2949 212.738 cv
24.8857 212.603 24.3154 212.406 24.6455 212.145 cv
26.0771 212.738 27.9087 211.701 29.7271 211.697 cv
25.5391 210.496 22.9116 207.971 18.3379 207.094 cv
18.353 206.713 19.0874 206.939 18.8633 206.353 cv
19.9868 206.705 21.396 206.297 21.8418 205.61 cv
28.9966 205.242 37.0249 203.636 44.0942 205.017 cv
41.6787 201.569 38.7085 198.593 37.0864 194.473 cv
36.1611 195.405 35.6201 196.403 33.9316 196.403 cv
32.9409 196.403 30.3057 195.31 29.7271 194.473 cv
28.5972 192.843 29.6118 189.377 32.1797 189.869 cv
32.4453 191.188 30.0601 191.268 30.604 193.286 cv
31.9604 193.001 31.2881 190.995 32.8809 190.911 cv
32.1396 191.173 32.0859 192.017 32.1797 192.989 cv
33.5054 193.17 34.1699 191.508 35.3335 191.058 cv
34.7983 190.771 34.2075 190.244 34.4575 189.722 cv
34.25 189.322 33.5449 189.722 33.2314 189.722 cv
33 189.324 32.7612 188.932 32.5298 188.534 cv
29.1021 191.084 20.9521 189.807 15.7095 189.722 cv
14.4341 188.823 12.3252 188.792 10.8037 188.831 cv
11.0176 187.359 14.2002 187.071 16.2354 186.604 cv
18.5259 186.077 20.9312 185.525 23.0688 185.267 cv
23.0171 184.866 22.332 185.001 22.1929 184.674 cv
17.0337 185.412 12.7769 186.794 8.17529 187.643 cv
7.61426 187.623 7.40479 187.307 7.47559 186.751 cv
5.61426 187.004 3.6875 186.213 2.21826 186.454 cv
1.2124 186.621 1.05225 187.529 .115234 187.197 cv
-.259277 186.656 .375488 185.889 .641113 185.416 cv
.990723 185.416 1.3418 185.416 1.69189 185.416 cv
5.34082 183.411 9.90186 182.176 15.3594 181.703 cv
12.3511 180.086 9.49805 178.485 7.12305 176.358 cv
4.7749 174.251 3.04199 171.762 .815918 169.526 cv
1.00684 168.672 .0107422 168.823 .290039 167.893 cv
1.34277 167.408 1.51367 168.527 2.21826 168.784 cv
6.04297 168.612 8.31006 169.758 11.3291 170.271 cv
10.6899 168.93 9.42969 168.118 9.57715 166.111 cv
9.44531 165.581 8.80127 165.483 8.5249 165.073 cv
7.64209 163.433 6.6377 161.905 5.19678 160.766 cv
4.52002 160.232 3.01904 160.026 3.27002 158.836 cv
8.59082 159.081 13.4561 160.991 17.6372 162.696 cv
18.0283 163.108 18.1899 163.714 18.688 164.033 cv
19.0645 163.412 17.7646 162.939 17.8115 162.103 cv
19.2954 162.579 19.1392 164.442 20.6152 164.924 cv
21.5181 162.322 21.5098 158.949 22.1929 156.163 cv
22.8433 157.838 23.3682 159.62 23.9448 161.359 cv
23.4438 160.943 23.4438 160.1 22.8931 159.726 cv
22.3193 161.517 22.585 164.018 21.4922 165.37 cv
23.585 166.813 25.6865 168.248 26.9233 170.417 cv
27.1016 170.105 26.6313 168.929 27.6245 168.933 cv
26.3511 165.045 26.8306 160.001 26.9233 155.272 cv
22.1411 155.99 22.2676 149.067 25.6963 148.144 cv
26.3911 148.2 27.3765 148.008 27.8003 148.293 cv
28.3169 148.087 28.2041 147.348 28.3252 146.808 cv
25.4849 145.412 23.1255 143.442 21.1406 141.165 cv
19.2534 138.999 17.0796 136.481 16.7612 133.443 cv
18.0864 133.36 17.8774 134.576 18.3379 135.226 cv
19.4575 135.712 20.8345 135.981 22.1929 136.265 cv
21.2412 134.794 18.8525 133.255 17.8115 131.365 cv
17.4126 131.77 17.5845 132.657 16.9365 132.85 cv
15.8887 132.398 16.542 131.378 16.5864 130.475 cv
16.7109 127.885 16.1904 124.565 17.2861 122.901 cv
16.9375 122.157 15.5938 122.257 15.7095 121.119 cv
18.3223 121.238 19.6421 123.721 21.4922 124.979 cv
21.8589 122.568 21.9072 119.887 22.3677 117.555 cv
25.0796 118.672 25.355 121.855 28.3252 122.752 cv
30.001 126.084 32.7344 128.519 34.2837 131.959 cv
35.5894 129.949 36.5244 127.622 37.6113 125.425 cv
37.332 125.181 36.9565 125.492 36.5605 125.128 cv
35.0591 122.21 34.332 118.067 34.1079 114.436 cv
34.0601 113.672 33.8345 112.665 33.9316 111.913 cv
34.1475 110.252 35.7021 108.193 36.5605 106.567 cv
37.5088 104.771 38.2393 102.581 40.064 101.963 cv
40.5264 102.54 39.8667 103.22 39.5391 103.597 cv
39.5903 103.907 40.0132 103.377 40.064 103.894 cv
39.4692 106.317 39.2036 109.634 40.5908 111.467 cv
42.1445 108.28 43.2334 104.699 45.8467 102.409 cv
48.2578 104.054 48.6055 108.963 47.4233 111.913 cv
49.5142 109.891 49.624 103.362 51.8047 100.33 cv
53.9434 99.4712 55.7583 98.3374 56.8862 96.6182 cv
57.395 96.748 57.082 96.8408 57.0601 97.2119 cv
58.4229 96.5464 59.9775 95.875 61.4414 95.1333 cv
62.7886 94.4497 64.1128 93.0859 65.6475 93.5005 cv
64.272 95.6021 63.769 98.4424 62.1416 100.33 cv
65.2676 99.4014 69.6211 96.6895 73.8804 97.2119 cv
73.8584 97.687 73.4849 97.8652 72.8296 97.8062 cv
71.9863 102 67.8296 105.076 64.2456 107.755 cv
62.5283 109.037 60.8936 110.088 59.1641 111.022 cv
56.749 112.325 53.98 112.987 51.6284 114.288 cv
51.125 114.271 50.4819 114.37 50.2266 114.14 cv
49.9951 114.735 49.8813 115.43 49.5269 115.922 cv
53.5674 114.503 57.6514 111.872 62.8438 111.467 cv
64.5659 111.333 65.814 110.837 67.2231 111.17 cv
66.2681 113.43 64.2266 114.769 62.8438 116.664 cv
64.2402 116.52 65.0537 116.87 65.8213 117.258 cv
65.8794 118.1 65.1357 118.262 65.1211 119.041 cv
60.5723 122.66 55.6045 125.924 47.9502 126.91 cv
49.0244 130.252 43.9468 131.464 41.8154 129.285 cv
40.4199 132.11 39.0703 134.977 37.9624 138.048 cv
39.6548 137.544 40.7344 134.464 43.0444 134.483 cv
43.0244 135.485 41.8716 136.304 41.1157 137.008 cv
38.8379 139.127 36.397 141.638 35.3335 145.025 cv
37.8398 140.477 41.686 136.994 46.5483 134.483 cv
48.1904 133.636 50.1338 133.234 51.9785 132.404 cv
52.7944 132.039 53.3574 131.183 54.4326 131.365 cv
54.4258 132.3 53.3301 132.312 52.6807 132.702 cv
49.0864 135.298 45.6924 138.064 42.3428 140.869 cv
44.5908 139.902 47.186 139.231 48.125 137.157 cv
52.2886 136.033 54.5908 133.329 56.3604 130.177 cv
54.0151 130.323 51.8779 131.21 49.877 132.107 cv
47.8911 132.997 46.1289 134.429 43.9194 134.483 cv
44.042 133.294 45.7422 133.03 46.7236 132.553 cv
49.7417 131.084 53.2349 129.37 57.4111 128.692 cv
58.1929 129.448 57.5996 130.834 57.2363 131.513 cv
56.1782 133.488 53.4414 135.144 52.1548 136.71 cv
55.0806 136.656 57.645 136.908 60.2139 137.157 cv
58.6665 139.803 56.3457 141.796 54.7827 144.432 cv
51.0347 145.809 45.9072 148.721 40.5908 147.105 cv
40.4067 147.049 40.4507 146.615 40.2412 146.51 cv
39.688 146.24 38.8315 146.628 38.6631 146.065 cv
37.1938 147.146 36.0532 148.507 35.6846 150.521 cv
37.0317 151.165 38.0063 150.214 38.8394 149.926 cv
38.7773 150.963 37.7622 151.192 36.9102 151.559 cv
38.8687 151.83 37.3501 151.894 36.0352 152.005 cv
37.9341 152.466 39.7603 151.649 39.8892 150.668 cv
40.0952 149.118 37.6943 149.365 37.6113 147.848 cv
40.2988 147.399 42.4546 151.274 40.415 152.896 cv
40.0996 153.146 39.3511 153.081 38.6631 153.341 cv
37.895 153.633 37.1675 154.371 35.6846 153.788 cv
34.918 153.891 35.3101 153.015 34.8086 152.896 cv
33.9199 153.371 34.5029 154.016 34.4575 154.679 cv
34.0747 160.326 33.8945 167.081 35.3335 172.497 cv
36.0249 172.69 35.7583 171.952 36.21 172.348 cv
36.9189 170.686 36.396 168.406 36.7354 166.557 cv
37.0347 164.927 37.332 162.91 38.6631 162.398 cv
38.853 165.465 36.8237 169.132 36.9102 173.09 cv
37.5195 171.466 37.8481 169.595 38.312 167.745 cv
38.7603 165.961 38.9077 163.978 40.064 162.696 cv
39.4102 165.953 38.4019 168.909 37.7871 172.201 cv
39.6128 168.154 40.2222 163.077 42.6924 159.578 cv
41.9805 162.393 40.2603 165.632 39.5391 168.933 cv
41.2402 165.343 42.6167 161.645 44.9712 158.538 cv
45.7461 157.516 46.771 156.723 47.248 155.568 cv
44.3086 156.889 42.0181 160.046 39.3643 162.103 cv
40.0493 158.278 43.9111 157.146 46.1987 154.679 cv
46.6094 154.682 46.7139 154.422 47.248 154.53 cv
47.269 154.103 47.1523 153.558 47.4233 153.341 cv
48.0615 153.295 48.5635 153.365 49.001 153.49 cv
49.5977 155.858 49.603 159.68 48.4751 161.509 cv
51.0967 160.657 53.2964 158.67 56.3604 158.687 cv
56.5532 159.643 55.4561 159.506 54.9585 159.875 cv
55.1143 161.515 54.3184 164.726 53.3809 166.409 cv
51.9321 166.012 53.3809 164.285 53.2065 163.143 cv
51.6919 165.373 49.2231 166.796 47.7729 169.082 cv
49.5063 168.561 51.1704 167.22 53.0308 167.299 cv
52.5742 173.834 46.4326 178.897 40.7661 181.555 cv
40.0132 181.909 38.4404 181.863 38.8394 183.04 cv
39.5347 182.966 39.7285 182.049 40.5908 181.852 cv
43.9639 181.08 48.2559 183.251 46.8984 187.049 cv
46.2217 188.06 45.3149 188.876 43.7446 189.127 cv
43.3545 189.23 44.6763 189.902 43.9194 190.315 cv
43.1904 190.774 42.7915 189.538 42.8677 189.276 cv
42.3784 189.324 42.7261 189.773 42.3428 190.167 cv
42.7124 190.547 43.3774 190.676 44.269 190.612 cv
47.3872 194.703 49.3223 199.794 53.2065 203.234 cv
52.6426 200.692 52.3843 197.892 52.5054 194.771 cv
52.5522 194.285 51.8247 194.456 51.8047 194.028 cv
52.2983 190.387 53.6587 187.481 54.4326 184.079 cv
56.394 184.184 57.605 185.785 58.6382 186.9 cv
59.6416 187.983 61.0854 189.363 61.0918 190.761 cv
58.3955 189.631 57.7188 186.788 55.3081 185.416 cv
54.5356 188.027 53.7295 190.61 53.0308 193.286 cv
53.1919 193.546 53.5786 193.612 54.0806 193.583 cv
54.4004 196.183 55.8198 197.851 57.0601 199.67 cv
57.7993 196.017 57.0806 192.045 56.5342 189.276 cv
57.2173 191.434 58.6401 193.542 58.4619 195.958 cv
59.0752 194.399 60.3584 193.408 60.7397 191.652 cv
63.2734 190.829 63.0186 187.643 65.8213 187.049 cv
65.8032 190.416 68.0127 194.105 67.9238 198.483 cv
69.1284 197.415 67.8608 195.017 67.3989 193.286 cv
66.8911 191.384 66.1533 189.488 66.3472 187.791 cv
67.9219 187.735 67.3716 188.743 67.5732 189.426 cv
68.7417 193.351 70.2715 197.642 69.8506 203.234 cv
69.4873 203.318 69.2847 203.658 68.9756 203.383 cv
68.4438 206.844 66.9058 209.449 65.6475 212.292 cv
64.2139 212.81 63.4004 213.852 62.8438 215.114 cv
63.6318 215.247 63.9482 213.802 64.5957 213.331 cv
68.79 211.564 72.5757 216.083 69.3257 218.379 cv
71.355 219.335 73.7266 219.996 75.6333 221.054 cv
75.8901 220.906 74.8008 220.08 75.458 219.569 cv
72.7881 216.583 71.3579 211.76 71.7783 206.65 cv
74.4463 207.322 77.0332 209.315 77.562 212.292 cv
79.0356 209.285 79.8574 205.725 82.1177 203.383 cv
82.8491 203.355 82.8618 203.938 83.3423 204.125 cv
82.3853 209.234 85.0649 212.773 87.373 216.45 cv
89.478 219.804 92.9727 223.311 90.8774 228.625 cv
94.4771 227.223 99.3086 226.861 104.37 226.696 cv
105.139 226.853 104.944 226.192 105.596 226.251 cv
105.007 227.063 106.816 226.553 107.524 226.696 cv
102.121 223.604 97.0176 220.256 93.3315 215.709 cv
93.8604 214.95 92.8115 214.461 93.5054 213.926 cv
94.6982 213.808 94.8862 214.539 95.6089 214.817 cv
95.6089 215.063 95.6089 215.312 95.6089 215.558 cv
99.647 219.56 104.51 222.863 109.801 225.807 cv
110.258 226.11 110.273 226.791 111.203 226.696 cv
110.076 224.108 107.339 220.594 104.72 217.786 cv
103.845 216.85 102.432 214.492 101.217 215.558 cv
103.173 218.802 107.309 220.194 108.926 223.725 cv
106.615 222.242 104.451 220.608 102.091 218.379 cv
100.379 216.763 97.833 214.324 98.938 212.292 cv
100.208 212.118 100.593 212.773 101.741 211.995 cv
102.72 212.502 103.472 213.201 104.194 213.926 cv
104.837 212.788 104.269 210.624 105.772 210.212 cv
106.771 211.813 104.054 215.19 106.472 216.302 cv
106.514 214.854 106.898 213.691 107.698 212.887 cv
108.258 212.76 108.241 213.12 108.576 213.184 cv
108.577 212.79 108.479 212.309 108.926 212.292 cv
110.123 212.837 110.712 214.131 111.379 215.114 cv
113.361 218.041 114.801 221.752 116.46 225.212 cv
115.444 227.527 117.43 229.549 118.037 231.447 cv
115.78 231.616 115.617 228.753 115.059 226.993 cv
112.246 228.897 108.106 230.367 108.749 234.714 cv
108.525 234.918 107.922 234.918 107.698 234.714 cv
107.641 236.05 108.213 236.851 108.224 238.129 cv
108.726 237.515 107.688 236.1 108.926 235.902 cv
109.885 236.284 109.398 237.43 109.625 238.129 cv
109.98 239.216 110.772 239.921 111.729 240.356 cv
113.172 239.998 114.429 239.478 115.408 238.725 cv
115.283 237.536 114.373 238.816 114.356 237.536 cv
113.848 237.649 114.516 238.76 114.006 238.872 cv
113.226 238.608 113.757 237.627 112.779 237.833 cv
112.425 236.648 111.571 235.886 111.379 234.564 cv
110.98 234.142 110.703 235.07 109.976 234.863 cv
109.914 232.829 112.172 232.766 113.832 232.189 cv
114.42 231.946 113.96 230.813 114.883 230.854 cv
115.675 231.072 115.288 232.291 116.635 232.043 cv
116.028 233.152 117.327 233.28 116.46 234.27 cv
117.264 234.577 118.226 234.751 118.912 235.159 cv
120.017 234.512 120.835 233.621 121.366 232.486 cv
121.752 232.729 121.121 233.358 121.014 233.675 cv
121.895 233.478 122.472 233.026 122.592 232.189 cv
124.175 231.007 125.207 229.357 126.447 227.883 cv
126.186 226.57 125.261 225.82 125.046 224.469 cv
124.522 224.613 123.14 225.82 122.242 224.616 cv
122.259 223.848 123.146 224.043 123.819 224.173 cv
123.343 217.414 127.203 212.111 131.353 208.728 cv
132.34 207.925 133.982 206.728 135.383 207.391 cv
134.544 208.371 133.372 208.724 132.405 209.471 cv
129.745 211.525 127.59 214.372 125.922 217.49 cv
126.609 219.677 127.002 222.117 127.85 224.173 cv
128.15 221.539 126.797 219.024 126.624 216.302 cv
127.846 217.837 127.474 220.729 128.549 222.39 cv
128.748 220.857 128.543 217.94 128.549 215.855 cv
128.553 215.333 127.918 214.455 128.901 214.372 cv
128.911 217.257 129.053 219.473 129.075 222.093 cv
130.574 220.522 132.141 218.6 134.332 216.302 cv
135.684 214.886 138.562 211.361 140.464 211.4 cv
142.756 211.448 143.07 214.248 144.669 215.261 cv
144.564 216.013 144.019 216.394 142.919 216.302 cv
142.401 217.051 142.246 218.107 141.866 218.974 cv
143.757 218.991 144.758 216.971 145.196 215.261 cv
145.875 215.707 144.699 216.837 144.669 217.638 cv
145.456 217.509 146.929 216.683 147.998 216.302 cv
147.889 214.876 146.231 213.292 147.124 211.995 cv
148.574 212.299 148.137 214.204 148.875 215.114 cv
148.948 215.388 149.709 214.612 150.103 215.114 cv
151.49 218.303 150.867 223.011 149.226 225.657 cv
150.721 225.833 151.247 223.904 151.678 222.686 cv
152.181 222.657 152.635 222.668 152.556 223.132 cv
155.906 220.038 152.82 215.983 152.38 211.995 cv
149.545 214.535 154.123 218.782 153.08 221.646 cv
151.936 221.062 151.739 219.546 151.328 218.379 cv
150.898 217.162 150.664 215.834 150.277 214.669 cv
150.014 214.409 149.521 214.819 149.226 214.372 cv
149.581 212.297 151.857 211.849 152.203 209.767 cv
153.497 209.142 154.001 207.708 154.656 206.353 cv
155.239 205.149 155.584 203.407 156.935 203.234 cv
157.865 203.302 157.179 204.127 157.285 204.571 cv
157.65 206.089 158.874 207.38 159.037 209.323 cv
159.375 213.329 158.399 217.718 155.533 219.569 cv
154.947 222.783 152.575 224.487 151.152 226.993 cv
148.352 227.787 146.521 229.403 143.97 230.408 cv
147.983 228.583 153.155 226.759 156.233 223.577 cv
156.778 223.016 156.775 222.067 157.984 222.093 cv
158.516 222.984 157.558 223.773 156.935 224.173 cv
157.498 225.203 156.506 226.686 157.111 227.735 cv
156.991 226.496 157.464 224.607 158.161 223.577 cv
158.669 224.017 157.868 224.609 157.812 225.063 cv
158.747 224.718 158.334 223.228 159.037 222.686 cv
159.936 223.26 161.06 222.096 162.193 221.945 cv
160.92 220.857 159.329 222.457 158.337 221.794 cv
158.641 220.522 161.027 220.387 162.366 219.42 cv
163.031 218.94 163.221 218.29 163.944 217.934 cv
164.139 216.318 165.1 214.895 164.118 213.48 cv
164.298 213.335 164.474 213.186 164.645 213.034 cv
164.338 208.847 166.081 205.292 167.098 201.749 cv
167.369 201.535 167.78 201.437 168.148 201.303 cv
169.666 198.472 169.99 192.644 168.148 189.869 cv
168.541 189.044 167.764 188.475 168.148 187.791 cv
171.848 188.125 174.347 190.754 175.509 193.731 cv
176.757 192.242 178.016 190.707 179.363 189.276 cv
180.648 187.913 181.761 186.172 183.743 185.416 cv
184.178 186.429 182.861 187.211 182.166 187.939 cv
181.466 188.673 180.819 189.498 180.063 190.315 cv
178.459 192.054 175.599 194.128 176.56 196.552 cv
176.711 196.991 176.822 196.208 177.259 196.403 cv
176.671 197.844 176.872 200.406 177.085 202.64 cv
178.65 198.571 180.226 194.511 182.166 190.761 cv
182.509 192.108 181.258 193.584 180.589 195.067 cv
179.895 196.608 179.444 198.3 178.662 199.67 cv
180.029 198.8 181.468 196.704 183.218 195.662 cv
183.345 192.979 183.021 190.68 183.043 188.088 cv
183.536 187.962 183.761 187.609 184.443 187.643 cv
186.947 193.333 185.76 201.852 182.517 206.056 cv
187.739 201.721 190.855 195.599 194.782 190.167 cv
194.657 189.418 195.021 189.084 195.132 188.534 cv
195.615 188.25 196.335 188.168 196.534 187.643 cv
196.523 186.712 195.688 186.481 195.482 185.712 cv
193.167 185.655 191.294 184.6 189.524 183.336 cv
187.224 181.691 185.216 180.56 183.393 178.437 cv
180.508 175.075 176.17 170.758 177.259 165.666 cv
180.035 165.074 181.862 166.498 183.743 167.151 cv
184.658 165.587 184.255 163.592 184.619 161.509 cv
184.978 159.468 185.483 157.153 186.897 156.311 cv
187.647 156.318 187.365 157.203 187.423 157.796 cv
190.403 160.962 194.327 163.329 194.958 168.488 cv
192.343 166.249 191.825 162.233 188.474 160.618 cv
188.995 164.436 191.83 167.572 192.681 171.605 cv
193.02 172.061 193.553 172.351 193.906 172.794 cv
193.893 171.651 193.468 170.285 193.906 169.23 cv
194.951 169.232 194.764 169.162 195.832 168.784 cv
196.975 173.312 197.681 178.206 197.936 183.485 cv
199.708 178.921 202.381 173.462 202.841 167.745 cv
203.24 162.792 203.064 158.542 202.317 153.936 cv
197.703 152.251 191.974 151.514 186.897 150.224 cv
186.795 149.646 186.311 149.093 186.897 148.738 cv
187.963 149.146 189.621 149.687 190.927 149.036 cv
187.936 147.264 184.912 145.52 181.641 143.986 cv
182.521 145.148 183.165 146.454 184.27 147.402 cv
184.834 147.887 186.112 148.066 186.021 149.036 cv
183.657 149.016 182.313 146.964 181.115 145.471 cv
179.866 143.918 178.499 142.208 177.61 140.571 cv
180.304 140.572 183.646 141.292 186.021 142.056 cv
184.919 139.095 182.33 135.925 183.043 132.404 cv
185.283 132.783 187.283 134.047 189.351 135.078 cv
191.387 136.091 193.57 137.122 195.308 138.344 cv
195.223 139.602 194.808 139.927 195.658 140.719 cv
195.869 140.654 195.613 140.081 196.185 139.978 cv
198.363 140.853 199.747 142.402 200.74 144.284 cv
199.979 139.681 196.57 136.036 194.958 131.662 cv
190.986 131.661 188.604 130.316 186.021 129.138 cv
185.6 128.779 185.558 129.499 184.795 129.285 cv
179.406 127.417 176.642 123.327 173.932 119.189 cv
173.813 118.597 173.487 118.178 173.582 117.408 cv
173.374 116.988 171.984 117.574 172.004 116.962 cv
171.916 116.342 172.447 116.249 173.056 116.22 cv
172.388 114.498 170.958 112.039 171.653 110.13 cv
172.652 110.384 172.419 110.958 173.582 110.873 cv
173.701 113.196 175.019 114.507 176.209 115.922 cv
177.925 115.593 179.756 115.365 181.641 115.18 cv
180.794 113.72 179.327 112.784 178.312 111.467 cv
177.029 111.156 174.951 111.455 173.932 111.318 cv
173.682 109.507 177.142 110.614 178.138 110.279 cv
181.027 111.294 183.842 112.373 186.371 113.694 cv
186.402 112.971 185.071 112.125 185.145 110.873 cv
182.812 109.337 179.771 108.398 177.259 107.012 cv
176.608 106.855 176.982 107.57 176.385 107.458 cv
172.029 104.449 166.411 100.525 164.118 95.4302 cv
163.771 94.6572 163.604 93.3794 163.944 92.1626 cv
163.942 91.6196 162.916 91.9463 163.066 91.2729 cv
164.181 89.98 167.491 90.5786 169.025 90.8276 cv
173.241 91.5103 177.607 93.9126 181.115 94.9849 cv
181.166 92.749 180.63 90.5239 181.291 88.5991 cv
182.923 88.5479 183.638 90.165 184.443 91.2729 cv
187.432 95.3794 189.398 101.343 189.524 107.904 cv
193.841 105.857 196.593 111.754 193.028 113.249 cv
193.032 112.954 193.508 113.06 193.381 112.655 cv
192.835 112.899 191.436 113.765 190.225 113.547 cv
190.739 114.191 191.876 113.899 192.681 113.694 cv
193.529 115.053 194.208 116.557 194.782 118.149 cv
194.336 114.84 196.134 112.118 196.71 109.537 cv
196.942 108.491 196.658 107.557 197.236 106.419 cv
197.568 105.76 198.101 105.065 198.462 104.34 cv
198.773 103.714 199.018 102.659 199.863 102.706 cv
200.928 102.96 199.873 104.101 199.688 104.637 cv
202.026 106.021 202.856 108.683 203.718 111.318 cv
204.923 110.411 204.571 108.182 205.295 106.865 cv
207.86 107.702 209.239 112.563 209.501 116.367 cv
209.586 117.608 209.758 119.836 209.501 120.971 cv
209.396 121.428 209.021 121.563 208.799 122.01 cv
208.373 122.87 208.287 123.99 207.923 124.979 cv
207.067 127.314 205.33 130.421 204.77 132.999 cv
203.521 133.077 203.419 134.13 202.841 134.78 cv
204.006 137.606 205.513 140.138 205.995 143.541 cv
206.221 135.516 210.671 131.07 213.706 125.425 cv
215.076 125.151 214.662 123.366 216.333 123.347 cv
216.819 124.479 215.397 125.203 215.107 126.168 cv
215.971 128.576 217.521 131.912 216.685 134.78 cv
214.919 133.356 215.793 129.694 214.581 127.801 cv
213.278 128.627 213.122 130.426 212.305 131.662 cv
213.02 133.629 213.106 136.129 213.531 138.344 cv
214.211 137.437 214.68 136.349 215.107 135.226 cv
215.806 136.692 213.301 137.926 213.706 140.126 cv
212.771 139.594 212.23 141.398 212.129 142.502 cv
213.478 141.171 215.698 139.292 215.983 136.563 cv
217.705 135.144 219.454 133.503 221.238 131.959 cv
221.874 131.41 222.643 130.346 223.691 130.622 cv
224.013 131.616 222.461 132.229 221.94 132.999 cv
220.66 136.021 218.582 138.368 217.035 141.165 cv
218.186 140.505 219.495 138.698 220.715 137.602 cv
220.364 136.177 221.743 135.278 222.816 135.968 cv
220.566 141.089 215.035 143.431 212.654 148.44 cv
cp
ef
26.2222 165.815 mo
25.1787 163.626 23.9395 160.034 23.5942 158.242 cv
24.5303 160.541 26.605 163.379 26.2222 165.815 cv
cp
ef
24.8203 163.885 mo
25.2632 164.4 25.4995 165.091 25.6963 165.815 cv
25.0098 165.506 25.1274 164.515 24.8203 163.885 cv
cp
ef
211.603 225.508 mo
213.204 225.551 216.039 224.586 216.859 225.807 cv
216.793 226.293 215.929 226.104 215.983 226.696 cv
217.507 226.989 218.598 227.648 219.839 228.18 cv
219.708 227.203 218.857 226.835 218.61 225.954 cv
218.429 225.254 219.479 225.599 219.313 224.915 cv
216.861 224.618 213.217 224.599 211.603 225.508 cv
cp
208.975 220.162 mo
207.695 221.999 203.478 221.345 202.317 223.281 cv
204.189 223.969 207.042 223.83 208.449 224.915 cv
211.435 222.833 219.551 222.381 222.992 224.469 cv
224.543 224.49 226.23 225.021 225.794 226.251 cv
224.485 225.774 222.907 225.529 221.591 225.063 cv
221.813 226.095 222.692 229.33 221.765 230.854 cv
220.157 229.453 216.892 227.798 213.531 226.993 cv
211.731 226.924 210.096 227.269 208.625 227.735 cv
207.733 228.018 206.16 228.377 206.348 229.368 cv
206.626 229.785 207.136 229.162 207.75 229.368 cv
207.602 229.79 206.672 229.545 206.348 229.813 cv
206.282 230.906 207.143 231.219 207.223 232.189 cv
205.735 232.679 205.433 231.092 205.119 230.112 cv
202.98 230.478 201.263 231.197 199.164 231.597 cv
200.484 230.44 202.927 230.232 205.119 229.813 cv
205.173 227.336 206.845 226.226 208.272 224.915 cv
205.244 225.273 201.325 223.236 200.214 225.508 cv
201.426 226.064 203.797 225.642 204.945 226.251 cv
204.187 227.501 201.178 226.542 199.514 226.696 cv
198.938 227 198.843 227.714 198.462 228.18 cv
199.417 228.46 200.745 228.423 201.792 228.625 cv
201.554 229.581 199.372 229.456 198.286 229.221 cv
197.86 231.275 197.819 234.261 199.863 234.714 cv
201.755 234.091 203.455 233.302 205.472 232.783 cv
204.252 233.877 202.259 234.317 200.391 234.863 cv
200.688 236.501 203.782 237.028 204.595 238.725 cv
202.255 239.202 200.606 236.538 198.988 235.309 cv
198.541 234.97 197.916 234.968 197.586 234.564 cv
195.988 232.632 196.923 228.735 197.936 226.696 cv
197.745 226.364 197.075 226.436 196.884 226.102 cv
199.635 223.134 203.34 220.191 208.975 220.162 cv
cp
ef
121.366 231.3 mo
120.486 231.601 120.292 232.386 120.313 233.082 cv
119.642 233.156 120.199 232.189 119.614 232.189 cv
120.644 230.902 119.266 227.959 120.138 226.846 cv
120.224 228.208 120.399 229.494 120.313 231.002 cv
121.723 230.653 122.998 228.139 124.696 228.032 cv
123.435 229.538 121.82 230.742 121.014 232.636 cv
120.49 232.229 121.266 231.668 121.366 231.3 cv
cp
ef
44.6196 253.722 mo
44.9282 253.637 45.6504 253.899 45.6714 253.572 cv
45.4478 253.368 44.6235 253.315 44.6196 253.722 cv
cp
41.4658 253.127 mo
41.9927 253.127 42.5176 253.127 43.0444 253.127 cv
43.5488 252.88 42.1484 253.008 41.8154 252.979 cv
40.0576 252.836 37.7622 252.357 36.21 252.533 cv
37.5659 253.066 39.813 252.846 41.4658 253.127 cv
cp
41.9927 252.533 mo
40.6055 251.036 37.0249 250.604 34.2837 250.752 cv
35.3882 252.487 39.6255 252.359 41.9927 252.533 cv
cp
47.248 251.049 mo
45.3467 250.828 43.8247 250.287 41.8154 250.157 cv
42.8589 251.008 45.5977 251.209 47.248 251.049 cv
cp
43.0444 249.563 mo
45.5996 249.821 49.2622 251.184 51.4536 250.307 cv
48.6377 249.921 46.1992 249.216 43.2173 248.969 cv
43.2588 249.249 43.0205 249.298 43.0444 249.563 cv
cp
43.5693 248.077 mo
43.4326 248.111 43.3652 248.201 43.3945 248.376 cv
43.3945 248.475 43.3945 248.574 43.3945 248.672 cv
46.3247 248.719 49.4272 250.184 51.8047 249.713 cv
50.1689 248.969 45.9932 248.484 43.5693 248.077 cv
cp
53.9063 248.077 mo
54.52 247.867 55.3604 246.392 54.6074 246.001 cv
54.3809 246.641 53.5679 247.439 53.9063 248.077 cv
cp
43.5693 247.78 mo
46.6499 248.042 49.0254 248.901 52.1548 249.118 cv
52.1367 248.656 52.3687 248.407 52.5054 248.077 cv
49.9551 247.47 46.8877 247.296 44.269 246.741 cv
45.5303 246.68 47.2007 246.791 48.8252 247.038 cv
50.209 247.248 51.9556 248.097 52.6807 247.335 cv
50.2744 246.454 46.9131 246.383 44.0942 245.85 cv
44.0322 246.591 43.603 247.019 43.5693 247.78 cv
cp
55.4844 242.732 mo
55.5215 243.211 55.1748 243.361 55.3081 243.921 cv
55.0566 244.005 54.8813 244.152 54.7827 244.367 cv
55.1279 244.322 55.1309 244.565 55.3081 244.664 cv
55.0459 243.728 56.6533 241.744 55.4844 242.732 cv
cp
56.5342 241.694 mo
57.4775 241.687 57.5713 242.399 58.2881 242.586 cv
58.5811 241.777 58.5664 241.135 59.3398 240.506 cv
57.9297 240.5 57.1494 241.026 56.5342 241.694 cv
cp
34.6333 234.27 mo
34.7432 235.018 36.6948 234.204 37.0864 234.714 cv
36.4355 234.955 35.3628 234.836 34.4575 234.863 cv
34.4561 235.506 34.0518 235.805 34.1079 236.495 cv
34.4712 236.586 35.2588 236.313 35.3335 236.645 cv
35.0425 236.893 34.3047 236.764 33.7578 236.794 cv
33.7495 237.38 33.3706 237.655 33.2314 238.129 cv
33.8682 238.137 34.6147 238.046 34.8086 238.426 cv
34.2246 238.426 33.6406 238.426 33.0557 238.426 cv
32.9473 239.324 32.5444 239.973 32.1797 240.655 cv
31.8887 240.655 31.5957 240.655 31.3037 240.655 cv
30.9336 242.447 28.8867 244.344 30.9536 245.702 cv
32.6816 245.771 34.5767 245.701 35.5093 246.445 cv
34.0747 246.223 32.5288 246.099 31.1279 245.85 cv
31.5767 247.005 32.3423 247.893 32.8809 248.969 cv
34.271 249.177 36.1616 248.962 37.0864 249.563 cv
35.6865 249.708 34.2212 249.123 33.2314 249.415 cv
33.8345 250.885 37.5635 250.494 39.189 250.603 cv
37.1147 249.188 34.9771 247.051 35.8594 243.623 cv
35.1909 243.745 35.1816 243.309 34.9834 243.031 cv
34.9351 238.831 36.6235 236.104 39.0127 233.972 cv
39.0518 233.785 39.2861 233.668 38.8394 233.675 cv
37.8105 234.23 35.2646 233.813 34.6333 234.27 cv
cp
34.8086 233.082 mo
36.6006 232.769 39.4717 233.371 40.2412 232.189 cv
39.1792 231.975 34.2837 230.974 34.8086 233.082 cv
cp
34.8086 230.705 mo
36.1523 231.05 38.2529 230.757 39.8892 230.854 cv
39.7837 230.497 40.1104 229.776 39.7139 229.666 cv
38.582 230.438 35.3438 229.427 34.8086 230.705 cv
cp
39.8892 229.073 mo
39.2163 226.759 35.8711 225.961 32.356 226.547 cv
32.7798 227.34 33.4224 228.004 34.2837 227.291 cv
34.8867 228.412 38.5273 226.959 38.8394 228.329 cv
37.6279 229.004 35.9746 228.384 34.8086 229.073 cv
36.0098 229.215 38.8823 228.703 39.8892 229.073 cv
cp
22.1929 235.159 mo
20.7627 233.356 22.7241 231.098 23.4185 229.666 cv
22.8477 228.519 21.3633 228.141 20.791 226.993 cv
22.061 227.501 22.646 228.588 23.77 229.221 cv
24.6909 228.371 23.2944 227.366 23.2437 226.399 cv
23.9604 226.683 24.1177 227.44 24.2949 228.18 cv
24.7783 228.481 25.187 227.729 25.5215 227.438 cv
25.2842 226.908 23.7349 225.72 24.1196 225.657 cv
24.7046 225.562 25.1348 226.723 25.8721 227.143 cv
28.6743 225.067 34.4038 223.657 39.189 225.063 cv
39.9888 226.583 41.8315 228.229 41.6431 230.26 cv
41.5522 231.22 40.3208 232.033 41.4658 232.783 cv
40.9766 234.341 38.3022 235.36 37.6113 237.237 cv
37.2729 238.163 37.498 239.639 37.4375 240.803 cv
37.353 242.358 37.0063 243.849 37.2612 244.96 cv
37.7451 247.066 40.4453 247.758 40.9409 249.268 cv
41.3306 249.003 41.5332 248.582 42.1675 248.523 cv
42.9224 244.065 45.8418 241.239 48.8252 238.426 cv
49.7417 237.561 50.7163 236.239 52.3306 236.198 cv
52.5439 237.273 51.127 237.786 50.4033 238.426 cv
48.1357 240.428 45.876 242.857 44.269 245.555 cv
47.1323 246.001 50.1299 246.329 52.8555 246.891 cv
53.0347 246.695 53.0273 246.344 53.2065 246.148 cv
51.5195 245.351 48.5195 245.665 46.3735 245.257 cv
48.5703 244.882 51.2441 245.383 53.2065 245.702 cv
54 245.534 53.7051 244.441 54.6074 244.367 cv
54.4282 244.024 54.0044 243.888 54.0806 243.324 cv
52.2314 243.213 50.0288 243.397 48.8252 242.732 cv
50.7266 242.754 52.2593 243.09 54.0806 243.177 cv
54.9106 241.051 57.2593 238.824 60.5659 239.764 cv
61.2627 238.95 62.5054 237.866 63.7192 237.98 cv
63.7056 239.447 62.4746 240.706 61.6177 241.99 cv
60.77 243.255 59.9121 244.548 58.9878 245.702 cv
59.0669 246.042 60.0483 245.14 60.3896 245.702 cv
59.9072 247.559 57.6328 247.086 56.3604 248.077 cv
55.5469 248.713 55.1362 249.769 54.4326 250.455 cv
52.5669 252.274 49.9189 254.562 46.1987 255.06 cv
43.5117 255.416 40.4536 254.175 38.1372 254.314 cv
36.2188 254.433 35.7739 254.411 34.1079 253.572 cv
33.2041 253.118 32.2417 252.816 31.6538 252.386 cv
29.334 250.68 27.5737 246.612 28.8516 243.177 cv
28.9609 242.884 29.4048 242.721 29.5518 242.437 cv
30.7227 240.148 31.6382 235.829 32.356 232.783 cv
32.9854 230.108 33.959 228.572 31.1279 227.291 cv
29.6343 227.555 28.5625 227.822 27.6245 228.774 cv
26.0581 230.366 24.1582 233.282 23.2437 235.309 cv
22.624 235.426 22.1245 235.646 21.8418 236.05 cv
19.603 235.17 18.1865 232.82 18.688 230.112 cv
16.165 230.488 14.313 229.087 14.1328 226.993 cv
13.6499 226.609 12.4155 226.865 12.3809 226.102 cv
13.2725 225.34 15.1973 225.931 16.4092 225.807 cv
19.0298 225.533 21.0093 223.956 23.0688 223.43 cv
22.957 224.527 21.355 225.254 20.0903 225.807 cv
18.7915 226.369 17.082 226.848 15.3594 226.846 cv
15.2773 228.744 17.2188 228.931 18.5132 229.666 cv
18.9253 229.618 18.6167 228.961 19.2134 229.073 cv
20.3872 229.378 19.6758 230.54 19.7402 231.3 cv
19.8916 233.1 20.8804 234.387 22.1929 235.159 cv
cp
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Stephanie Mason) ()%%Title: (CrownLeaves BW.eps)%%CreationDate: 8/21/13 11:58 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6kuo#fehDDf_"V4@LY8hU+CQrFJ1r;Q!eH"AE.@pHZ-D^nmuQqk^GSP>\Z/mUqWr[WF0`E;Xcf!GV):oH<%)Rjhcb5bXo#6o%^K:#qD<<_3cC9]T2cVA0.-s'FDK_dtMQ1RI=L%)BRL6IiU?T2?`%9WFj[-RoqtBERg$0T%g:,=E\'f_CGIjjNXlm^k;m&sR26Z>,%ccpdJo?uja<McX%TrMC:]feR:*PT5B1cqa`kQQn;CMJ=PD;7'OoCST3G?_Q&Dg0H9!8>*?I=]FEHsg=1pQK3m#D7b;<>\Qoi*n?!%(ap.!c!Pp;hEQ11SOW(Qh>4i.]'Qe2?Q,I_BWf.#[]ALA<T@_!RP1kjNF%h<Tt=?3="O/Ke:>Zg;q8_afqt&o?%\dFW+l8(f_j?9%rh+9.f]olV%m81ua'6P[\^NWcr#_<3C)DiFTD[dAgN0]Bg3W,Ekci.iV?cM#jteQNf=q7>\/-q$!<+?IpsSB]2g_dEmH6EuqeFuM%4hq]s2u[]<(jjoOd;-)]V0tfXL35Cr=Dq7mR[07@M\[F5f1f@=eY"oi-\e*l295#eQ(Qh4JjWqO(Kfq=0s')+kOJPV[4910?Z1-0%n,/I#&J*lb-;npes**T)H,ME4?E`#p1B?F7*;GU0V0Ht'?$pntH>>AZ!HT_%4q?:td;/h`[&T*l",_5&<Ur5rJ*4<?mNI]An5%[+%e$AJlFn)e9OeoXLIrud(l8h,ZFadMt@r#sn=]ikQn<[]p/^)"7Q;t+]R')?i>Sl_9n./a80%P&KXG,R$'5LSt=K>?9QB_e@WDp)s%]oGnSFj%YQof>:?f=;?OR)dD1i?%eD[Zo*\4]fEpXG(`4:TT7kOu)343$\@>3]JA^`-G!LE*JhGIc<#N&UkoL`Y1_Z);usg)uj@r%c3aAYCi]PX$g359=JoKG1:]S.ElKhDOg0S3glc<qUZ\oRfXQ,F\Qg@^KE#@3S0*2(,[Nd.2*^+9_nT:]k9j>uZ,1?tIe\c7E-Ann%prOc$')][O3'[?%<FdRf]Q4&)USIo1\YL=XAir8s3n@cQ8\FQ:H1X(:*Z+RoOQCe.%J^P#i9V_#ip<m,c^LKcr9tA80n&*[(an)S%5Ht^D/m".!/U<++a#u,!9,a,',,l#AcBQ2Q+Se@,.H?sha&qMR)/hKT\KZ'34EdePHY;QtStGU=*]\9g;_tU;j+\`,ko\BXcgBL7%=-25&F-ab.:]!iAP4!bp_q%!\8P]"]=^p&k#98lE,e!EO+ic(Q/,Nnfgeq,eqM0Q'.]VL#VXY?"0E4BcLB%1dr%D,*9ePu9nitmk%hu7!^k;`CoEFdsepfB*>'E9`cgY1ZEra5Yk.o`QSirA+i[2T)=s7/CnqoA7If+(#j?2:u-`ID<FRSbf`H;uoios/(Bpg;^R<tV3N%e^Wr#g#9\BAmuX*X5e+-PTuG3=K:%^Jn^ZZGOR8oJgW$1WG+4@00<b8"JOdQkduk'C:7fXRp)@P:p4A3]unY=)V-%`3qeS^;\'5e%W)G9HQaQ%FL<k,2fE-AAWSGF;F$4=e`^uqg[;hE:$VTc-a+1Es#Yeb;lX5,^(\[=r<I$bf)]h$5BiO1f9T<74-7-[n\?SODO^]Fi%*]7F<q_e%%QiO"A\1qYK(je@\ClL,o[QHW(_bYr:=S&07*H&tV\=H@S"R(`]#d">k#NtIk_6J$-G\V8kJR0'OEaEhR?-Kp<$u<F:%n%)V,VA]u"MS0U=eE#n)CSD0QUSc2aA#eQq$,.7]?GW(d2_61g&QHpF_l^EjD_8nr0cmhE9+Ym9bIG?QQ2QpfVIY+5knrZGf2Qbk%p&OYV@%1R[*4^5dl&(%eijJ8W%r9:4'6R/J&h\W*\s'Kfm0FX)K)@39aF9dh-Ub56-i>TB;g5Jf[Ot3*E?l81mWa_!j^CJ\mbi>O%;\XlS7Te-</n8+Nr@jj004g_th=9(1c8GON9OA(1m]@i-2rRI)WJjo<nUTrM^#H,=2L\Ah:L2DMU`\9N7b#;f/PGVt?o`g+**ree%?!N[QfF*aFdONX1NSAIkdfAtB8^kJD0o*oVLL=),/UY5$W9%i?>u4UKZs>In;6S"7O^'Eu@bkHQa#&>Ec$8A*0s/X0Z%O6u)Qs9:%Br4q'f&3%CZ]j/jFUI*M(#p%ai6N)#]S>(Y\^?d0F81n'>1_iX&c^UK"*go'28S+ek<*[-;Nk!Gb#EgfG'rRb*Xg+`.K*t'"Ed@0%OY`1@LKl#OZ7`@$P27aHGcf/L0@AnX_8pE)#!tW_NPLpH'Mm.Dp#dauXbQFZH6G>QGdA(SW9hW9/e@.Q`gS,B.qH1mIi_luEgk*+%Pu<n!J_-A?R/+P<%/f;bZIFY8G'p:1'^:s0e6+Y.`#-f4q+t62]J<S526``O9lji`3$5ct(qu;F\gP!Ko.FO4``=U:=tmJ/50ZV)%ku.eHS49<#j#*[gOa*,Niq4O4kfdm+Dr89:\reaME!ab*YZQB0*V2gtFR[GC_!L?L\pOi.34@`m_;>:h?o'\]K5"9:.WraUOL(>b%jE`UUQ@WS)#cYaC!.>M[^eu*<17!fJ0o,F`+XL(&AjKPS\&9E4.%a\!VKBAggm90pTqjHGL,4uHGo#%9b53lAUg+Y0.eC;dAa30:%Oj+$=VRioh:S$f+V30"JXT01?g'CT;8M1PmfSN^&2VZB/cjHJX(6'=5"t>Wc8u4-k22CQs`Z/Hbm$5A4=-X\$L<dK*Q9fB'f!4@?%&+m6skt@2&9Pa=$<fp0Kl4YJLp4?qbTT/?"6??:r+G\@%#tnW7>-!PRE6=cb@sZ\Jgc&-<d$m?oj/?rK/CBm>WKnN^Y`4aiV;>cT%5Yk,B&T*7F9\)T#9pOaJ=prcP[(h;`=k+5;I:\I$(p`e4(lMR'H;NBa;#bSG<DXO9&'gJX#Dk%+Vc4bYKO%)?;s>rck,bRe4E""*%f$PE/l!CMCYE7)hC`BUl-?V15iuWKidT_f<6PN3MPh$/%h"Lp3l7h,DCs18P(,YCQRZadXR]X@WF'kQBYBt_UJB&QF\R+hb938QB%,t.!3YY=b-*i]+OH(3TiDuBq.D,8/BRK1ur2:"apQg7OBq>AAn._sW2#:VM494Ub^[_%e';WmkgaRIB5UnXO46fW5)^1V.?T$Jg4%&\5>Z#3::"VE[/>B:bf]N"Ul02cQ!?cXE4k\^@S%F]&o[*Sk1#6X#p0\YY"q)S"(aTIup2IHOh\-Aho9;Dko9=;*DrYo`W#]!Req%&pf"tS6t)\qcm;0EX$!kD@f<YT"Yr_crl,2)-iIKU9rLI-Be@DJ;;3h6<a!R&<&kea[#/;Xn&Kt-,.">k@!MlA%L`KVC]^n;a"&2%5]rpIOtd@_XWdYN-"@OMYP]4;7o?(Ia=FISk]B&O+al'oK7%H(BRdC5*T+WNnah'"/a[o*1k%rtJ[?'obaKN<oIPYQ=q+q6Xusj'%[OsD_bN,T;8k$d.D"nu%k?I[/e?emHVq$&M8LcbeRi#_)Pe7"RAfQ0SV_0QCC$#1tVN:jOeE79]]^N$ZQUmYD0e@5,_';!?<CrgS%Hkt-r^tW>E6B6b=Urs?@GcZB4(>CEPQR/H7aX&6)Mj/2=pp8o087d8"JtjN+HR%s1G..%G1iF.GI<"&YpJrTTZ2H;W4OdWa02[QV%'W!?oc'R@iWR.*2EI(eg'bj%kU*_m$`qBOHep,DPJHb]Hqkcc>2HqWYJs+Q5WCPSGY$<!E@&+rP'+ktR#_O5jORf"$3uEC10di:S%14mZ];O0$V+Vjqj%nD&DA<V,]gb#ToPNV?/T[4<gBGi=aE_Xt+O%oB89W%Eej5XFf:G3b9U0H-:-%/s1l`tUt4Nj+JcV5Gs#:)^.%+u:'kPWd-6q_fC5U+>mY8$&O4Or=^@aM*5t^8:NLr,IcMCJsjb,Wt4STQMo8@ZTN%*-7p2kPKRg-Q%ciH^F\V?<:F8PFR1O6$+Ql%KQYVG2I/e:A5#K_Wao@6qWKmTee`-QEf>N/_q,7$NMJ>LRV*;E9]pkX9h=rg+#WPiEn8ku50]j5gAsn\)>WsW_iG9_eM7<M3'5Gj%g;1Kd-=[]+6^!n/0e)-7d\`.MWoR'TIXgNJ>"Dmg`WH>aemsFBiA$*Aetl@>WC>G^Q<Y<d`Tj%teB9I8%TPtS%7NlReuc.thQ5Cn%Q#uFaN7gZC)ojNTXX\""QN\1\I2j](?l!'jbdWIX.jj&(+.`!Ta/JGV]f27M6*6/E4)*eK*@mmTo`,sLj(/]6>+"<O>0W,#dgU*N%M[IlQYE)`W=rYmWP?bt?)!'L\X9NN7`<gi,1>X4S#cp^$phhrR9#:(&X%EmiqK>/pZQ/Y;hq+4C;Xgf(Bk=RcPW#=r"NgGBk<02E%/p.3h?C#RXf=,ZUL]:/!PNpW$N;*^.[&'9>%OG<0U`JmEfXL3?qI@27Uf4bTMANP2\r7=2S(R>ZI&Ll!HEp31)o*-=Ze<GnQB>p#%s1t"@<l.'i-..@3nMMt3.V'W2M*:U=;g7;?U`[!SI.49_7m(<%=R\R-:liUAj".-EUh:j]9#g)mSVghT63#Bf<>%J-e!oD[WC,?c%nh!Cu>614!PIcF\Ia>Y#GY;EO^$D,j4/I-8[(&5(>EbhDd@h\b8dq%tSB:9&PHl".PWDn2A0G)L6.%`sR-0[s#VYDbGYo#,g-C<l%ANj_JjR7(4"JP-sd`Q'XdC7#ic74bFp;U9K54q#Meupsqon]$HP'36\4e&,4`u0O7GGNd0;Va('26E7[FYDbbI]ObbQU1(+XCo65%pq&+GblMRB;0G5M[\r<RP)lFmkf5*!O&D8MRA*>YbMRBVZ#ZXrkD'XG)0tju&nQGc`/e1A9di*;p6RPOO"'nUTsXZMY9@E10%7?N%Z1K4<QqfWPbHmiro;R;0`-H=7?9HDnnTl)+009O/A*^('ja+8g.(do;ni9C`9;E=>FR7*eW==7T9k)l7)>,;eN/+]O,NY@1[r<UR%9+$f.76\a`4ick?n`e*D=:Y2aJW(Ci4#f:=&Ec1FT8_Cd_'kP_j2L^&F,=YR=<mB=E.>^U4ooHFOhM_!&jH`gm;UT<928*6R_Kpk%[!5U90,Z)+GBu*da0E!:A2M_qd`U2c93J]c=]UW<?jA:&?o1a+7f"Nh&`s]T!G"TQHh%&a.51TiP)L@`Au?$k/\pJ^Y9?%h[a(8K%Es8BkA?<u08E1,'bfZ69>CM6#`e4%k&'I/9D*8b9PHFc]3Q\7LAC1)A#u]H7Oa?`)ggTorj%:D\pYIob,p]',j%=cR_q/kk7>UcO%E`^Z_(8Q^9rAPl9%;ADVg<=&?Z'JZkDQ8:,4<A+<6cT+YF:m518d?g47<BXdnaLeHokeQVH`knH\Ktg;oItm)"\$&;'G3FZXN+<)%27%4W]?>fc!ZmVcU+m.S*g<o=HKfmS;//fC]bVu\/@Km&W/)OLn93+-TMG+)^E?VREm=@U"4k.<A@3l;XX7lq)*aJ%1&5+@Zn\?Z%$YW9mGjYlfj8$>A'sR'!A!BZ60RD9)i3*Gkf\sMPal>Q<Zc;W[)XfODL9S0MgQ:"'7:#5_Zgdm@I6nR7AW-1-HnH'*RMUUBZGo-)%+?als;cta4*dH$Q'c=*RDHmU,A.)8#o[eNFoR.W,Fl`nj*k/V2m7KR).hq&$IO7i>8\)hZ3(tRr%QfX$Q9,SM)S5R8pp>_#>>f*+%T-(%0C',=aApQ$jd_^`:D`)ok(AP(RI)_4>GW&QmI6i`:f)67i,'I\B;jDJQ.-"mg"0%?*1k"hZq&`,N'I,ai\I.;/Q1(&a>_%=;%-u:T3+<riY-bQ3'[A+O^VGYO-&]aBg7.tMO+!G0Q(K6GX4?dZh.e)d?+k).;mV=#-cP0_]0Wq69Q.EA[&J[#Q?`lsqUcI!/eTc(R%5Ai,k1q?[43PllCYHqd[_ma<tglY7BfT6%`B[]$Io;WVGF+Y+Yo6r:K-`K1>i1u;'=JXIK'Z'>gYfe<<DtpW1I8XFUHMSFd3R[I0%G,]+_HgqSk[SZ_k/6dY)m@UMCQD&\4pH2b"hiO.jZoFl$p!+!"@112<VL]2Ob.d]O1(M+tmDk@kk93B^Q2T*"i_Fs07d`N63Nq+b%I*f?U2"-cqE`+B5'%%0,K`eh!nKQ[Ei);+'J'2,J0XZ0)^$Ba!D^A$?b0_.$>CmWm.H8<%DD#KEH8T_Bgp^#m.(sl6>$/**e1XV%%q3k&JMI_BoAXbf)/,]c\2i8u=;^h2NR3+Y[p+;Ti%^I0R,\u-*"o7f"oOETO8LHId7$4"?^JEro:6$DbOO4U'5tgXTjU$pH;3AIW%daK[-1/];d$aRbE2'_C.59=D,I[oHA<8WGhmn><L6(%r'>t-UR'a2/YE>DHj2GLL/f[cdCAU.1iQd04$1lnpgf9WrNjt5[O=b2_o%`0l$n#+&-Fi&hCTef?*-n[D-f"k*Ud1)92ddsc2lo/#hs4ZR6MhHi4ENdb=W[\<D)$WGl%L\/Nq5(7s58)'U.gZrbC=$&?J^2)U_%o3XPGI<_AK](t0pm4ID^7=kL+jR'5(/2ePV(K(:aT,X>5Sf^:/qC2FSDI%,YC3O"^k$2)*rRH:5^BVK"-&pJ]rbJ;#3Z.MZF/.:L%jJgpe]`7aC4D=eUI+WmN#,$t46[n@3ft-Kq0_o>u*g[=jGB/VPMOjZGkH4WCs3bdLHXOaP4QrN,9!SAF7j#e$TQSan"SML7.R\V5%GC':3]g1uG*oQ",1\=<"q>'Qpds-:c]T)5"k.0(W59#?]rdMCl5<j<uI!Q-a*&fpla4oe>akto\o-Fha@cQ'MlOF2_KT8:Np<+uK%T]])l)QukefmBYrbnCV\Gn#?[./HtFdUhFb%:"@6H.fmGT:=YABs6(d=,VOg=**u"+N57;cb8cTq9i^3V3t]9PtiB-?=E8rMNU3H%.7MCj<V%YHStP4YW+h`/5[_-6]=+`g(BnUa9QF05f.cfC3LSO%jNmj\+!9IbD^bH`hT-f"0>B%54"*8lSAU<Mo=J7aV;D)S^')?-%^GI[\KKlSi\2eFh2hAecf]hp#/h)u*LXaTAjjtU3k)Qp`:*coL0Y\.VK';Wl"'$1LM,f6O0``Mds$mb*TL`JmE%tC]k0FD5\g2b-%(#Z:9>Js"+o/H\55M/2:h_emc^<b.*qrP?lO&nTJFWPJXH;2aIb?21-kqrCs!AOWMJQfMnO3`$@ArGtgq9gm'`d<Rb]t]]Yn`ft`%<qlHo7]6,)q!&!TK=MVpqH)_Q:"I;SDF2#Pn0D'K,O'r3r@c,bX5.N&5g4<Hp8N>("Z*IHnio4>Rn%ehLmhai5TF/6+4;D=cS&CI%6H_S?-Ic!gA=EO.j6!n?L%#>MlMi2#?i;K2X(0\0R%eSH[r:)/qrOH8AH+YN>jXGrgd.J9/=)P@s5SJ-A,.brb5W9f[/9/rs2E^e%+(g/noAf6<G$1p"G1"hK-XZ`*Ccj)koqD2+s,_rH]UJl%&Cts*BUI^e%@Gb^*q+Cc=f*Jprkl(*04c(VX++dA`IE7no$)1WB(L54%g&1eEcN^8OeS_9Yj/1W7P@20$X2ckXb;--t2ZEsGTB+j#qlOqoUfRd"j8'k)e3?*LQY*F@#NjCCj)E$Ya3:*15@gIj5\2LO9N*l=%s5dNFhrs]Mg5XB`rYAj%Qril<?9a;mp@>Adjs?DmA%.FN9SA9tEp?OQ5IJ9-D85c7pDgK:AM=iJ%<)FTc0dsuF/.K*Frp[=i_"Lr%229o'e-sSn*jc-uS'A$W4454j<t>MTEV.h/Kn6+^6jl9JFW.CMCBKmqp2:eaj'BCrpcm#^U[ZYnE('hl)d(^]S/PRlj%cr8m/5DX%IqenoQ`o4.p)5lNc]>cS]u:X-Tro3eU91BlI\V&cf!oY\O5$jY"m7NLRWjg20*1]QSFj2]GRNR[8MUdEG`Q@@_aE_NIFgV3aE:.Y%c>2J./ja,&NUB_UU>=FE02ek@r$Xt1/JmjCos#p28<a,>3ZbbpGOsq*?JD6,ITCFZYDlU#J+rKpmCD1SL75V'@3"=N8B[Q9UC<@b%92=:ZkjqDQrhgP-[:CJG$stPcP@&1Yqmo&;`%PICL`(L:@2ECOQL<tnE9.F,)Qgamh%O_Po;YXjVu[e-<8Oal4[7*oB?a0fV@QK"%7=^R$jfLADs79a$RI:1Dob1uBk3_d#/)Uilc@5pFhZIu*I]=$Rd9r.J/_%pMc.a9n^eNk"dCP;elU[4@aUIROR[mN=pNEl;T\Je>%T0+D>2=En)q5!i!e*$h0p=m'9B-d%c?i^o*_Yfjnh.j0+nF7=e3O)Z]#h\1Gh77=Xoa`HX3c+OWO4>?Z\(^iBo8bK?H+Q`(1b&>C%?u.D*S<Cb56/5Dp$8-0a/FDWYdb;E#j/U=MV))H+XjE48<<q.4mPO>Q;8D*B1@(*ZbRVa?DR>JJM&UNgLh'u%d9mZeq:b@1<ZH)?%A0gg!4VC/,&gY%2Y..YIA9%9NZ,NgLUMCG2R?Dtk^+ijgpM1@_>8U1'^"[]<kd;3>+Y!)O;Zd\jX4tbEGNZ-X/V6CpXQOA"7SdAK%.5AEiA9bR:74E_(?iGMs<3b8+BQd9g^:ncJA;gfBm8q9ClG)(47GgFj"o-k%^-HJ;7fRjS4*SYekJ$_QU!@!G&KY;[$So":@1B=4%=3AU`dd-MlhoSj7F`(F>?94St(e=\n[]e!BrQA-EM`[.*l2^'*mfq:P"YH9-jBo#qna8EE,dDL'D`;];>$OkZicF^pk&\[I]#C./%AE))gXlb&L2dR+H!@RSS2_1`MZ\jX<dHcuYOa>i=`a,q"m%uJp/$kkoI%I9qE.-5(Lm9/,Vc1Q3qt7B\TL(SKl;Za1D&?bDdQF(O%=W4u]DDMS%Wnh?rV"s@m\\;7[j,q2_0*/m4%X`Z\hTB3MX01bn/Yio16sfcBUZA@5)MU:\ZSWc#58uY^OTrGrr7iP4'iND,n@QBs%iZ1B3lUVB>!BA#0U;"B!=k^OF+i9gTR0WD2QPhcdQIeHG@MoE8a!9HG!4(Qb03c\m'NV)HUt=u.EFR\Pdd(on/5;gGh1)h^rTZ:f%K;q(&WqG<be_j`>qfq"5oXjkFMR9`L+qBnCOX^Q+343(fHh5m:Br$P'XNG[kfIEi/V#^_EE1.LC2*D3&"u#NYo='pj@Cq/(@q3:S%T].VdSIb,5s+Hs0BJ&d5K!5m3#8lKBj)qSo+mPnk#,GiuL>2b=@_GGdjKE3^2R$l.a.>d%7EpdfH`RQJNCJA)h]["'YJ;?CX^<Ml%LT5IukHbBG*#P3UBlpp8aRouZi2;*YaACP'&fKs=`'f@65s\p*<i6mD_P>CQfc,'g\q*^kW#Zk#S<+9-nZCOKQ[]BmVXQ;ZL9I.T%m8b.;P<&>g18LC7(1:l7HXSuc[N5_,6)FY5&NWRX855?K!W'j[GnOiq2]_'IlN?2&j_t.D=$'fJFp9WIZk(h`8_PK/M+P9)0Tc$8%KG?j'AQ^hXa(bIeT_.Rq@AghA8Z_6],h;bNq8<B*n9DR*Zk:@pn/q*t9FtQF4fA&c=KD>kp^/LIQ/^P-[17F*SSf*rf?)UGN2gK6%F(L9FgldDEp0g>.^VYp*Z$h7;RcBa!QQd`;(lma;\QFopVrqq./DqnXLaq8jn`,_of@CgraX@Eq'deTQap(i=pT9B?2*6fL^hOAu%"]c.M]GBloFpp:=CUUh2NeS:l]ts!K3mBm-\90#c+022i%=j2]XL_fia)3<61B?ia&'QbNW7os%[Ip5.)hPcA%;U@;gVP(Ze-"]Q%E8=r9f>p_!7[SAJ.FJLKDOd+5W]:LT)H#3_a1F&GjVl$7Xq@Jb6)Y8jDUBN@F@MXB#>T@Xi\_pu>LYH\pZT)6puU_DQId\4c;t2_%YV?7])ab4AR@SlQ@0kKo&?n$jjtHpS%S+=sE!0te9>G._!]GfG]k3WQ#L5(UW/HD%X[/0mFk+]$Nb6XC/]O:*rI*q`kgtd?mf5ai%iL+5XX_/e7/OF3)C5:Fd/m8nim=A!@@^I!Ga>-+7gR*U=l"S\+k4<Zk?N\D8)s"F!O%R[:<EbKb#4\c1j]N_J=I1u!,U=*/+XnNX%#N8(1:p5Z'")qaRU#T9I!&>d!*K'L>TaWPr."/&f)2]m<<'s&4L_S?I83uVj"a^4uW5F^K)Nb<i9Wgif2dJYH`N5e'%?$Z@Q%pJh%-&I""IlCO5BiiDO]?3sWWshG/b##IG$q%YL:pd836b>rTm90VA^+p,a.fG+N^tP3Y1*naD.`9W9&u==t1\/!Qer%DYG$@afbb,D5%7KS^5PK$tSK=C%#j6Lcm*"Lf;muM\f\]`rB>O700E%uGYTB/[I*\>,E9)59g]Bbj7-H:]MlI*9>dpC`f].#2*V1YV@NJF*ch_aB2%VcDQ"nB(Ps&)QUk?[>r,?gdX:cHPIZ7eN*gZ0jd*QI\6(%oWl4cJ$c?C$p&F0X\:eoO2Lnn=)MIr9suQIf:fl/\S9X9J%?V=/T)`%"&15H?-H7Ak#>pNPL7pl#;E[QPHf-"F'[[DFN=5i]mT^]o!@2]^Zrt4s&@[^DH:e3:1o"BVS)hQpi1B$mB/N4+2/NVm;L!IX`O/0%WICmTI&X<7f5B-XZJ?/,kd-nI.P$FLTtc"+Bt?F#U;$*A!lk'dm<:X_pY@LLamuT41/<'4rlDZG]m$@PBKs1/mbXqmo8sQlo3LU0%!8,TOde`[e4.8.29D,8dl8m[SoB6'jppp>3XY6^5:9Q_9&$A+8GIhYk0NWIJ'Os6'0mgF&.n$uA41-.([L;VrI[HSmFO`]*^=-Tb%b*^a\(]@*M"i&g[h"&9R6Drt`Ht2T=(>l*2EN[fV`Ilf<VsAP-XtXX@?9!n5X&Aug[@5IA2,cIu.@65ZrMaVZHoq!_Kt.>th-Sd)%gV#&-a!1<DGJb&a*m`)"d&XqM4l9,75`7S/n=!Y`-%FN1*b)SdrMs,71tE-d9@0ZcmN\PM+6n]RRa4LQ4hjpfP.B=:kJt3O=[K%Z%>H9Vol*6e&bMVug:3Q\JmE:E2r*2H[cZeR=GFc6=4)[@6_SZ5jjnH8[Q+C1(pH+(8_Q,_EEn5LXhl1Vc?)`>2q&DKFl$E)PiMgpB%'%^j#TPQ9r*@B"\R[IsJD]U4KFK3jT^)kU0Vi,uerD[.ZYW&HiTMt_F=,>.EhqkpUSR/DA7ln%Qp7KX?e(W>N4Z(W+S'(_Ac&CsF%=6NEJr9;p21S65`2VRE3@coJNe'4fV8i`Tob6@!<[FqBOOiARNhHRPE]5'%n@QQ``hKY[Fl/C1<a/ujH;=YZm($09"gkeJho`!(h%ao0JT'AMd)^=l?KoQ7^PrCidE$8HVX;pJ_Bc%JhN(=%AVrE50Jo]sNA@U,fRPHim.lZ2H0!eRTajnmGlL%nCRO7%Li=$J7UG5AmR%r'[*MId*KjbOO#mo;#.Ib4VYs+6#@Fg0EiHQFiDQVpGfo>Pl*C,p:jnRJM6.luT(al/$TNBf8"j?S;lTFK(=8Nb7-$r-3S!#-PUc%\(6D]p#k>t=jcJt],8pPn!&GlP<.7Vf&q7oSJF<Cqi<Pcl&+@IoHFFVIW=Xf`i;D(S)$8*Gh$uJduF1WEWj'Sjnd@EGP]"^qD!Z[%L!umm4)5q3([/<W0+(M*'mou:Ds4S-(@AL#\?R/;?2[_2cZJ>lX75NZFfKAMmdF)PfF-#Jk-AdZ>TRCQ8frWqh07?2]hc8eWR`Gf%46;s_ku'hI&H?jq!L\=T\psB-pA%p&l@ZBh[F@io3k)7M]#QUH:LOFlb>X+sfd]1FP;#'W/^(<CWqa5fCo2Ct?DT-0HeRc;8)JO7%aA[$MGBuDB?2nNW\))Nl[<_DPp*ns7n,;,2a-giCdllf>Y->[JAA0?P\#p6#fAG^'T'lP<?FA*[@\5]:hc-RH[H/6am45O">-@K^%[GIH4/o0bZ:I!'q<BbfdN'-be[_K6FFggnOQ-ahiq7:$`\Vbl_:p0h)>L42GT,rFcNVpD8?!BpGIfB45n!:>6V_<PR.o/keroqDr%A*\2GL"jUTm/,e=8)=-GYQ(+aGo6.[ENZE<0AH.FN&Aollb2PXApioOb4g\%hn.@B:CCMoh4;ed*H&eYm<$p^5NN7Kk,8$#HsZ/h%Y&3PIIG0"`VgUn1;nd_F:48b8`]ehJ\N7K-pb;B)T(ZS$T!'^sDLPl-poW.T(I#KX*oAISWHEDtp,>PrA`r5r`H0;j37f_F=\LF8%]iV+tX.R.%/YDtA^[h6hbLHIO_Adqc7fTeM[Bauc[a=i6c-=hkg.sDkP>1>gn%!Pu[-#.E4b"\hLV0Ei+1uK(8rmaH$Xhpff>-2k%L#loZ>+8_X?4kK.CceSIf4T1>ruYV#ft!OLr"RZX_/>6dX5m$RlT\D_4&tQMeknc3edQdp/cGXUhef=@M]XC=DGQ\BSSi@i0"ar%%Zn;F93]f-IXLB_5l1T08_;Bm9)CMjWoR>Nl*9d%_h7FQ>;s<?AoBDt+D$7[GD6NK#)Aa43SPIf*Pn7#O]-Z>XTi:G-_0<C\lEl]+%.9bcdb%fp@aWa=C'^_%3,kN_dS[*AMT'PgVaJu8`?u&U5oM$mTiS.Y8H:Kd9#k'.jS3C,Gb##;5G5YAG8.1ro-S9gsgk`0eZsK>2%g1kgBRJPlH"ms'16B&jaa77nST)lt;bMm#!$&!4F5(nB]Z2?W':WMoh4O.55`4-bY[pYl0mIf*,]._R1&TkcfH>$=epbCfOYS[[f%M.dEYkH_*?DZ-_J-(R?s@W-\.<X=)'AG#8+&]b;Y5(<5r<Y<gR@M^_/jeGs,cj(1NaO(PD47Zu[?!>"jG6/$Yi-kLp(k01dc1SM9%r=Qdi&#pQd<+JOra-kIhqI"\k]S<*SU]Qgt(L&HZ^C<XnI=)P$j>$8\;"s\Dk*IS$B1O,(o4m%fqWk%tS:*C7[!p1'JmQeG65o0^%+cQ-n@QLg#YM]%F$g'2YZ;Q4D,nkX.OFc28A1>:Urg[Vt/>'(-N!1Z2XYseSG)!k]'&H8F-'+&]Rr1:DF(r^QLn9Od<`J_@Xt$Wk%%_UJM78L'?E&E*oeCsZb[Kf-[8)X*t4(4AmEb4Y'W0]OdP3pHfE>]1rp>N0/*qWd/fM:SOKuBtTZg[Y^LRMCKM_V68Ad5%,*V3+U%5a5m@qUD-;ON'Vn>'NQDMAN$(bHG>30jm<S&uKhP/VYO0a+b`u=.71KG@=]=\4l5C=+:K-?9EKi`;Ef0s-BIW5C#Z'*2)Ah'O[3c%AHlQ4TRc>p1"c.<XW?N8`q98&%"+DeF[X?2\lU=h/XL7rr#sW`D8h^XNBSAlS7j@*(DK)e'Vljp$uIhu&(F#$-p=r(efs,u8m_I[%0J`$V[e7oD(dH.(Xn`ea/@m+#]qk<Kk;BOjd/(,5.VlAJSo(jTNp#[6MJ80s(o#!]mBBP!W23a-aRst%hM/M2icuUMIl!@M/=^']%i/laY'OBsa-\FtqrB8@M%;Ac1Ib#6-2!K[T]mcGD[J<0?367o=^4%(u<U#[0`rU?Bf;PO,.p'e!ClmP:2QkDu2uu[Hq;E^c>BLUp%=BO"3M6X9Q)]E31Z6]cNgH*)O#s5:Oa==UVX^cj^'^*O,o[X7<NdsD70?<L)'$]`IU!LN7[hX(\T(j.-H,$,&J(rZr_GTIOh#<T*%D%qBQ#Z#hmlst>;!&qd'm).-BnOqFe6Gd!Y]=q*4ig1(sPigso#/Z[(lqdmXJLgn[g6NuBA.[M=JOgk#/?+>*'t&15D%,Tko9Q6i%iXVM&q70+ejI_'umJ1L8\.0.')S<Z"]01iB873!J_kn*&PUd/"W"B2`7q2Rcqn5'7!<D_<2lscd35:I':C$,4cXfLj[HH9ORGo)-%90O3Ye%U#JeB&7:0]YYFgq`b44k?%^PQ0K>I]:d4)<`k8GQk.]X=Tt,p'<;XO_'Q(XOj,dppnt60K@30p#B6\YBt51l!osoP9M8d%Ylq:pB@BA7BYX:18G(S8$ks+jMDKor5Pk)cUu^LP,QM:;CNoq-J%QEjfVb$*#]IA'<1;X@YIQtd9HreU5/(TadH(R#l1A-QO-(/3%M.iShXujP>5a(+aJ=WK\9ph(GE\eDD#b07e1g(-SdX+hi3fNuA+bML$emS1"b_Wcmp)&i<Gu&1:,ojeXlX![&l="%9-q1ZBB`e4<%(Y+']d.ut).=0/6Q(pgDoo7FPSmasrF@tGK.(t`G_!<'6'%(ou+XT?SR-Rgr$+;Bo`u[tdH+#9Y@prBH0Y\;c^B(Z%5=t%MFKQ!M%1'ljDpEqZi^(QiThl^YDGSL91A`4H&Z1N8k!`R+(aVBtKRr;fb.]lm3ap[S+%>GO>,_m4r^F)cq`o]O<EYXSe#A!BZE/)kh!Im<<%=EoU?-m]ec+!chndYbW#=>m-!#22S-.%HD%00%OY9qUK0^*Fr_r(BLY#0bCu+jN=H,hc^d6ouDqU*W6!J2\etdCN-$h<O>BHjm7?%9cp>b1[ZA/0Pu21W<+]han3*UIi9]^7c=6oi?_Z4m"4/S0@<NBZhI(2XqS:i2O.nCZp`u=98m[-Kbj$gP3>2e[LV>7'[O3%6^\#]%G^V;eW%72MLC@gucHd+Dl0MXFYaf]"er.<S-Y<D30LD(M5>fX2]FKGf+j/$Dk5H4._Uo&"*][?F-=I+qM&LD%N<\MhiJ`0fJtU%c%K)Ie""5tMH:81<$]:2($L5bu*l,%!D]*N2iYN+:0+X4Vr6b75!Nt4CT!=I&7@tV04!6a@c-L/I0B*#ffNk&+sKpo@.CU((\LU:Nu%f[k-0q[aI8$cg\)?fUMM3%2>S5WG1=@Ce(U&uIC3TT,]U,J"GIKJ356;"W1[p1:&[83$M<3*kb6b2D5-rtn5"/HFi-Om%g[:e=o[%*jItC@=Ue7_:"T()1Z:-a:+@eJ2.?u'iJU[(h9[7es0c[RHP6RBB8Zkh,@\bN/r+R^*ZDH_8kf76],MSVW80P'i@ZD(q"IJW0S(V%abbo>VOQS@-(J45p@g57BBbUVR=Voa'Akj#9)"=N*dOddW'=/0&m1KoG&Ipo0/F1N`)r=MEmi5uGU8K86cX+DJL-[#Q!u3(n1@H>%Skp.Y;9CSk['4KVF*S[,`.35fJIdIToG;m6bP^O+HYWB8pBbHOm8'iD/(\bYFLf8!Ep1q-kk[&h7a.Q!c_+e:Fo35joF/=<Cr'P#%kgD9N_V'O9kKp&<d,bUuae;ARTSm=gNgrJ'SjA\n9I>NI4bJbiG>'-70"i<;5><8U/j4h>(kinVLFt`B:=s'/F6LIGP*7]G?K8-S%e2-U9R6[6kL)NrfV"aXiB@+K^[@?t#q,.6oDp4EQa6s5&#gFFT"[!e9F-\q6O7.<Gq4u\?Gj<V\ks&mjQn]Ip.74Xm]Z6??CjGCC%OTdg+F"[@fMM([M1X[M;3J3*OSG>,e%$iZErffF%NXhI6QVH%9/-jfgFLGhl"KEW*JhZX@*<u=:S'9_/T,inc-5pc:WM[:Ol=OG0%>PKK)E.L<S?cJ'Bb@J*WD4@Jj1bdU"Un]&@BaKSeg"-\EV?>Wc"Qa2NYhgH7=SN.;poN4Ci>nD6`$^VfI*="F)Umm67iVS*D_CYl%_nH;V-RP5kQ!u66pp-bN%ef;UEI6@>HRp'r)]UhBl49*6D9!q6NOE?ij<Q,Ha(9hL=bXdVYfg@a3AF2K?i$f217tnbgJ0k>*'A<(%#Ha.fe(/jb*tsBn@S4[0i*fI(BAgJ"bHu`dm%?0(6fddFdbco91IN;A^mpd&@L2)b$=G6`a\\;<o9#Q21(:Ck<Z)Q\<s-+$TeMeF%'f,D,KgZjpA)Y5,h<@#be6DB2m'.-CM#3`o$&jJd'B>B-q/T>HOT`H93/O&a?W@"A^tl\`faLVL/rR'f(YVT'p(H3oTl"(/^DdC\%VI@Gi/OAjU?g.]`"B4DO>bV.fO^t(33Q5hhmghlXneP_glk>KnGd"t,FJN%l46`q2n_SGPc&U;fGAi@I4*#OA<\.klV<7Wq9V9li%@>d<N8Qn`c$$%au-TND$D?WM8a'_GlXC2L_*_XFMDa#\`VPi+ljTZ,C/"WKI3+3G])0VE=?r1H?ifGA[aI(72<(&'E8G[://1nal%>=<)Ml1>BUE@F84^:RlBrRd)tAFs%!Fb!8S,pK[hmS/al9'p,CLlAg`2o'9Tq)D,;-@FEq\i2SIe7'UWrooI0BkYCSA7DhJh*7YU%&.YjC?Uj<oq0BkGA.mo"LmUIUm5$*P!,el3Paq-*`9(92UA=)PWPRc;ZP^lhH]uNBgc/<_:CLcR1cPiO2jp<K9eGeoCfhop8OH]d%)#fV%7)-D&ANICV0RYKmF<N);E)9lsE+^%u:T3\m4g13D=6JnZe4ei;#=KuN0)6en5t]FG<"F;HR>W%hLU-aJ'3VF#EWb4f3Ji,C%4qBFl/3\5@gaMV5)a5>rrY5"#oAR\MTpdt`DSQS/$0B'e9HKZ*#N`kB^(E3lI,Lt!E7*-2Er0d\q/A(W*CX?LcA0U4Q@K;&_ZeU;%Gbf8pq/A(&=MhKV7T)_3TSqlhe^FgQo9m\@.u'7)b:I9MqbB_A`qu[oVq7[Tb'4P>+Iog&_3oLl&Pg8i*bI7#4[sD1c*:n0rI/hc%)>M#\m5-[C(-V+;GX%H&A%(q^Ke5G"-cC\pm6C-/?5(G:3pPhH2s;QlZXh?QOCO,`=M)-]+e:H!N<?mB^kNZ/'6tNN_+A.SCu-\Y%)1rBN:k/kmI+JhF8`!7(J"'Ku0l$n-I`9O(\"Nskot@I>B=JY4@:@hS;``0s%V2AaSO>s4eXm.[U]RdBAY`Z2R6X6A3c.V9,IK7S%Yac1L>=L*X),"iOo#3At<Fk$$@bmqj1K(Qo#!1r\a.MZB#"a)SlEH&&n;TK0o?2Pu\2li^+gT(p6n2H9*1LUk*84m):\9;f3C53#%d^i+1'lL+_A`ct%iV^hq;rJqh+M."=7oJ;TUC%Z1KhI;aAb=;6IqB8rOnU6$,X-nm8.>5^po$?!0sMOp@D\E@+/cl#0LGgXJV@H!%5)'Mfdga'&Gdu"PE&N$==N\")PB(aGZi'Z/FMV9=,WA5JP`[-kdErg(+<j(CpsurWEgERE?'&e#])6,@^X^Y*2G:`crEAC)g@a0d%lB@Ye<45C@^K,!9+&AmU9.+)tg-:oTppPSZ2<QI^o;h_Y2RbkUAXedu]n(G!=\Q-UiC5L;$PR\s-W)5&c(&&Z#K'W:'X78\b2l&i%ZJ0Y6ef!>gVl""WdC%[7SQ[goWV6(^A@DRWG-?44Vg,=e@]+IMp3fgkej;@6/s>RECheMr_^Su8e[3qB1t`<kaF$b*YVR%m1@1n(%NFH@p8q$0GEC-RJ+()iDXStmcG.ULBG+5n&45Klmo?Ha2mlnJ&dGmM;WRK0BkWR]_9C*AR=KQaM&$P7L^T]tP'=ZZ./Zt?oe^H$@%U`T,#[&3D8EOD;;imMSR=7]E>bk],3)PXs41`)o`.qrYa#9LF8>-NNXF!81d<6]Bt.9gQ5>3)e(j';GGr[RHP1KV\NWXLj_RXWQ"%o3NefP?cm+Ej>(4)=&W[+es")00L77)mZ"b-j/<N*^82BHAUF-F+"_56nWJ.$2;/F4KCP_8-A<!aGfa"7k$go;B,T6\Es.A*q[2E%\DsaF/ta-tkoDsWDU^YiE7o>QIXiMoRoD:O>V9=[qdILdVMg?=`ph0=flV5EFCSiF%^D"aGg_'%Cq9mUU:Jefb,1(!2=M%u6YFle%3VD&^nhAa=EVhQn>reTp]!u"VaNhj0ZK^B./E-??9d6&Z0%TH;YER,+96nk6"LI@PEp:GR7jjEn(T4WSod?2&(H8/RRuPJ7VMeZn%>[]&P1da0,h"o!]L)MS3Xrl0/4,$2GVG"?L-^d[f'ZNVfVX"J@mo#Ws2Vk;K)_RU4cGRe!4I[r5!9I6W1n-*-5]5T7FE+o=I:qKY%cDHNCV2KZ'j(Hi[V2p=S7OF6l(RIc2eM#rqe&<ITFBd<aZKX,TE_R[G/hWJCjZ^EK*Pd[1C53eEaSfTB"&+Z4$"?gF]Z8gPOY-)P%Za=-+@ab#$`=49H\es\G\l@u>)kI8jC`=Qr%nk;4n_FV.75bdWpA>&I`2r.s61ka;P:4Lo]A-6T'K7:$h6EFmT0=csiXSk^8XL2S%27%=A.$H1J&]O*"^O-HjKU?9#.?V/k(/)C*DMXgjphT<7n%$SQOq3&e?*].ZQskJ(lSWl8R9\DXkq]pc4T0Z5\EIhS$%71'N/a=^%P2VkA/.oj^_dE/%(f<u;kUoN2;C1_!4.5t(bW4V"W0"`5\hk'ZkFpaRot!)e4H#3L:RRAQ#9QfpWNFI,S]gW9Qg$%*d&2)21d7%>%^i]g5l#TXjkFY!`h8$A3\P*lqabMj]Au-Y[XGIo@gIhtR74C7?%9k)&qt#Z)?P4)Zr4AYcp3SK!XZ41O$IR=!-^-V$FY_(f:a[,V%6Oc$-I/K.mq$(@n/r[IY6;S;%#G*FS#A5lY(\3^pcF=ib:a32,.8tK\aY!WQ33bC'#52_>XnR_4!9`.N>>*Srg#!-m^ad$k/A,M_%++\-o:50!q=!B,D2]!^;b])HTM@kEjg-YE723^N_Bc>od-_@"q*QiJ"\LDH+2]/9lS63en=Z\@#@2Rki5%V<=BQ3+oqo*R"M+[eP%MFZC&-9/p)F!f[Peb=s\;.gWW-ZR4cGTmQZT#`VH%PQOBMg^EjF+4C+VIX5TZ#7)Co./ki\/U86qein_rSHgJDR`?E`p&Mq8Rt"c%QR6fQh>m8kHrJlinrf1(\/T`pZ*3lhb=fuudH&Y5g^Ud^Fh'_k2>Dp<XD]u:6Ria@lk7>rP.fK6M7&?-lN+Q#\a50\NTlqbO?j'u%1mIeqJ]-9C5B5BD_nP;ki=$[MML.hr^mRGs/OGR)S^Mqk_/PRp$Ptp/'6km8@N*_IU%6rJ3;PMF/,F<q-&)lTa,Xp=mX7`WYtW4I%aH4>^h21o1@4aAkNN"QU/=YB8=I2FrrI!tL=95QecP38%P/MIuM>6M6qj!Q4R5KiC]2Q4HDuiGSOp1GRL*:3*(:0kmAMOZE`Kc6f%LqQcF"*@+(_sekt0Vib+_reIHSNeC6W?Lu+p&'R<`/Lo$DGet*)oc"PNlDY5a9X7R3&uj*ds$7Ni9!Akh1FZopNY.5Q'WrcH*B]K%8:ABT,jRHBa49?ZV,Y39M<ds7R5HLccA#N\'YQ.=p-l,\rDp].;Z0Y^CmK:H0-;]K`S4!rX0dZ&3)<kWi[I!FLF8fhOaG_U?_9"3%o&4Tm9MW2n\`iJ1l>_oM6MYRnmr+8MP46\N`PRD0G#0N@'=O'Fs16\P]2E+99)ZraVmoKC"hoaDQmEO8oOll8G:RR(dr:UTVn9Oi%%E'ln(Yotl&,Yf/ErW$"'3!@@Da2e),WrjZ+o&tPQb]/5OYj_lm<[`Z?D_<5]kF)VCc(mirT-[]Vsj>K%sLU92WHi`pV&YCT?\)^%XOI_5[hCfFG!_N37Q^Q:SH^qA%'cZH!.>MPR&bY9+(+Jb@Qe_^>5!BPT*_6sE6S!.RbYA]N)%L)osa+u]:W!]`1(c#0(%<P'#.^)%Ef8V_G1Q7pBtF,G)W"QB1.4Zr;j.,j*>3!MU^V":UG,8r9dn%/FL:>=RWu%d*.uKI8NNH$*^RuRFE'7G>ZQVA>*Y6N(4Gf8kZMVP%:2#N+YaO^S*?i^*ch:=n3O1YY87Br*iKqbZc[JKEilPo6JB;fj+o*GGSCT$JVuLRL=BlTqI@Jh)bCTOGj"n6OM5q`+XP9'j0j&a?%gdL!;=2WR\:c?a_g&uSE?trd'a2`YY-Lfk]=S'$SlQP/$4^qq^H?QYRM3lRu%Udk8Z%63h!_Y_RPpJU03AbcO[A-m2NTpE63G4U2%2qm#^I,k^pi/GM1HK(>QhG)(3I9d+]#K\X2M@8)L`mV#TTf5>l%M3FeId9>M*_H"Bn$Z/Zj)Bic:2fWm.@CjkIRN(7i32Rq3ECck%[nnn^%]M\mAT"W<pn!*Hep).)IHQj78-KFFqq+lnaEt(Q;ZXpB^JLN@gtLH(`/*BR(t&4j!@q^u=#dfM"k^W6Ittkm_#&Pc:K!Z-%`q2i3bX_lfQS.'3*W#[h8etgc*5LcpmL^)M1:WqHXVsbR#,WDRaoTH2+$Buc\pd42J:SB6,@ghPkA^(\MiF)-(a5/4&$u9UCsiZM%F/'ddCt(#Od#t3c!;>MV-)+n>)ta7rnd&BKa[6EU8g=.t4J'8i7BED\0BF/<7^eF4jU9t3oq/g[0.s7Yq+LMfhoI^49DR41Ssp.[%&hi@AS]'K)^`261^:5THj=fUf]cVN/Qh"_$^N,9+q*Ip^*7V]BPq]/3dnHaW$+Kb*in[FUYMV`'\L.#fW:B<K$Vr@CfJLHZgXplO%d\B,`3E@B\lPH8;aK9od^)JPJY?uTT.+&\Mnm9(a'b\"P-+t74fR*QP;=`B6qPBem#t1r9]%8T&-J&Cgp#A`KUi<K7?cKb107@U6%pK*AuY@%..IO!YK&p(6`qLmj(W"+<\?gKPE^X[^bHi;AgS0bfU3fKW2kspTP7ffZ/XF'oo'cl]49]06loNV9KHimC.]mf4KDSdjd%U$qZ44#Q-Wl8SEbHkXSHc[N')3YYcr$/Fj5^7c0!d66'oId)]q0c?r8h<PllTd"FJMqlT3o"BMNa5DQYqT3eN,H%GqHi;BH=Y?G\%7_RD,G+Zc1+kTF+s'EJ4"4uLjeC!aX$fu="h<NVdSuWIloh.fJ]TI'dHi6ifm1_!p')27!mg]kJ+5[oRnHe$m2h'UNr2kFcB62#K%l^,=SS:'%6\9n2&/U>We+9,Z^oNV8@PEe&iHq(7mR="n\pR@qU#Y)MZ0E"qd1%+'@ifHX`I=,P>9ZOcqD^+rG%J6JQ]Y1$=?GBpO%iep?pna?)99=>,^lK;^eNHq_"7p`I0qMgZ'2S>HA87P$Dl^)5G>l=\QIj4X`9d9%Kn@a;(nm9AMf?])4nS\!Hme%OebZ2m#I\S:.%Haij*mRIcT.Lhs?P]j*7b$3/G]%8T$NX7M7:Q(3WY@%,lVnSPHM"g`lV8jI+0U=lbBluTY=,q^4hf+&+W;$.B"BXK_IcHq>%,U<:%:(b$q6/Fp%qP>-chG3'tp\L^6`;1Bt]R0V*DtT$na%!Yl0?jc3)eK`WqIR'C`k0hU]TUZHrDKt;LUbqh>r`>7illeR?b17hQ4e(8%(AlV!^6(0]edMF(4sKH\dV%C6''oK]BU<ls'A5DEi-dS%0d=Ysjj2oARs-$aT770%]LX`'(P5JPJ4tN7K#-m=#pRS!S!q)sGahkc%boIMkI<S^mg@'2G>.6W%Gi/<r=t-Pee%ZrkA^aiJ54"ThDiM;uVW0:H>g@efT%`Q`9U4q99@F\AXOZ!fY;=_G;sRtDY5.RuOt0W^%qgYd9Vn;p)c)71h%suP7f0-e#q/^_R^@(q\H2.%,I(ETEGWWOo?C8LAXt21&^+b$Y]c8]=s7NtqD6qhCSBT<%3r83mFM$3Y'pRC,%pC#mPDpOa)V1\U:5I3$?aSUZl[F<f24e>jT^3q]3D&kbm]tZE_Q+F9+Y1146XXi-^m6bI^kjY:pH/)Nd]KN@BFm#&$DfF]7,1CT2%:Mjgj3P<9VRA.&IV06HXGImMjB94X)R]uocX:+-VY'56CDtW[MIBC/*lX'\7pB]&]rV7FoXCp'CGrV>u41V]NZ4<eH*ptW!c';r<%p9Q`jpo\Rb4R9Y0hC9M;Ck%uPH*Y%o\F0p/,qh7mQKbEX@dh)/%:l_CmnVJY=/J$>hgpqFJb([rQD73BT.3/#q,qqP`E(BV&Fn='%Iql^k$0#C2T$%/nZo+WPFmIB,AuW7A?#kpodT0)sfn?Y`O.3mZ^DrP`XIk8@Y.:u<G@s.t<PEsQfqFgK>8KpiAo$+#=l93>O5K)d%Wlp+*qY\Y,Y$1_-qB8q=4>oe]/l&Hjqt.p/9'8u#g@`bIZ;PH8=[=&mM^K]LYVdiQ[J#fuEB7ANYYqpUb`O]WPY>S<IKIMIg[K9,%M13lWRm-k'Jk^hQ#8!BJoM(tVnDS$YHJrm?q=S7hIe3O;<!UFV(EDYEde`2k=:@Bl'Q1PgG]Ge5kZ#7e*Yj;<malo5&!Xk^Q.asu%q;?4CAu]b;:H,ql-*!IcE:rT?`EVfY8c[01l`,PJ-(tsq6Nn-h?IU!2?c/KS_nPqDn6g`Li[Qmj.__b>dn2m?bQ>&nj8C[(MHoDs%WZ[g-$GA?(^"k]CT*"BH[nE"A'W#nK?Rd(d4R)A-b;)62(9CLH/ROC@(M.%+;7,MM6>bC]pp'X$3L^J@UeJg>%l<4Y7_DIr>D`F*%9a7[3!3;Dt\f[55hfl0p;rb)uJ%qIc?YiA>pi\D=./Dk#/&/Ic]B-`0?[qp*VCfI:4\6oH?1sU[X7!'_:&("<>cW>.<LElf[mqcn%"%o^[T5(+mmICLe]iJ?N>`3OS]nmk*#''TY'-VfT;RVI+r<uF`[Cq%d/7AK_3;;Y)RhheSmH=AYhqfSfWHNI!K6+Tnk41+&F&A,*%Z?4])$NYh=aTGo.Ge48[jR``ue+`q#5()-:F^I'ul;ZXZa%*B9-ZWRtTRG%0B4hL7_?*FKjQ8sq&kfOYfcLbIb=,\-H2)[8`MY##%\l[ko[AhI#[@VIB-iC=f=k5F,:CQ*.RmhhlO'$gl23cmU2U"+a,gJHp(<p@d!t4F%VlQ/h_&/8%=+Vp8&,,eJjgg-Z8reUu89&tn%A):G\LAW%r[0pJLYE6Dda.o2$>L1d#]"7gWD?f1J\p_"cq>""("'bG@MhEhMb3d^_>ato-C`0J;0X7S2Vt1D"n,3h*P%>f4mL>ts%_kL9)9GG;ahnBtfZ$SrE`&FD@SX7o&C3RO"=M#$1<CB1rp=S]*b$*oMN=ke5W>+4qE$.IE/4;e:h&QFqS&0G\"7+c%m:/D<;VBRR%"hlM^Et>CSdn"(6g0Ve<E=dfVY"(eA]9b^;PAoMC1G7%Ah*RR$dhZ8uCt+Lg@6j&6/#XU-6tt]-U*tAW?G],h4VG74@D;[cD3%]I%2_c(,^FhFc\j3"n-3%tSh@U@12&Vd=?HqcKE$9=MZ9'WHYijJ&*9]4C\-T#2chm$K51M:9`#B4JSZN9Y_]6%^e+oKdcW<BC`ch!^%%jK&Z0_REd>CBF>p[Xk3puo#"GK(_!-pGZ8HAmMOI4=e$Nh6pj7Z!5bNTM[Y>fJ1jG#(47>g^78*YR<^O$"[U?Jr(.5scOuoZ^2'%o)])TNMFR$dV;i+!P/`-^:Y]t8E`.Y8[Q7?Yih]fkBh4FpF2d9/6IrGioko":<u=E+$BoUBQ%Vs"h-u,8TZX6lnL54mJ^$H.A_V%%csdmn[eXE!nFb"8Muf$J^*mm>*fVE,q"DaeA&,S#oRdF4j@IbH[a$O,Hl>>1%6G$E)Am&piHsFXIm+?>`DIpj/3AZ5[MiVb4.Wh_%G4L$B/r'Gc!shfdBG+q6VopcM//5p_X8*lD-@uM`+c8ma.cZgno)?Yo;bM^E/4;c,k].BS`cJ@Odq&Z8:R-c]J@VI*4eF?lSa+=V%pHG0L\DDg5I.Z\NYMT"%N@e\8Z'8BC,YGd)NMV4tTWp%ic8;ufe(A=R^Q:)D,`SXQ#gh3Pm(*b(Yn<mr6t9;,)G;#<#)t`&=2"GU%!,111@/u3oNB@Op(4E2V++pJRqaZbsqm)5*XH?$3pr+d`l%q"?aAKd]33#Fp\$,V>=V=$^[0o>kHJ*OmV_,.Y[THDaMjRZGqHA2c%a6e1I4)gMT]m&c4rV\dh[2asIRP%KBTXL2YU<FEHm&W)afCL2d5W96>RiMu$iQ2^S.<h)rcdd<J$$TFgc[A02!#N'krS:buMfsJL%FrEMF%!162TEi"/];C,sXKO5OD:HRAAPG@eXS<=5X`(*Vo"f4cJ"Y-%^G!b87r"]`+6't`gM;^RocM#A[k#XQ#D&JUGDf#;M]a(D%.!iB'>lOU0*dh#QVnR.3onJ]Y]]m>JV?7N/<i</G;Iad+/7shA3#'Z9J1X_\.Nu&M6O/*QiTDY@?0&sR*FJ)<bR@:HXj;B^TjS%G%:^!]d@c']":YEoe=Es/d9"!1Dn8@p520W7(:c!PjS1i[Sq@lW#OCqJ0^6f=en%1:#<b6*O&YKtnjU_lP?23W2Eh2Uok$7LNFn]cj%8eD!@\LK'(M\ZSX/NdCdaKSjcn5.I;'&(UX$@,3!bJJ\A3@tOQ\2dX?S,M.Hpi`WoJC)OOD;F"OVm(9ld,h_uK)j7B"6Y'/prNm1%?,=kYP2$^(4^BN=cI3<S)paL%\$<\#`q+;M#9Nf1d]Y\1p[d<=J`]:m0qVGEs2`_T+1_54lT*^Cc(^VM%+g4uV9a)+c-B2Lnc#eY%?d?@2Q--_=HJ5rGf/q7>Qfc&0eb8Cb9=*0lYNAL>PKN<r@of).mCQu%?7'.\Zos^X&l^L#?,7Q1:`SgbCA"^o06d;-BBJehU\[Wo%=:[gA84P8q4);A'#B&;Gde_FJWJ/6.maUgF,<YhuX#RNZ[X'^:HuND_>#>bde1%YLkS.=L[iF5/^0*,H5-4[`\*^B1EYmCD6A;n_%G#M^r4oDh#kB>IJSI](cp%C?)XOarYVU3LgC#b/^YCEHohbDnQj9[DeYCg5:)>l[j>!Dg\K>E%#T:0,$9]Q%7ilCqqQ*PiIZ[VXY%C>n].I;5VOl"Xtt[cjH;oaU#,,b($1Dpok9nn!5_';[G\ElC.$[s#S"G2+Ak)87:cf]+HtF#tG$m`a.l..NB*l-;_k*S"k_o^",%%jo)5X6o*LGH49s-l;K>I]eLU*Tm-,"X7F*l@R*`K`gM4Y$,$HuAO-*nf8G1bhqrm!ap7eE731_9=GJ_<YikDuV4_!$p:Xc+<RD=B%i$h3cmJW1Z>2)OSb+'cOf="I4;KG-LI9]o!9dlh1na;:L-1J>k=QOeBaQde`mCWfk5:\,p<;<u@TB?Uupnbr!Nj^WG>`]n$]<m_o%6,e=n<#!"Wc+e2r=SPmAYj+__cd%I_+A#a?geVKhd:62U!J$*SV)W_1_WVP,PlOmWY,taIVsiLBX?>-^YN7G!elUiXD<l64#>d2E%.G^R[H5gY27p\E4l[,tQ*)N/A:Y^=MZGrtO<>YF7A,;-p0;AAt1^1T)D<m\*K+\%i+JfU\oM$n(c+V4kP"i*Wdio^Y.]f(+iP$%W%?(U4t!CQ1PT`qeJRX!\$nC,&oNIYq&U4'2g":ejn2[9=@d#o)!X6F't,Rb$KW0dVE3KMV\,Ke8@PVkO$b6o7r@`6K,<6R&8K7%61%K@=C!A5RCFafDAipk+=n"_q"H?7GR0;)2DNjE+8/o[a&83PHc_n`+gH6$)suc$S@%gud+1Z2,kWQHAfm`@3sApPO>Jrc*4+M=tAn%<3CY.3u\G.Ek!Li]D0/HVo!TWlTHY)"L!F9/r.(ePj.b<MK@H$q3j<S\F1r*H*`9=\G+M2G4jE.MtAdhb/6YdL1m\oPm'[.\^"c&%*MANiCS$5(GlK[@0NXhkpJ9k'cKjuqREYbZ37F/`['tg3(30LS>%6__&B+-L/HTC\1:pBklrVHD(OBW$C3k2S@pAA%[21("<OkG?%\m@&b+I)#q=c._h5<gcI+<K\Ja-VU(ktD;`?g[.WMZ3&BV$]2b0&ubZAT<hjQ%E=).rsnKm^5f9;3J_;08+U(O?/%"*)+<D-6tLJ%`-];O1k1tt[jAa9lkIjUIf)r<Y)m4aAGouJQ+ftU^.CYp>`=Z9ArUCR"]00kd;L9;B_+ul+BM[DI(T8!O\f9h+b<tqQ+gP43#b-!%7cdE-\5P4km19V<6YOi<@I-b:0L>Zim>Y"umBX)>_hImd(3,O6DE<MD.2Bcf"@NFod;*Y9LBeCqYS>+gZn>KA@UXQ#1&.r6'=[^p%0o]Wd>Ee-o16'^AA)J%JAR(s-dfG9lo/%$%$Q6H9NOP5jF+nU"N%\V*QP2VpV2/\0.=n`l&>:gH5nl++-Z,iH9^^Y77hB/B'a!kr%$8=@V#W2]6IEitlO+P_(#]%FmYO;&V?6rRS[-6,Z4!Tb1(LD@ZQ86iig8mnLUe\(S$=[R?3\M3M1c?8mQSK517q6riP]<T5O?0qh%B[b=_)M:-X&d"a;k-c:?m/Ypf)FJ/ne3a5CW7:>pE`PkI)%P%^`t6Y>g:0PI(#p^::Eud>L6ffgM)u++CLg/]8sbYpOP:$.s(7VX%cfA\lO(u#q)Ek/bl(ctf9D#I^UlT96=C:j-p8!aaj5IZM_qL;<W_G7Zn$)M]O(sT_A`U(=[\MR)Q]=.+*Bp<jp$d0;Lp72lEs;T"%p4)L\2BL&-8$r;;#IJ4<^BJi#Z5h6Bp?`:Y.R.+%q[^]Ir+HhAAGh5B<IV<4oZM_4?FAi_X&tBnN)t0%c[,#-Y(3!4f<s18E!%Oj%-pYmGZhO0N(!Q!Gk5Ae*^[ZNSP>h)NT*#%lGqEsHH-J29O-2H,E;q7Dhg9U\IEFc5)h0`W$i,3i7]oDG:9XM=gO!bG)P+Y7X&sIm%Y^a5gc*-9?_6n+K5!KRq;Qc]"4C>nkX(rR;F\^&FiW&*@b.YW`,P_:e:(^ueikOHm8,2WoMZ/l"nd#!6mn3QhL4&t\V`S'Z2[hcd%\6;aL9eHAHASP(^$kpe5U?f=8?FQK"A[sGD;AIH0'"_iAQHaPo?-QGk=D$9Q#%`,.<\u[pco'(RW5R(`1Z.(s-2/pf]4TGfTd-Y:%=RZJ`iEA[fcjd"S\N7*O&kAY(9$qf=4-/d%$'uL;C?$^]GL3cuY,/-NeZs>RV%UgGomEDs[A[i?-/*(%DY[kTCD8AFG/GV`Y&!!>%7M2Mr;OM$o%eo.R>YA.8,M4*^`O$Z5TAsZ%Q._J&nn`7X<+9&oE^d7CSS]3aS;OHV>e.#Vm8Q^mkb75IF:s`g';bkV1`Z:BMtk/#%[LHM'2U("\@$UgQ1)q]^TPr)O'%K>D:]aF+&C:o964](aCLUd8X(\Ji6+'\@Z)PZ`$+:$4GB@S4(L^$<lHds25`GpI9H"YQdnM)G%[:nUYTg6(dC'I,0!DA9oCtF2'fg(?G@Kq?e/rZ.^Qiu+E*35g%$5?!!5g`O9ctRMN(`\bgnASotXodY(6,H0#;UcWo(1>%a/_/2S%FfGdAgQ,#rZ%5=*(be@n/c:,b,69lPdBjlYW=B3@&Wo>62D2ZQ=9*Ms&tfq/E<-DIZ5c3?TI0l<Bf$k?+Bh_gq[qZ$HIH9oU'mcP%]c0R@[9[\2R&WbdCt!J4Yc8lh6!'q`fi4]5VG5mY5dQ,m'ej-5eBUrCK-1b/p@h)LAN53+9rI7/\nW@9R7\'KTSX+P*$eRdV1Q?6%5[([T$`Gl^\I([@'#DL_$^M!4!B)b>(>Njp*8j0:0$BLYrWj<p;:J=\TMiWfiW;N"A+:s`c%`BoQE<1&Ver@d9*6H(Xn&u$=Ad!?%P\H/sAWDIM;*//!)QO(tJL.1jRP[ps0k<At0b#V]>oX9;q#0IPaO%jAKWVbMBW%l_%F3\XYa3Bn:*iFtIFBFj,FXILE.UoFW!@u9%cjM]g%HrXFW:JS8bB=2EL2$pjN-,i`Q4jCa`tI3.Gq!!c<kc=-.Dp:6iKca![/<b_>-qtY>o#%N85%b>l!W05aAu,llVO<s*MO:5%EC*r=R4#le_f2Tn+u.Ks+"ohg)p-r+3<mn:QQK8J6N46@&IfH<#(UiY'gR^k#-J=VR].;qKVRbDN%dX92$jR.*&Nlk'iPF[4tb4s%SOu//lI6:HT8!+Tq?%d+kTEMmK1DT(=:cK"&)Ld;B-D%m4EaBE)3gO=/giJ5/<ki(XW@SN/R1*bY!R@U\SQd1edPM-!/]&2P07qV%4"t4o6#j[bLWQLE$5AOgYX*k%%#5-*qDWrZBLE>%5&:I6it7ZSYb4B='o.;YBHJAYJl,rTM="K$^p's"huL>uiE-Y83pKHJeW7kZ%di?:[BF7Hg/MT>HfZ?It"DJcHQutrECMLQoR4P,KW3C)nJ11]g5_F0A784e\80/Psd($3X&Z7mL&fN/B;A3/Ekra22<>\&H<+Jao%+t,`,dE,qhE/[5CXYOKZF'sj*3s(FOEIhi(e=/.TE(hBG>cQmHW0_KV/g16T_(g5jWeFE/TQONVm9!4O3u^a3gK>d,!4i@SSaXT+%;54K"Wo6jCTU\jI^JL>mTKEGs_"q+9:*A!s8k<>,.OYtb<N2PS!.iun3tN:J&l<1R+:&Cp.3_p4Di7^1Id;YK;o94l.qiK,e!n-2%/iJLAYVO]/irPhFNKH]5!?uZfVh=5CJ/X!$CBgG+!>)hKUlf=5$rl:!W'p4(csS=QBfr=%cY25Zr=l&;*L>2qE<s>c.N1i=oV/$5%J3c12%K]6B(N=rm@%I_2)lS"I'T+D?!0l[SC0d2^BN]u[YQEr":,uFr1+-1u><%jTM9-ADbJ70,\VrocQ4QiT6"-0\!Z8.1$(4>=%WhTRTmS#Ig<"P@/U%5ur<ruQ1%7^IJ!/":lklE\nb:G,!6+904.2nmJ1XP:Q>6S%@dY*oW7Q$ko]3q$2_?J]t[%1lfTQ">bTJM8r%PKeWbrA$4cd2rX[JFT[o95KOI]'c<lZ?`C/WgKT75W#OKJqem.AD]);M$(7R`e5YI%9)In7CB\M!bG(E;^H\j/e6#Z/20d-Kc6>e%3h-/JN&?j((0I4Zg<3<eT`JSh:`V*)?U("c:pG[^`;B\]5U!F6f76Mm`3^!A:*YlAkflC*77CV.g'$+d'Sc"L9(L4\-ipeILaj4<%7*Wg9^h0h;4;/aMoV2O$[J33:!fDsH<MF\L65/`[/5s[+_%MH\;Gd/r&JEFjfk=1`[KC5C.+?;%!,>M2Cg]%>Pl^r;<X-qn#UYf;%WN9F!QA(P/7B1r,!M6c;K2#L8F=3;d-CN?@R$ojZ/-B5+W1?5s=-Gtr+mT+tU8^Ii#2>hN;ME5pTKkd+QGXqD%%[9:8M1-Y#K(%!%$tr@Z`AhuY-`T$D$=^eNfEm02&FXAtKIQ7K)(ngWL1W7=@,M*U<$8h/eDk(PJG9:FBsE!emQE<`$=P\>JJ_?#<ZiYNd)$+,1=[,D%=O$%pi0MBj'XX&)&=`&``N`#*CM4r-<+;M`dnn!p=dX#I)S1M-;%KcK5W0(0a[.6,%JUKVM&AQ)PZXsTmb$Kn+u3l*2dg-d-6f!I%(c'F];2?X9C/QoV1inc1@2d?^3pKN"(@)<*'oEO!'9Ed*_7bEMUBke$XZ7CR0iba4\h6C_B'\E!J/n+e*"2k0fKl!%A#*5f[/k*p%((SG<G0M]Z+F1qFGZ85&Teg(#>G>Z;;3LeD!I8cD4&EsWEUXB^Cf"L`.:EOPPX)aS'5u!BFEE;k(OSAMpjlo,Wi!$kBph@$h?k)"%;q9Rc#Bq(<A7-;2@R-AS2PnDS8+q\^cq3nX9S5JT91-/jR0eSTn+l/U\WUHHN+<*HPn3t0m^RpgkesaZ%Q)7LE_m`+dR&.o`gc)B%Ch0Oa]32:&NYe-l_Y"T!"khD&n2OA^2),G]Yeesf1%>W3V<#mgaGQj.V`<a'dA#&39oFB`95#LOeI=NSSj.`b0jKuL&f$$61i2/V%N*6csUMF@Q>_bGD$G/C\.=omB,IsK:-gM(hlT2SOY)onH\lBFe6Mo$%<J=V6KtIr(=StO1W^Sg.:pZ(g/!T6%MZm#oVB(mMjCJE=%?;(afR=Zb/.5KD/JoG^oY&H`nP?9jt*E4f!(DBaTU>D!Kca5hQCS6;G"t5S'MnL9W2:?$4#VGo?%$^XDE34EH0O2ZZcjMWQN7PG"%pH03=".@Xj>8G.6()i$Gbdb%,\Dh6g$K9tmRO7)%cNII7G/=m8i+?BJZ!F'g$MUD)7=]F"2;&r!?&N9amYZMufhaLL;JI%H:^)Wl%(i7#k,\.1lK@VMk+%Hl*M2oCk1_3^23jup,*Uo0$(:[Ht,X=tk,i]&/@EB6j3tV"P@Boke/]7j.&<]+9q@mK4.DdbA8Hrd`e3&WN%Z;D%uM+P,-ScD:cH>.gikg)+,;m^TO*AB_.7\jbH!JL7l>/Ach)$:_CjgEQR+aO0t6@h[XboRg]8X0uH9\cl&TQs'hP@ZF=<s>i1%OMJVDW=1;N#Pngqr2?uZ1isVqdEpUAg"G_MC5UN2@+!Z/I))@.fXs]?+L-GkY%n_g!aLftN4oDi^iFb1A4V=pUbX+'N^GOHSR$=K%"r]OUi!0=E3POb'Tj(?U3_p9=e*&uY%u$9Bc(Yi9=Am2LWP_#!h8^4c#cskZBF9loL6.KL:h&Z'(SkZah)6)6jBP'/X!k'+'oZ[4%M;o4cP:]5J!#N)c(tU/9jBt(`FVG$WOjDC5G7B<V'7K1NMDp*0Ei97;$B2X@+=r\cJuVs.Uda5t\mXb:5QQ4NY*aclU=L)`&*ICM%'\[NC?5J@+26l3l_:CKKi%?4q:r(Gb`3@A(_bgJ2)OBmME2s'7=&`,J;AIfV\?rD;e/"#fdhPCs\Vq_'UBnItBI5o4G/As^>fRG2%(m-,H[n4R@:d=?iJC`+%<5k*)(t:d+?]@ZCr*hGjm:s.M)FZ\!Q)`aM%J:i\CWJJhL9Z*]+]LeSV!cVG[87MdQ>i\)QJoCUEn2pV%b/TF88WNk5ia<J=`EB/K*TdF!K->0q,EN[%9EiF-+^L(1fg0ge8,[!,k&t!iqL`c6-k=`XD%.&;3J&khQ(%5rOU<u$dJuCt$<snP%S3j;*,+o=b[*ds^d=tRW(1d]hAN[OlKVLJa9CB)#7q9sVAna.XTb_LE)(KNrTcG[#%tt*ikA940UsR5Y6G$GhAYe<\P9&^(`3r.$%#S_iF^ojc<3"/l2/Vigd0c1pNXqI"M/I3*m6S_o*bG$g:l%r7L*Q<pcbTBeV*$W?o'_E^i?kBX*h>k[u*<DkiV>5e'SQWgJ^fZO^%>C25]Og"uK8e`[3D;gB1J8TF%Dji-kc*W>@3A.4F,.7OEB9B<JmY]!2-O$N6o7=,&[%!.s/Q_]P.WU:d/j[O:oco_NQB5`m2.4p+%Og>)c,nRQVZ%C=3LS,U'&lLEV/^+GXCOt>n\:klsfdqk+KZ8!C:e%s<kb^F(Ef,LZBRu"b'G(F<b<[>`.]Za2N!)BIi0kZ(LVgM-%HG1X04ctc\J_+K@[:[UQ92-(]BZF&:Q3$h83ls#[G:.K5I[Z:cLR>m>rm7Q0kom,;%!&AT)b56f6<L5pL)eRtEYT(@W>a.bDG@+I%6?"JMX?%MWKIY[+.)L+k($IU0$:bb8hI?)Y%H&oOW]XkP-S-uo7;*EkP_!%LK>^jk.P;GJ*epmJ^5"cmRO+9Bj`l<P(i14\Wpn$U%F&BH+KAl%G1F[puUMXa?>+ks4f21dj=qj4FM+_&YYim'J8&NGk3+?I'l9Q@_F.%JnMD:c#A6"7/Y3Q;)J#o_4*4Z032%<ueOgm\]%7M.D8/J/?=BIp8jN-=+,oQ8XCZ)A.&5WELE]bh_Me0pchiOW4B9Jlr!OrD/[.^W+gNXr]>/Z6j"XG/eNVU3ALXg;<R>E6eAA?#\N%Y^0$<EJ6;(&WUX"b(R2a7>%7hPl^>\TJ]9V3/c@S-UPFHW$Ch?J17Qqe\s[((IK[R2.>aZ"GA*0/KdRK&'EQ!d=mV0:#'lqAS`-W%qbY-b!)6HmXqbi0&'=:ZNmX5'!JmU;DCG<M(j_,(nus`jFd$T<6kMB2ag3`nd^ZYac/D_,KU^T+lY]St$_(!D)uX+>m@nZ[>M]])%$,/?M>O37s]Q"J',hWZtBK;sZ+"9scZ702&D;>O>.8aePS\.-`b>qWG"_=QX3WXH-Cl8#O'JlM(4"SfWL<q@[lHR7$Xf)3HGshgf%99'L;a^1m*l5Ff%V'FmW5,EtfrcB38X,o&m63XJO'H#KH6.6'm06p/lMh5RaB%V$`m80a3eP2_>"E(eeo+;l!TPOiN;)*<.gRtZI%f+=s8[i]SLKT6\DW+T(d3[?R_me-Bh6)25:CAAElMA0[5_Vmla;),dmaqAk`<<PT%Ar113Pdma5DDf%>WZumpg1'(oBT.?X@KTED%l"RSf^:;SX#V02W!t)P$cMR$?2,H9^OF2p3j?SlT,#kp<c4:+@%!HmC<'kE\NghP84^q0V$H5)XP:]:$TgXcM$63MCL?s(3JJj9c%OdQ_8bbf6GnDlP_J97`P1f8rl`\9<i_SAT='UtF&<g3J_7JO!hGU<ZK(#e-qq9YuIMF0b?6H#V?5R?dbO\S3'OS4,s>\dSm:F2A<%LO4993ZU.5D05,eYr.6P)V[9h[q+7J[+Jr&'uY)sdhLr(-4X]s/X,o$]s'WA--O[=5'`(:FSI6smH3p3Z,0@95:l9l.Nig?7:;6n%E$\Ntd*/?U#Wfp/Z8r&mpiqIhMN_)N@mQe-%4u.L6U*J4'Y^IbQlaVTit*<U!2PK-g#-^8O:VV]nEH@VntBAFR2ouDRET7M1*RC4%aKhfhc84DdK0r8U%,oO%5fscT"P0@8?jnTKdt!NbEh#to/#Gog%rDXFrG^MGe?=b4L"Jo#>biHPIYo4L3cFUuJ!u0V@[VqY-15r>%X,;6SErXUa>n3e8:+2#+<KMlf4.El)WRFU,mRs8i<M]p$28"o<oKQ.W=Lt.n:rBq1Y=UZIHG#Q*=f@a*Ys3.fHo@'[@M1AlN'2Nb%1m,!-).P;L_P:'gRqs8KLZ(gobqjeO-)tOEU)dH<->q+m[GVDS7tjXDJn?#,q7W=L/98_T)':Is34,f%3fH&R>ZSt$$hOX7L2/Ob%Jrud*/_&IlSJ7cQ!j]4Re/F+[E5UEuo+(Yq%09H@@6<8@F#5Ms/<b?Jg>>`H[LmBX.S/o:)i6^;LC"AV.Z2##F.Gqdj'8V&VAoX]%"4^:;Qr/kV,;Q-2MIoQA=JdfQYWGEmW)3S7Rc1G/\)K.%LbuF.4;(W3)%e,m$nMPNYG0eq3G/^1<L("oM#gRC%<Mh$)Qkfu)ik<K%G]<cSBR_0AE\n\*:dH$09B8Yr1`1Km;$<o#QME3aaBkN3SNJOu\-$/J"he3$C[n>;9cU#bEE<WiM3/+ujhMLfEc=)``rR-T)SeUL%"_(r&_<)@A3EgZt)P:Z:W&^9uMCP,!."N[#aes8pQms1Bi`Mh24tqT:d7U-]D25VkjbO$X7smc=,M]jZ4>(Z\;-Y8[UTm4l4&uS1%Lo+'t%SLKWZ&&,Z9i;?/2<-A7Q(S_Ka#D\kno0FQ;JGG#]0g5VEB-F))SBL2OFd60.t1,]^%drq_FCki_IF(t>o+fN99C>>4gCd-%;,!q,OZ*tg./e6KmV?j"K<?Hm:F<K'gVCIMNk96KS[B'l!Etm,D*qbH'"9\/CODf,f>nZ2:ebPK;fOgP@d4FrH1I3uAhHS&\=#cO%99`F)Rh9WkcRa&[`]p/I3`Et1dDL.k*#<GXO@,!HpaU3g)_N0A5Y)6:.P6X^C[R6AF@l$bL]Vb!YX#P:;odp+6D]2=09O*`;+p(8%1Knb<@MN@G<C;]13'k617?1r8hN2+ViJQslY\EhE9@Wu7esdmWc9oic/,8hbVBk14b_+_i$SNd?,NN-/qcDlu5k((`)dO^T&AoA@%o8M=iK^Du*&7rr[,07"hm2X;2':sAZjY\@b;pT$F6Xd>'Bkp%r-7m=jo(JKqL=:/U&>4feWd-qg"]qfm2#(2U9:MJ)S%WLmbLJ9?%R17lu'ILj#<1dPd7HqD%r$TfSIQ<p5>qNJ#ZTEg1Qsf[n6;!uAK1cVBcI.RF=UporP>IC6(</r]\!t8>--o)gAELZh/NlSaKOX/\%_.Ro>aE7?Ydm\&0a`(rP!5TmNp`QUKr>`L"M8mUKK7rk_ORj\,Hj7A0%'Y5u@5Gh.A5(ZCI4G=$X$0tDHi-q2Ci_[<d@/OS),W2%%+o(R-g4RrH,S-""S\uM`SM/N2`P<<k/7i;g!;!%ZN%nS"5/Ga'4$SB:@e(D7#[8.'+j=$e]jg`Gd1Td`1Tj)Qct[bC^EP)9+cs0U%>tIfPNNJ92\P<O2@I(pFoP&#u5m,5qYcDkX!qdlsghLb^7c?9[$#o>QNn)0gd![sGdjI^hHPPT^^M4j[rXW1UE`-piA7Bf'L80dl%@o0I*W1F\c-1I@+(4c.8X(NCql1fD0*,UA?p+"!f71-BUI-9\/:BY?e$'!,Y%,+>M$J=6DE$X+E`'.0&#\Ld[du'[I(c$%++<%S2%+^i_,ii*IoR,%U<:=YCu_])h=7"be<`#nPSS"QYt44`TGZO7[OD-LKlXU%\[:4$Xjc':!2AmY[q\Q08kP]ct9%:*uMH$CW!:V/l^%#fnkhF[$h@L/.M1>_\I,JuCToCP$t/j,X12m9SUeapnU%2@BgLFWqADn4..H+X-qA"tgBEg,THq3mtOb@T^*fep(BPC1BdI2rYOj%NBWn;&#AUA0XE_^"@ls^%n$8O4(F?U/\R2QTaHm4!j4r"14V-g@S^al!Y<a+WWX>$]c="9\h4HG]c1snc0MqP\/Rom&-A6rj8D)f%=8:^pc10p2W#H0Q+mB8gjSaZi@pYHY4Q+,`QO,;#HX64UYRYq&_L`VpN[l$o[>F@?o_E8s0=Cr=FV<C^56EsI<a6Hs,q5;Y]GDtE%]BN1C7_o-mMA6m5:tZ<4+K-(.4eD>+7%nW\5W4\^52f0"@q,Zd.>2-fX=5i7kJ.t0;8b3#"mtJ:#!0SX43`ZK!(C=TGL:iumZmDY%2!p6m&`,Y;4f#6fEY4;umDe4,:,ZVQ521^eP"7Q8j;0GFD1GSf%;96F%eqhgUsG#alSFlsISu5pLmK?.AJlR_('[]<$i!+,dt^(P%;UX9J4*atZekPKO*OnN.RjQKA3/X0=rP`^?fO0TpG.HS\IC</Z!(jBZQmcVjg)O^:dE[\</JD<q&Qs"1D-%dQ0[>3c`"<ot_*p%9%A)uD]!A<GV$KD[K8+>e-Q71b8_@U<qBYk0+*DKa\o<+]-$Y_!04MjG%eIeJdQiYDu1jq9oV)+\k]S1/'-7&:s>2RN=)EfYU-<-TU%[PCc39KcB]pTYXj6fc+,T@_FdIm3]o`cU.[,!sQEG%B;W^#*JliDns@mmpV+Img1Ghi)O-kHY1JKMh?o,h;TK%eZlbLM:LRnNF/W%LL!AYhCKRuaV+p"f^oPQ,V<^'\,%/2Ad=UMZqfJJ*X(H!*t/!Yl7p!%SMOZ&;5;h?,GrHU[#-/\g]OkpYl\<Z%>S^`Mb-DDp>VOJ%]J`eSYRLpZ4<R)P*Pd7N,S'o11@l,kl"B#'DZ7$0p"I!;@>UgrfEBGc1>6tt56S_09/CgD.iT^80U&cjDBgZCj35U6"jIO3XeM+`%aZ/M3+r1cF#chkbOR=q(ZNJ>'Hl:kq5QRaZ=\8>16`+/1?M9Rck<Zd$5s^DpU<=q+k>$qt9mRh:L'_oXS0lEPq/`*^S)BISQAfAQ%4Y8&,:A9;u+<Z:+$`ppknA,Nb`3jnNFAqWeL)^34er^Z<8M+E4HL\cqBFafHnGj;SkK=?en!iIRn-0:PCecXf``Co%4=#N-^)/$:%$coo]cghs<rE;=.T(XtE'<kKq>F"<`Z`oqTJ<f'0C/gGo-"3&)e4=89G`)*.7],,gSot3nL[l,Vk&k>b,dZri9Aglf!<6:mjt'*3%;j4EtFoW%qRN(#$G]2c;),;4gIeE4^[edL.>lL83HG1"'gZqNh7@7(C:2"9JVN>X#;YMl@9L6/d,VNR.$lm6Z;tm9ee9,%@6Ksrc%>98nRo]ILa3ZrS^X5"is,tK4`84GS2>YaH/\/c4bmQR/m7Of*52&sQ6$r?5k8EsO_QtdANqLiZKVOD2G%<3$UfO?)m-;aMF-5?'e%o%[5BKb]^+?'RCE9@(Dk7=I`G"5KNW67ZZ18t"4-(flKD!Ce%h4@N+j?iG;/,Aeg`E*5en4KP76N-^(tK)$N#L2\[g(=R1\2S#.,%:+u11=eeQO3q$C:[]EQW"TR#=_K7OYnR%$<">7Sdf=dd\!Ca/LMJ3mbqU<e;rLJR?*KL9CM_jPl!4WFq&:W\rBQdi!>l0O+'4Whn%7AN3BOZP^Nqe`<.SOY7S:ph"H9RUkVdr_!%2B+aVeGF$<j$ma]j^ZB]q_Hf!".MM/1C2%m_bh!H7X@"MBlYPO;jHAu@O?ZZ+nZ*K%RHMJrMtI5Hp([;<+Ze=/)ZY#J;TiZ?:I+3r-XbC8Rhif+CZ%"bfeu-d+Y`(hPCHaI-&,\3EXX8rI`#`NlgQbqZg4s:MP5R@Oi-(-%S3j(^h>D(4rR6AraWY0q;M(cD49XH`q'4OLbg)QPb>Qd>J5$=PN]$q@H!U7<Y(Hcm">I!LN]]cpCG#_(pp&jFL"+@U4ENi%;_-2D%l+-&7<61IA'XVlK7=6,rmcPOGr-K+ld))%taM@c`P1g[i%L;R2oAXa6=XIsAT2ggk"lBN$J.JAK^r4RO2rnl(,,di$f$NE\/91p4%N+i]J>lq@6"1CTs9G4;t)GK!-IMG'KZau")&GV\"lXi'Al;&3Vk6-i9^JSk`[fi]2?T]pf#8p>%\6LFZ-3%T=FS_A'9lLA%Q,q^j%Su5lc=a?@Ql't"]6a$Y=_us]p&`r*u">X61#T--FLUIen)uuG_J-PF@T'Qct@*q8a0YefnPE_$%M^1*I=a7a!BjY'0H.]R,LA%("%Wkj.mb(V^#j?V(h/2$\.V@aDXFpDmI!(7k?'TA2C*dFQ\O&N%h)s<7d;K;n6%s0,A=tn/;<l`h[-:[>e/L8u:7COo8JLJh&UV7C.%[mTNc>OiIr<KY;uosS/$%@fU:cdNFo#3[dL^eT(qF$?eSVM$(.)q+GB``om%&rF+GZ$13COpqG\WW3&3ZH(lUr(mH6,5qBU)bf[S%!MVPVg;`@iC9!5ocu+n9`%3L\D?X8Mfk.O^39Gr6MLBhVA,M.U!HtbdVjh<8'2OE_/E6VO`0n(dF@<S5#bRD;h5O([daQJ(,NNpo%AYV;j.Frt$J5"bH(V)^2nH@D:,5D@'?jiqUU@NA,^uM^t#i_&M]L<g[SOV!CjuP\%>?dmJkG`OQ?oA'#R(:Lc6nlj;&XbYok_[s'%9tgFK%>1'YHa#^2*nL'q4JT#Xs2s8],,Pi6$3QgNPJp'UJi"a['3Rn*SbU.LiY8_?b7+I<UMm?@1VnY`:"pDdOS<5fCPh+h`IgZ?%#AkgiU+H3D;c3-qLf"\>JI%F+H\od7c"60n6`7lY_9:21!&:%+Y=H`iLm;k=:!?AF9NdC!W1*f0Hb;E38n9XN:t73tLUhj8@2B.`%YD%Kc%X1L').7VU\*Vs)T%@b?-RBBWM/Z+7jVk^=r56?P4[(XU[[/2I9#.`i,;=kfT$*_A"IP(EmTMqtP.@&&W"N&H/Q*a<Gaj4b%PpE8-A9e0_1_Gj:?,A\n@(Bs?\;WZSKG%[I',O\DNAaQkRA3n,&6L^,#[CqY@0!@IY=(0lhX9>j!aS5e+JPMo+)4c@U*P)KdXSFC%cMI-d$.N&X-N^kP4u3W<gb):VFVtI<6e'N+W*PN/_+sP<q'(EC+eJ`3YQ'W1QOL-hW<H,k-Z#dm^+*Ct`+M/O-F5pk2/GR*gt:#9%;sf8-:fdjgk:,/A2Er1>cgEr1j&"W#cGi8`'>LOQY>olh\2atjYsh(]3JTg"-M"@]=,FB4f!.K!.:Sk3'A8[A63-uP0KX@sc41bt%l=Il%S%Laii()D]oscV4C+"U]kiT5uBJ@^aKq.N77r3Ac=e3=T09C(i&<VV9>`qJ\qFe%U?^aGs[OF=iV*^e1%"8&.ZNi&o_1(+"%?KZZ'$SX_0(NR\$XOrQ-i)`<pW)HtkI8ZZo1a>`q5qCWC?+L\<Pk;V#CK[ln%A9dd;5bkX2$:%rMh-O'I24r*?sH1qq(O@+DmsEL%iNg/<Kpi\ij1Q=.gWmOH^=j8_pp?`K#QE6d:V3f7g=l5-W=684QA/]Ul>@Tb+(qUmeM[IS0^E^>B0U;Y.#.sq<n@#.P:4IS)-+cV%TDq<p)/S;[jH*jmd)$kCEGBQ'4YaF>$-ob$g6;\mJ";Jp#\HuK*i:Q[!?B8Sr3/mZa^?TdY>_H=:)#Ti1.(/;WSJ&t%k,"E]BJ9O%hQ52kj_Fbm2!W(+KJ)T^5!T(hk"g:g+j_F0R)M<aEF)iNKDfnTO_o%d;n$KW^+,EL>>j!FUU>mnmO%Kc86%u\,![.W6>Y@hZ*S*J%,JM)K3p>P_<V?GRTk#>];YY(%%?NgTb_7Y)Z9n&`)EgXXm0G8u/]*>!f/88ok_au.J@:]Ni,q0HH1toA*"NUf0G(%/p;K#oLdh1c%:N38m"[P:.bbg5@aFQ>-jE^H`"O/<R)D,_^EIqB9qjpeUgSmVBE_6C?TnP.O:V\4s>IlR3N7MAa#@Oc3q361fkgd#s?OiSsjld9b%!:^M8N.c0rO\`i:MRUdP<:"2/3*:9qX85@l(`GTHn`/#?`Y%e4kYnmBcY)YQ5p$:Ki&=SYi>I%Fd[Rp=m3Cg>),pnFZ)g,E+Eb=U%ILnSLSAUen3P^mkB#:S3e@PIhFL\3?&/!=;KArUmH?l%+K;Wu2iJnSZebhZMn#lfi&]lYI</K*nOI':8nOdgfk]("F4@m%DB',/=%=XC@hl.ab.?.-"%lapD=7<22-Q7eTMX6!i!*,Qk$MZ^d_2P)G*r/[LmfSrLK#Mc2X%gM;gp18[9=2YXk#iPY@-AQj;.QRnKIl[="%?tZ-DQ8.fm5p0h[ReI//dRbrq/MrgPb'bh_HQe8N1T"5(ZAA^eQ1fU+o+eFqJq1kdlO\ZirX?c8$8&Iqdq)0Z#P?W:[aCNaB-t^\%R6M:QAtVaq!Cc%HNXdTAi>91CF7d3pViIIT2<&b#$rsEcWXmC-M$pp63->_bH`X+:2S6CE=UgT7dH9l_*3;4l!$;Fn9'`0p)aLBI%8bS'fIBAV2pV1KJnd,56>:REEZVC5KrVUEX<0(mq$`pMUN8/lj&LN0Xc`+hIEtFX%hbOW.04GR@ZOG1Ma+igM/;<9m9a;]59n_6D%R(0m0&5n8g#ZX,5d_!2j'2e8l3,LcEX2YqK,@"hpg=>sQBp[&CK86XY9r)F]mNd/sg[]C#IWXD&areBjVB.]cFO)0_3i&<gN&=Dn%XZ_XEJnkflrarYJ<$5]+Q1.*CLK`8FCEl*AYK+=eQ$JZ\Z9W"B+b"6s4Ji[/krNhJ0c`j2F.JhXc\A^8OYSeMakZ\:@!(`2oDQ1K%m)2KGCf0>EfJ^ef^`;'[To2"<,sZE\V5@Y)o$pcM&dm$\0(2@7U2=pQ)#\+b(0isrAnjO>>:@b.@>7#"/FL!VB]PFm`8UFoht6fj%@M'73[`po2O[2e#=FPqSTJR9q>"feA8^lrEf5r-Me"P'``Z,+A^3DlHDnd>0`\bqLgjZA.]Se4@JgYF4EFRgB_nD+6gpk1c@<4sO%:p^fU'8,,J96ar>[!f`I'XDc*d,>1q-%%:ZC=&]SrQf[P@g%LeMJo\89VRg9U0XKbr\M2.&#ltVXW=-QXH8p^QhZ+OAjts]"MqgE%(*8Sd#FGd,c4cXSO;6Q6@UGB)&V:3Mc"edd0tjr7Uc\^NSJ^UT;.)G)h$f'`goo&V"G-5S6n0#t#CU;.Y%/Co-mA'A][F>0GAG39%n4XHa8:`A:M?j4Pof.*2Q:3'B2%UJ8;%fNP80Cbf"@%5R-apfUG+7HX.?9;9Sr736@Y%KjO-[jI6u!b@+ou>oYP$*c9cG\,55Xts%jcR0l7Jo-@E-""eEZUX-!AfA#]FVn<PBgD`T`Ju*5l4O;LW#M96P?_+apbmSN(j\PN[Jm=9p;]@GmN+3_:rWH!"P'R:+`$Wdb<0i%Y=GP=dh6'/q`87cZ6)SpR*lOMcQd<dI+9#[?n":YSsQQSObD#G<r/HW\'lcBCm#)$s-R9UgjmN'9-O\4/k$4;K"^(\#)u53hc(?]%4IEB>-K'Jk4HjM/LW+WQD7Z=hOqA%HLe<IaaB'^JS2',mkK8?gV/*LN-,8@(]se*\)dbR."<>#lW:YQuKU+:*8obMs]QnU:e!U3Q%fG*2pcCWf;"4"*-;Mr+c>JlYI]H>a,I&8\*:&rER&XT+@ROgLXF/di+iBoZ;EA$j6eM)Ws5u5cU.F@h^4:U.m,@cS;X_4BYd+7kV%IJK"BO)_k[<H;M@=IAi<>SBU3!"Z5'8o@/Gi`W%6g_=mh5o.&_V(*'-BFhcNjfVCA&pa*5WXk<WH_*^@;r@<Ah_3#O#(X9H#6i$F%LN"SOS7)kM:=6-Hb_-Xm#S5>GT'*q]8%Oj/&%'QW2k3%g[5BR];0Km2YTd8O&62aLEd,o`?@@cr7uEV["&3q,6#P^:N-oL5=4[BC%*,PgRj$Tp%CrCEip.V.IfAkj!Fr_3n0P*9<CmYfWip%!d3R3`"L"7EcjE:/AX/s,*bXNYaDF`-HHifKj-4c_)[n(pZ4c^'f1YH%6%.Y35TqA>T.8q\e^p([7X!2+4TX8PXanOHJ6>p@_%9A9b)#(C9@$ICp^U1D/Dd+fea2D'kr),?>1G\59tbZ"SEE?6I%R`3YT1(NMk%hPlQU?hY8U+H@Y=ce5#jQF_CM[1Ct&]&;L#1fTKF95T>&T?Z;J,Wk5galAb&6pS]8[!tYE#ra)AKBT)qX>#aRf/`GeLLF=!KBYr(%k5JANhPKH&p[c8$'N+Hcm-r,TPJt_YOE_<4-.lYQrN>sITCW?*+8MSMR\lj:ToQnCQqdLK9"TaR1rH'cc8jcKg%W=*E(O-gdAD"4%-?-;PDb@nW?rS]$F]9U=k&N-t%n,@YX!;PR]&/Rt!(-XWY@l"YerYQS(k9s\2N/;@FkiJFK6fhQ`7QdP(10/(0FT<OJO!2D/MCo@%Dn`h+^5^K+gc]bE)p=@?LjG<[o,8TPn!Ya1?d_iqQ-aU;jLP>Od46IKP6ZnMd52(4FW'=H`KC_fp5O?7VT+g\;:R0_JapQhHB$)p%#",RA77MY1U@"6YZJ((eSUGti9b1>olfn6VA%k\r;pB=h=<p.0^c,/8@/]=NgB-O^D[A#K)lAM/i(hc'Gh*\bKJ5hj]9-Wii<G%V%\mMXY7[X=9&0&jm6O=5=Z'dpb!qpS@(*@=,>hXH6GTL^mi\,Q;gfEjqH=q!gI6UI/(h-H!&l'He2(U5agXTQ#7f%pLgg"n0rbO7Q%qhh2#i:A+Yp@YdojR)='.\\5RGrM.S[_Ck,93Se8IeNk9V@(aH-5L)Q7^R5i^7V8d"I8gei_S<N6lL5J2i=5Ybm0S^iS'>&!9MIh%U-oEQZE)Eoqu&XB_h$`M&hLomOMCik[>UN:4%Z^kLbQOUFfFmE3de,7:^OrN!GDVt#7He@E*16clum5OQ[Upu^6Y`A3e)K)bq<)5%6&XYp(RkIoXL<7D1LQ4YU!5hfB_B++g".XcdYqOi?Ih6HWt[+_7u-HbT>4C&<eVgT8MX5l2/kaPVt^gp0:H+;b(-]*a$(Olfe`&@%R-T0'"97?poh\Fh&VC'2SrVs=1t23.Mn(D\B>AL$<VC#gLu)\S5iUtJ8^uK#H!VA.$"@<+!+hKmUJ:tF,A$-*Bb=(qY15tFOLcR]%4%`<]if@%pad\&lG[bEg8-2:X@c@:2CEjTb`<@5=3PV_<)*3-0ajZ--'fUp5BdHOH!Mqu!)mm^<QQh6o&:2d/i-P:.V]>3&Toptk%<orG1:cb^:&4qD1.(G8[`"&OlIHr&tX??4lKm3f(H0:rehdo5Qq1W4^F^#U@L!1rrdpg9,b!jaLC;Luu>8=\R7Y#7U".PckqqHcn%e>OiIk\obrm[m<FP/+PY.A?&_TtAq>@;@t:0Ud$8Q*KP(CdOhlQ4$i#<oTPA&diNNV,=gY:5asjeCULi?VF*UQWYSg@erVbZ%[d=%TZ*1%T>4OX:A^pps"k7r!Zo>Y9<BDaB#X"%nJ;j?WA^h4*=[6a(%A*2cCD4N^K+*?8ApO5cL"[P$hZY^S%rjS>0\[L\k(7kFt>G-%AAjcgn'?8R\K&6;0ImM_aZ)pK<?@mX28PL:Jb17Y]atYCZ`_LHoDNP-0/7q1&B5g#8XG=_/U:Gh.,/pe(+u&27dH3Pa8mqML9%!:%jda[A!.I(+k#,3AWF2d+W)MMY=*Z[FRUm4@J7H[+5k*UlbF7R9,*PO)$h,9,&0)=$s*C4#1EAlV5N*-(K[P%^Ehh;h7R.?nZA*%T%207uHP\*_J2jlseJfqTS>$<mY9;l'%Lf:6G;[%SlBkLAO1g#/'\nI1VGW]hXN=K/FW],ZVaYr*KK)U3\IJdUHH6WA#'VD8;)>.Ep%J03Y,W-JDK;mRbcR,p0!>g$)E>:>NnYLA=#q>Ig1Nq?g*i[2bM<OU;_:4(bJa/OH<#I;L==.&Z"\97A1A;HiXi`-&E!Q:[K^!nNU%gDp%Z5@Vq:m\YSM?/V">q1$Io/-2jVRXiW"S98NU;1.C&YHC6=5^%Agn.GD,0TK(BOrsPtBi/P@`AE3A%*K8C>D$Wi^CB9&ia%`3%$##tcRs>r?a^WL'"B(au9,`iFD73K\qf0iY6A$`=''IpY8`!DnA+qGK%=K`_hih%=S#tN0<5MW]W4SPsr2R6XAP4WLZXP"l5n*IB%TYRr`!`A36RJlZVKmU\EI,X,McprLHiK9M*B*68.cV-N4a3,/S5[,!N:??(YWp[(Xmt"pM,X=LFT#7hf%Sr/3RCW?F^R[Q9('F<>%rd'Bl0'E`ZIHS84bZUf9?r/422@#q8?b*`]njuL+d8Xj(kCe1X"Vo@O=fKrY"M^g-2d2/aY:>KNWC1-/gDN#"E#Y'l9P$Et!i#_+%/DINC-E.df8.d)lnB':dKGUTJrTKC_Or#PEj=lsb&04H&0dCNH!O&aPa$d7iJCf?:Rc:LX9L.%&Uikq7D5FGKafnSH3;OiH@^!ug%2/0=p$1iW`r[UIECLN=Y9r3C)HH2iCP?Nr$N)/8Feu`eP8.\d.j]<R[!!1\a)]Bq.Pi-fi33s&d5A7$[W]FG`Tr0Z`;a?M[#)1rB%i"kQ-X,\h92l^S`,-a9,U's3T."SU!2^iFGC(e*Lmek\'Mp./YlQN@(b`-jWP^Au'`]B=gCN0Z4](eS/ooUaKck5RV:XSGqk!P^#%@\TE!Qt+W$>"Ko1Zn_H>>S513a/uk1i?]<lQ!B,I6]*7ZTtiM5p\RCl=4-'l]aWEPU/YrTEXbgf0c8501EE,%%KUM6lM"c,$-J-4%#3r/r7j^!TrQus>iOXL2EZF("Zq8[KroLRh*G)D$")1(#IQ\DP0;m5>iTNMsp89G,j\9Y8i1qR%NfVGaIA#K*ZER=72$1aO@[S<)%6Vq-):KRkO:<%t*,43O\FX-r@/+BU(Zo?8EJjEW#B!Yn-@8.Ka34_!*Z+?q#/P2E]q%*ma5-K-e>uUTR6$IuN@JNf'VV#*SD3Wp&%ni#U)1nu:m9VXD";iF;N7l,Fm#J,>?2DV;CfqPK2"MiRT@Z;r##n\91UO>Op)1-N)/6.\M]t:,b6k;sg7d<kZL5F"R=qHT`[Ff`"%hWIoW#hl,T]6XSlGoc3+ogf\qmEUk6#]2<kK9fq[fJ:R;VQi06Ph,Vd81_2%B;.f[iAc9ip`"9!8`Uo:!/[6-@AANYd"ag[#eI8^%/VRE%WfsNYX:tc>gLLMC;t;>h_O49VHGKA/Ed<>=J`qhJS>#ZSRFIr#%>GlgR[h<TEo\:,b)s7'm0Y_WP+-3ETU6*)D@eMdk3k0>%eu(mAN':#fHBmDtG0@*g4bMiFRPSAn90<*_m*t31Rh!@g=qtChWPRT3_5bFLFq7;^A_L4jrYB`.c0IZbHTF9oZU.b"M<$<\eC8MA%<>^=!Tj;B[5"?'#`Cpndm[06YeAnc?5VhK.(7n]ME2&cu)'M'MO>m@<Qr3gIR>08h5k]DXkc*&CE:M@:m6YYGMU.sT--*L([KK:K%B#'\Nd>Ki#+'?k:D.]`(j]33L9a\Rl):"Q!Y+XYu7Cn83h*BuK&^)V[9IM>.MAYiQ995ErKN>4OCab1<BSUom.+cQGMm/1c4%04E%Bg235S2&Y<``CG`qJ6kK5.l)*BLXE0""22]/$>YZ"`Cu1-g^l$7gFS"D<QsJ=V&WcNR2B&<lD]K!H(9$^#Y%fjB+83WFSpO4M`(!%CWmLDpHm2]*k+K/]GK?&g=h$ndBRO=-BY#B)N+2GH7lsnKGOcX&q%el9PbS>,((lAYn\7@hOP7XeiV[HF"8]7C::nsoO\A2dc)PJ%kMS&_nD&s4LgVD@?Iq3)S)W>o/k0#=I!KcrPuV<c'D`eEdH.;k)Y(e%K3VsLH,gg]@T:$"pP<ShZh4"@hIX?p;!8GE'U6GL<*.b8%hu_bJZ;eZfm]uZ\n%Yb7hb#L[ajL\6-f!)^K]]gEUkrnkm`.ZaJcA?!*UNe?FZcq#n,`NgaK_QZ>u[q^QcJrpm/19.5:-eS"`n\/%_a-bRIsJ(Ba6HV)I\m8VRr^%&/SYHIF&uE,";Msg5#iF2*bj"pC%G2EETo5)STu+0i-@E+53anO.):S79/0(2@YPasNf[;_2mT"X%6]@3d7@U<0X!m4u(u+l?F">>7kaoNL%!2URE/lNN-7WdeesGdL)FpP$6el-3\6&C3<3GFk3CO9o01E@.#Rd^lUbmR@[Df=@WMpef%=7K^JfHr&%B<!T-No6I.nn:283K@j=]CY+.r!GNC.O,5;1=(3$IBV,o'm5cBM<1qVEioaF84r<NQg/q]6Vgb5j"b+aW3(LTl<=ep%4KGKBb"PM]4:9mAAQ>bVQKkpG?aX_%7qE`\-fkT)qS+GVVt`W>)H,<il^=H^<qt3@70V$3Lj]V)T7'Bp*!;*5`EUg_+dYE[9&:d-%3_)/(`ECH")-=BSXAeljC"b%4Cu!,Hm?MIu@X%qUN94Dhb9546Q$dhV>Z3SR88^.N+(hHL_X,45n&NC,8B0p%:a'S9SG)2Y>.lQa%.kUs^WJhW>Pf$dtYr=A@0Vj]K#beo1Xl>0*kIgl$0qEfaf@r26q;'/)(q)j:E<sJ?1-O%9ogG4e.9o61A.n:?iX7C+9T/%9f1oMl%k?=QVrk"M:;QK'iJj."L60OElPoXPu@EEeS0cEb8Z-#JDl:qQFV!8@BbF6OfDI=,e!lHT(;h&O9bLE#)0N-A6rHXmV(@$lB#^M47%#&nN"",ZJ'bXY`hH1o=;R\Ft*VPYN[o_W`2LY9>IIH1t)lJ12O<^b#-qJ7cMO;PU^Z=!1HY9:p>)m3"ogR`*$BfIi(kH_lY8^`e7%%k(K5&gD_t&_;:3K5kf>-(CuW8'MroZFc;%S_WZ<,1>:jpnCh_4RK`JDNh=!e"XbOC2eVj]pu'\Vi>ZHEW>;AbNl_[HO(gMgArT4%U%)"BkSI-=)Nnce.F0gJ.[uFDm0UU);'Lrl7DilZ=/e%A$ud6Uj"C"JkFmrj_&EtT0s+Tr*bdB()-@F1p'MgW(G;P!1eS&AW7uHH%8I(N<APm=/2S5ni(n7BTYZe\$[e;>j%cn4'Gs.O3_aScgDX8f\"0&i(=0,dG5a'13@k(aCel,#OBs`ZNop!&HF'5G`'5l>@]p_5W%UJF30^Kt@^QesIeeBlHC[[=bXF^5sPpD0Xd.I,&Fi9NmEj`HMK7rminR3UHE?k`m/%F)/u+N'>lm?^Yb"F!`qE3(jqH043Zd;o1i%$2h"=4FI^^>"u!kaXu1In[lu5J6#N`&Cg?F0;5aiOp9a;=7mE"T-c'EVi\ISY.=s]B)"je\)E%&9Xd!-<p43d$9B\rr]QVg@T<28%7Yb#!%B(6Jm9;VIW7f?>2E!-8<N'YRq/ZiUo;ZAQ*Vlk:O=.;F365jE+2u:,ciA8%Q@#;+!e#7CP".?#`A!#SDphJ.WXr>)$^\]p%nB8Xf5q6'D'\$YFg%sn/EQh&#n1d7!rJ-+q<q&7$O[>&^Cn53s&U0A3YN[7a?#)[n`$-O&e`UM,<3%[eSu46(D(N`'rF'\4&ldQ(%ouP"M8^CAPYM)*=m]e/@LP?hkR`7?5OV@'9IQpRno]86d@DX*EWP1-rYf&TdXCe/Ca#`/-AaX&5s7/4MTM_hX="-1e/VP)rXC<mW%CQl<`M!'8q:bM+b&pkNh5Z#=Y)mmeoFM5joVA0HqE>Ct7S`L?mO#lO%:YX<=.hIIOiiDO(`gBL%0dsU*H:!drODDW>%o4#amAf9@%-,3#0r3U-9777:phW]2SN;qqeP]!6\"Ge(?cY"[+Z[rcEEJe=R;Z6JgZL0fOT%2b%EBnq]4e$3Gfl_$rO.IUcRRt9u:nbT;D[JpE%?c<J6e]`,&[b3pX"h=_)K7S/Q)YT!>5MJ;sm[HQWT6Hah&m*<Lf0P>aOdL-S$V/3u3DXlf]h83/mKMcPEOV@:HHp]JYCdh#;HQ#<%DmBd;4b\'_;iDlLgE[+&5!]J'('#rI7l:6/_c1sBZSJK4!I=N4!`?NL/X',r.Q0#+[*(!I?5V!qc,Y=E^RJ`/)G3GP-VC_D57ARW%9HCA',&GR#A<IdjQlq+S`JQKME#XOA=Q>_K)MlQuR>Zra$sQL(ad"#[)KJEl3mT&hqhQ8fP6<(hm@lQkKZ:uq/AD"/!1Y&Y-Db1V%\8J6DPdFmW'N,C3a#u:`pa_Zo>1V^S<`d5fCL.("i/W'gWT\o=jg5[ar`r;EJ7)K[q=Ut(%N^roJ;BT'.TQiXFGpToEn-dJSKI:b%gjP,oEJ;A?ETJu'89q*NP>^+jfHJ=Z7>o@?1l=48peQHJN05(/k=8a4AMg@H/V+1-Y:H!^fV'7D]n8VtaYJ43K:<EjUdd-*0gq/_%-XVNJFOH=:D7)bP#:LY`K*-.BG38+3&&VSKpG;3SHl<9b/E<sE="<2GkQ#$VH</^>Clh6B<#tVaR."=:WXJZg`/F-DF[-]W/:=He%?sT`#4k^NOMN`UA`KqgR$U:AOpR*FLRGKPNAj;hU5g/$P\0*PZ.eiV^Q*XsZ#pD_sU_T0#+?L4f.?4@4=&EHO?I*+_NM+(X8iZYn%O8BK<4HhLr%\V=\Mdl<pgRZue0:P8$\L?AWEKM>tlV<n/npUuP2LDm%U0:?CnCU2=T.M.e'=F30<BeOGd\6R23(9.9EZI!`IQ0PU%41`*/S/Ro=%X'Usba.3'h[F?QR`;d./'dF!4A%[;90)b^kJ3]@?#$PFH4-hGd;30K<n&='p@<CS7eSnfg8`[7G!&L8=%.fjk`7VD%/k\KJhPkY*FO]\g&!SVi]^ejf$DFaV*k$GKf&l:S6F`ZNC8.e,U+LjMFasZOX`.+?Uu`u?K.H/<Da4a2lj?Xs5YC<&-Bm^RS>QDA%4&41feXTX:Zk_.=pD/(-9pI*%*IbiNpgL`YZHQ\8F7s'!HK@BK;aiTi0rld_,M;'7SF5K5]7N]8!/:iReGq=0l0m=O!N==<>J@`3%&uG`3ofAVSII^ONX@Mndd]9c^M'O?j^3]V,?;8V(om-Ek\.J'/=pBD1\Kq^WPS/7.eb"5uBNPTU-:bB%;i.5o$Dj960&+6Xm4>R8%BlO@6`GU-K;I4i`iaP(KW,2c]^_(7jdfc6S3tO.2B6r"Ff9*IG.4``s.$h^'H'pD\/3gM@>g-G.Y38XtVjJl6rB0KnVC4sIQ'gjd%'S4c=%'X.O'8$emGfN`l`VZIS<2^11We!d:Up(IKf:sJ1kl'I]\95n.X6pp+`gPgkN`of["a%t[$mBRdBANhoA.mn:7UHP>,rNU#%qI('%Qu`U0M!;#%0Y1!.8aXM"?-0t0*+ueJXPm2mKK,8bMKOW@q?5@7#W_Q'D,T/[b+O.B/Pimh6X@Q8Vs:8!V5Watq3XhkZ"5gf%*\'$I`j*^j>o?2&U=$!/gKh4e&XG,AO@fB:'m.tu&BG_N2;j#o$FC(F&k`/R:\j%kM*4-*[LIR2Ze/nriPUZ?e(lXqZWG%5mf'LA%Nearg\4&hEcm$s==oJN1Whtu8$3mjEZK!Ycd3&>Ccet*M3T?7bkAKm<^04K-iD-D;W'm=Q4M5_!N\$Gj<,s<"VBVR96B/ueKILmT%iBPI"rr)8[k5.!$j-_cpc&mn7#uFe#am!e[Xut=,-nT$ep"fBnSdsMX3Wl@6JZ@b?7P;E0@LC?f*"(4g:g0n.Z2O*e5k`5lF_"Zs%7eLFto5H88Is]prOSL8:rL*,Y,U8c4)dW:`>qc$KY>T+2*;ohJD(X9^O88OF"0!i2+6t@a'o8]?%9$8P6`9hPTP+!?b]Lee=66No%XLL%u-sQ;V>3l3M%?J\GRDX=3(,D5USmU='U-%nAB?QrXPTqHZ<!`8,'c%OHO!/m>;Li:]`Q,u;9tBP#hH:6TpX910+q8Z_2^BAo%[TOSo;`Uds6Lr#?>b=F[0t.E<+=%D/%V$Ra"NRT8Y7PIUPkT<HQ6B9_5;m)7ciZl\Z*1OQ&,+teF@q'4)&V%]9LM39Okd/7e$M--%s1C4u8qP-]#u`Z*;RDZOYF9[E8UHUk6QcG*2_rH_SGr>5=<PWF_M?qr]a;I7YWW#?R&kN87E`::O_<e5D)AG&]+&u2]>8,An7]cQ%._:AaqAEU!,IIpWFsink_na\tnnIt`KWWa_++LuYYJ&51hp6d5JVX.lB$IS&#mu9?'^73/nY13a%6L!EC@"gAADg5)H)h"inG@KL%bka-`b-Eo1&@^,rW>C2nVoc):Kg*=/K%>^k=4_/;UrLd\Q\I++#j<>GUk6O_mE2)nQIF+A]"9P:9:;<:)1c7H^Re-T'fkik<RYcZ%'7eU_3%osVCfmOPPZJR5G[?haWTr;jV[@7PmbFRtWQ4cr,EF`e0\t'7Oqn9iOtD=4:N*Ls*$n)D1r_XT+/F2s<0Hh<mJ*BEb8_[5%12,LM:j:*?=O?p]4X^],?oEMDX+)E'HF:$m]G;7_mL^"t`ccbn:47r8\Ik_8@@M"3TrknnZPX)>L#J\1`LO8bh#CJOR$%i9T0e/8%<Jd!a9ElBA&?:PjlT^^02=<\eoDB:'Sn<X=V5c6W(/.!J*#bjYScW(`XiK6*l]/S^!U`\/b[5LVic]!f/&GW[U3IU,S=`.'P9N]`%]&h!FU\SS3<C4^3W)iO)=Y>:Dl8lgBTYAcPGh]:)EUQ8INKOOud=OVD]2`Xo;B>V;LsE>-p2ERYaX._/(:G3)-Wl#'\EN;BI:mn,%99,)4c^'GS.F5_\f2nhi6tjVMdp+153Iid0o4o.P)p?rEg".[6f+'4S`4YN5lKLIc8>r$o%V2c#H_l#ce^&dFYf+AcG74.#4G6D%%!B=;r;tJeZTKc4="_[r<I1XjQ+fJ=YNI1'*$@KL0DBL4l.6Zi!375b8Qu!2Z=diZsfZYCpj$[<IPElI0>hA_T0:GO[Q0p]Hc_=h%%$pMrpfTL3"Y,,!6_oOn<66<0!)`BS]dM3fR3Wa+orI2@4&VX$i#h71M$7+o!`+(=i[M7/4Q-^30qq.sdE+%)AFVB"R0s4cp#-",>%_MZsF6paD"=&;&\ie&e*U;bWc5hH5W@<bV^QEKF#<BMj0q>FpJe!DF?m)1U3]JFY$mP`Xa\+(o6^-unKb8eKD6C2l;Q_QucJiM'&%ipb69>rB2Xjs,?:!*W@!rp",%2E7"J!T]E*Mi</K-(P50iA&mJ^0sPa7/??l0ilM!TO<AUS^"^n,GT7rl;GQ'W^7!@M_!Wn\_.P?%Ug<.,Q#0Qneg?h:)ar9g)c@@RE(8d0C]8!]K,.FLZIiBJOi('GO6TDT$ZWhR4IX-m_`5!aNJS>CiTsk/>f]_N-Ru-m05On4NP<-B%>:qq%Z9Xbndu(sk/nU:8hsENGQK>Ms+@<ki%N%tr.^KaK>rghu@R)H=L.!l;W#n);lC1*R;;\,=BoY!cJNZ[?&SGa]02$$D)IK[R%&jH&FRDpWj<Lh'GMYF4ejYTE[@:H0oGW#;g7Ia;#;e;^=(Q:SQ\lU?i^WLO!MHH%#dQre$07LB?.<'D%och3Z-\Z$W1J!%Wg[^_b%LZcf9fSZhpkuPo>I?jOCQNsf?^$f474HLuo1Q(DH'r\cS83R)(RKq/H[:B[^G"[Q_=uHe77[CFsVs%Sqj#8d+#MP%RE/N3!2gX:3%qb4TqUa/M_SdtBElQui8gun"Z,!P"2`A@*?]sMT=X6Hk.,%]GsbNa><m3M#Gqs\]t?%pK/]le_@JW@oWWBM6J7dWqBb!u^T8`/>4%=J"<(aHtXs&\!/r?WiPk-VU/<AE!o*?eu#Ic9m$+J1/d(Be=X2p?f7M#<i4B']d8?9pO2oE`d"Sgr<.#^1SO"W1@XNliB49d.*dr%(+'jhnfg6O"9\535_4Ab$l.QhAu\^Mn9*(Nc,YsZJMXs<:R(o&M?4b3i]W[f,Y=5e2FJ$..<-JE1.Z,q"rkN#et\7Em;O2lFi1pn%\-laSflUg5a?23c(SI6Q%RmuUZaT(]!.?XK,//@@5oe3J%toNo7JromKr0-U,kNV#k3+gC0mBS.LeXOh!CV7+U'TXP$_8?fN<$=l%Z:UN#VdTaK*rt+e$0bo*m_]u)\T@;#](SJp4:7o&jNjeD":?q7@:[DTFU=%#/LoAi4*g]>8*,3T0hQ6*UMe'DP*G.I='_VO*@J5=%j[Y/2MUs.O\C<M;&hpogchEN7lb0`'JeNV$[_N/4/_7[d=q3`LHQfYK0cR?,WeMljS-KTV2Ou*r/s#A81VP&%i)en]=6Cs'lcq-*%I9h2<Fiho5mse:U5+(>:YP6Y&4bQHE*`#t#jaUr9!YHg]H4,uq!fqT!UAt\DX&iRjKVDlc=d+u(Dj&AWUpcir#uE$l8d-\^bh-AV%;Z@ap&VraRjgDV(\$Y&^Rr)OopGR1[&H_1pOT>uTNA^TmUeV9Nrk5s4B^6(47[4;88F$31B0kte?,2H@`U?>(%l$Tl;"%\Rm(%%a%l5)U#>mB!4d\JJgC,nX:C]RB`Act_RBE5?<R>$A7"t:hCEE;$+J,3!?QU7n+)?>G:4G8u^`<lDhJdciKN*KO-'H0uhM>[g'IqC47%>>)c1hQ-+j#'?O$LNrB/o]]S<G`>RCaVg8I.D:n'h3Uot)au'M@I,G?AK:j7CTkaeN/C6]%iu/]O_BKPA$hPf<u2@K=4_ATraB4+%r[D9a*$d#UT1Tr50$a+='Ra-3fU\#>b-P9G>UbFnXF@:^fV]D]fOlMYj(>fA3&euj!V<2hfsWrFhuT")@tgSEi_lBb3ikV_(UW^m%!8*<5SA<^i!o=2Km,J\:H)E-`K=upr"RK_Q8OO&o&9L;sI(e2PDNA>pDC-nAGllpVjKX@SZ-\3o,_miVdQ"i;:R'1;8p]AtPfuQH%"f2&gL24T!\mp.T;[JQ7V\'=[//$#2g-"&0kS):84q7q#-7@aK'K!46dfK:Z,iW4@TNI\Rr60`G9[_C%g7Beq`LGGm:]e^'_TMhT%Cql^"8^]:X^!+pAL##fPYHnn[X1S_jmY*l'ie`aAlt4#I^d!aPM-G<j$a$Q!Qn?_0SI0r%$kck@UQ'FWL**`nFtg?5au;6*qNfH5%BkI<ig96I7*B8<I:3==e0lEZ9lu7,rgHQ3*pH]T<@^HiaC]rHHW\e&5f$jH,/[7Fdh(+66^\diY3G5I_f[3,-:u,skoB-l5T&:_b%X+QjRaqQVHrP0,3V<\>bi9!Ai:fq.:UKfC4?ss5U;jSe8Fs@R(93I['1_'@E/29n=b1]O?l[d[K]o$7a:_\PQI5Io5Cc[eBrXo/-%fr2<._cj0IRT97LTTTMj/)K7f`9\7p^MJ(LGrYps<sGs!R4&"L:B.[=I\$]&V7\PA"=.[=TKN@pU"&arnj<1X"P"aZJ0U[0U]E9=%^!mg;j?A<8=P>cfaR3l#4?<l2jb!hoh'9H5iP1_.[9-gGY^A7AjJr)H>$GUZ3<!I]#p%Xm!-J1e2+BM7r]fI&L`&_QABl/1JUo;t%f%f7n_/s&Qar+uD#`FBYkcW0oD^q/J>V^A/Q\GeV:r_*J&hch$?<.`7M-#ZG<t5WS:,#)IAZU5W]UBLn^au:e=D%5OhIGQ)8/6>h%S9,dNKBQ=WL)>j4Fr@$iC+tiI72A0H.'/2a+/jo1l.OU4)8UuS\s<V+MKX!^TocNEf'5+]VNO!qqr)]3#;VK\c72fFj,Qij40><P%j/,2nM2X:t\\4Y/I3*,[@E?"n9E,:j9]Pb$ik)preh3!]K0DGIi"_O_b0kfI9+5ATF0:o-n`QnPh'Prs%3B/q*>bLEIm5R@%>TbQ%Sm;f&3]A0\3g>/M,Cdm6eFh*%Ya!+);c+-G,kJUmK;C=g^E46&L@f4U##\aJHcUr`V)TnV^G^u`E\Vf7qNTEGas(AA=c>9idp1sO%4mM_Wk'`lWCmHV3Il35_hem[_o2i0?oDfnk#'-P"d,;)2WBfq_qpl>&0n?b;kWOWi_BIWFSZLFoqReS">pUEE`hRh7^Uaoplaij`%_Qh[q,ZBL:_SV^JD\pd2':<WoL`R.J2k<S+d1Gu:T>1G2kT<Q[XKZieT-k!`rI1!k!Y7TY8%sD:\Qr=&!f7qS@P4o(T:kH_!GO!=%`m>W27X!3,^`c8Mi;5e`<%Dh!0F,K4j%0`2*)A:g"#6p5l$$69b_P(bR\)J=Q%>%XM$2S6.GCYV%fN>A4XsST'tfDdYq!/29]N7X%ZE+XA=H2r-iahr>fH_>sWiEp;8'RrQfgUug0=r*!$[b+iN'g)*P*F,`W!'rQ;#Y6A`)r.,P6K_X5_'QA.WG?PGh$6si8]#[[DYAO%-Bkn$/p=]/P5hc,LgHJ%Db-;s.MaW'JTLkem\9iR-Q0h%h__kMM/Y9`jG2&6NRY^lPUT)U6N?'3Y@s*O.l%!&E!qB4)#H)\i;GJQ%%Mfi";4XL"M,PtK(>N<l'>Q!I1H*@m%_6CVp]qQg)p$VKkEiJm/i:[1f>;+t-T]R-?]AgGQsNU)V&MuP(Ri8-or0VoW3&`cm1dZ/%^j96M>.]*;2c<X7p/1s6;q_EQ2P#:C\3E60Sdb;P[Yh4B2)XIj@.e]hc^*:r:;6IFP3"&=X6[RVnTojs*SSKW:4nF.6s,1`b*&mi%k?I8l2a<cn$l:AN/Scq7/p<[u=3T$=II^c<#dWh@rcpH%YiOWWE66Z$]J@qCNcJs.-7m0W2f9GURpL]HMqr5#V=ji<Ao4FN*r^ic%E)J!c8!;0nGX?5W^$\*lYGV4li41&#nA@.Q$:Z!CGoOF#:PVQm8Ei[6n9@`BUX]VD,"nEL18."]0A/Y'LUTfKZ^@pWnBmC^:>/)D%B(4OK^;2]oJ%15&F8EgZ[:F$4*.rBhs&o5M)f/Hp.qOVu^t%fFP:_C4!dEq%Z:s<q%_j;4FcnoCReKV/kOF1le,ln>j%HNW7TWd?%/X5+$=%#/g=e\."%P\u"/'52Oa)lPC/_t<B<Lc'mPQ`C?]BNDFK>tL*:)YOFJ.]hnW94I4_k88@1+o$t5E5GtYGi^&LhRN8F+K#V%oe:C>/>Z#(*ALkenaBN?D]M,WkV:TH:asjSD+&KC\P?]Dd3*m",oZ7[qS5\tq=P#69'>ZDLEZ:dH4a^I$Ji"I/W*dWR\Xl97)h8-%V<:K+0hYaSm#fjf(J-.m7^g7V(R+.D#7F\/PIRl82/jfr/:b8'P'qO0AD4?OPeWglV-U]$aDi#_M!$Qc82uKYcR+A$O?`"e:(VVQ%jq1D3\UQb<4(WRU;CqR9ZHi'cXO#a,9H@)\Kh#-*dUO*V)'M&3(gV4[iE0PdmM?1KA/,rC`M"\-K+$/T-_f%EGM`X9GD4s`T;SK6%esY?p1)9$+X5DjJ8"s!AI+93:?i^b+i_e:o\\?`Ad5loW2gV:kO(9YHDU,G4>`KC&k=AgrP"[Vs>M;sUM-*5a0f=#JX^mhagq9&3%8QYtEAL/b#YHJb*+(@TEP4tItbra'_do<"mqi_0l0>lku]Z2L*2Nq,j$jHcKAmd56,kLuI!27RXp+dEc6qJl0F#[MY]SM+A<7`1t%A#@r%+U#K(2s`BD=tsoN9:?eh%TV!qGKRtY;dapH/jl^#Sl</l<u7XC6DZM>bSYUUN6Rr9>;&/u5l50)n*qI'AS6>j>FXYc#0JY4%4b7g3AW?RZaoH\fBoM`EO9"E^G1d)Z/hfh<-;Hj]B.:/WHg02L_]%^TDn)C[pR?l=,SF(Hk">&7-Z<*hML/_'Ca&fD8EF*)+GG5j%A(=7C!R%3S6;eq5O4.]C_dPTsi79j"itHH/_,]&``i([o#XV2KYIbB-)B0\iQS;(Y&tLkCYrYOfkkF%=/[0o-%e)5XW6%BJ"uX'*%q'Mp_MUtkfDjWl0[5;E%9=Y.o7iM?7P[jF#RO"DHhn/"CkPJ\=ck)r>l2guZ7@h[SEK>$-R@bW'T2ShREC"m:;95)H(n(uBj\9Wi%T\[8P(4EFVFG#\i'1l1b7T0Flb*EgE4tY3tN9gI82R<hREg[#<Fe.O+QfY5,X#i</'h>o9<>1o\G)El=0kJ)2)%shRhLp9g.sI0Q%Jm^H=lFD[+=+!CW@5?Kb=k4Okc'=VMp')O3:"#+.5-gTck^,64$)]-Y_a#ZP,o].F>ak--\?ehSjY#1?)S-_e/aQt\YWli8Zrqc;%?AXrVL;mdN?hYV*[hA7Q]$T0p4oqT,"sIM+\Nim#]N:,/NY!#%km(?gAjs>Vld<oWqKeUUQ3aIF0")6+nWV>S6BSP6l:sk)s#FAV%!<g&RH(S'cX?tbrCDCHU%)/=2OiY;coKU:]W:UlWM#d\qQ9.su'ZIm_*m=LZonEfp=?NVA?&H0,P]F#VB"uMO*dJ):ED_t7b3ren%;TZp7Xo#`&Z/p9V53F`_PGMgH'F)TY3c$5oa]6W\HY.0[VRN7Yb,g7b\IZu0f.c+.W^GMbE<'j=#tCM"%"Ec4%"@kI8+\hACde76%'j%=<Ln*#DZ.Y%.:f.2lamNInA-WmqfsHh+Vc0m7Kl\#X5:l$i>08!Ms2/!MU_O$OJ,2Z,(`p,iU/Q+si[ukbZ\Z^1omup[eVSj?%'8;[c*Z#'B#LMnNEZrTN(JSZPJIk/%,TMKsY)(GQn/.jMau$Ot-,13>@,Fb,Zggn=X9a)om!rCFe7B"bQG!Dc5D&^8GLAOX'RT+H%N!7\s89+Aa/ftM!e"0G.W26:o&S=n>fS2a+JQRf?3n\q-q3MhrKh5dnX/4N=T=$N/_P$U$hrq(3!"pYrc>JLPq94e00fdq<V)<4I%'QJ_CAc7pbW#gf+/Sm.;7i'Fanpng[G9JorUd$k>O-c[VE.Y4pmW_Q-&2\'#D7&n3^8[e!(gAa/'hc]#=&'Jp.RUBp('+cc3_I(i%`#*<(:6od;;[nVW364LRTiY*I#$F0IKu@<SQce.MTHAS42p&!`SRLSh#h!"]l:G#OQ[S$mL51GYp5o*@Zu+gYegV=r)1enp6nBBF%1Ln$"K;=-[7<I[:-)5e]Lf\7t))F:9+]KS`'/=QX2_ZM_IV$_]K][NOhNR4*\ptSV#?Lh1c7':!h>&nXRONhCi6K2Kh:HLjri-R+%?V.jFDDd@0c;6)'e=<\2NcS-2^/DDDHdCEIcBKm;Gmt)r7Mdn6^*uYl1][cI/#ZFC@:8JR'AuAC:[s^35fS]1RrjfTk#E,pqJ[kX%_AlQg3im%l&pqPVSnc@TfZKaclT;^d'm<I8%p>(0qDDZET<e-nMitI&/-sS@<F!73`7:5YGA(A6!c\]qC6J&J)\o8(:LTQ,9K"G9%K$K/#;=op4_&U!DKd'b>k!\Q\*K+LhZVAWckMa`V[rEJ@kaKX]0;[."9;H+lQkFgP44cVcJ3I0)PLN@-ET1(m$>5-#&1UG+jS[=)%P:e]V<aNN;PjZfLm:4-0qIi]ZDojp+VohMRg=5LnWUR2F)+lI1dV6O$$T6"Ig+$aI7e>IeRk8M%_M0dIE/8ah&FK78c7/#.*-`-U%jbGFYMEF/cJ14;DD4@i)\`<p<#JpM_-jiRpg/\U>PaTWTcYi(Y%\pqE]e;b*HYJ;X<l0h+C'-TFLHBllF5%0)LbVp]mob'*%aM[r%plN_5_H\RL6DE<^2?9%2UHTPj6]/b@0uXusG[:oF)fEH!;ie69SOi^&78V>G'@FD9OiH$F2ai`%L!ED??M,M);4UQ:ZKP]@3raPj%VS)8VU<7>)?f;T$G`^c.oSUgm'Z1&o"1P/Gj\sV@9Sq3XjeQpMbVOaSWQ^..ZcU4C.WONnR->+(Qle,rSi**nWROb$J--ZpChC'P%-2L845s8@_W#q3(P9*B,di6K6o,1%\WCT"fPPV(Io=uti5!Si;&%W!aQD^l`IEN]20'4*1g7O_$VgJZ1:0l3u?e;-#/hdl2_Io<B%]rV^&U<Xj*;OFE-Q\bu4S[lBE:JE?o(XX;AOA_hoqp*u@kj,OpH?+7dVFM;a5QY!ABfU)AQJd<?U0'&<pkW=>iJTN`;ilXJk24pF%r2ntI#<lsQkQ"3E)7tASahrRK(?-<fE%$e;Cr`PrZaJ?0TY3n+Q<+%2(WlJ&[o^qiA7%i<X]s_HX7DMAJ.A&@%(tE'Boc^:]FDDO%T91<srdM=a(lR>bA,\j8YDSGD29?D-KARTc"o=2-*ltO'Ke/COca^$=]6D[@8SXUeNMn/LJOegAQ.3sR)C$=]LXVu^CS1gKP/0.(%:.9I!U/";=#[94Gi;hmml-Pm"Fg2XK<9DPM73%E?-8BLnnWmI6jZMsffon&%F%iQLiep-haL0RtkBf/l"$9J5QrQr@%d5U-+W[\\%n4_AHEA8,%-cA]_SS9C9@<k08e?1t(H<du?%Xi\da;nVtH?9MA4M\$8c:DaGeEb)bFbMO)$<k)GPC7_o?+)Spo0$=I'0a7m826h2%gB,M\4<()5qpir1j9=b(cR<)'_+K@TAYBan$N*_@5dP@MY$RfK"HLE#*s&["hl`ejdJ<7oBaBcrjJ-!J.%4^[VFL#"i[eNNoB,jS%IKs-.C!aS/3-5N=&B9dBVq5'uD;*6MKu>A,UJ^H7e%+];A"JTBN1'/Xo-fuo$ju7(Y7[28>_W+KIW)6T=.YdoHrgdgBil3c)J91[%CZI])fq6NS5M9<Yn\h94dI]UI">a8NH4Y3elaH9cHF9)[7&ngl0k\V,j`8A%ccS02lL;U2RN@sIUISmS)YEe0o;[hKmKns;P$g6@%)5KH=i^;>h;"]?iHof'IjBAkYaU$l,p5?`&4%dInmPU<U(3tpt/&Yj0%e0?/86pcqUl-#__^a4M%d8(bWJ]'&%_9HldZHqDWZ8=H%](.&q:=8VmOE>\ef?kf(KEDEk4`#&46o[bh^`Hj>dPk[iSWC)ppQj&2baV4A(B`6$@I<I>n"uLTOV5B?LLaid:!hIXU2V`c\6O?U%;JMpgfDXat+XKo>"1[K+^bV&ZE##YZr\RJBZAsH1,hFQLc#R[r3%XFmePGQRB,C&Jqm#BD$tDk6o>C.=(jEn\+,^YBT`E2&?T/W2%`JJ<+9(XR@nFtu"_8p6pRDQ*O68r11lp8,i5"L/l,KUE-Vdc)g^g02^RH0;PQ7?Au^E9A93&^+\'$&FlWq+Gt;"`9d+8I'`>cq(f%1U:5R'eQH@LCn(1SB(Cf]/eU[B3W4nA&,JI\\-mF2hO0SP,MZAN%unM-Lf]^fZ+nef\Qp10#n^8l`HQP@0+H90%LiZSXA7.H<e7M%-!,Xl]Pk]PD3Z>a>bjD(+YpP7(%,^,$uM])=f,7-#u!I"Z^bcnPb3c&>uq=4%Ca>W;3S%PodGWI&oGa<:^,NIc.@jVQ_HGK2V2\K%oPk98bZBY0Mp2GTP2\WmKEQI4BO48q(9c&coAr',hYT'46>6PCFbob<4j+u*8(7EBcW9C#33C):\#9[0=4c8UI=^%D<Z2mU2--tg%09OS.ifJ#^Mg6k49MrWmFm5M^TWL;I>ICTXQn-)$q'5*IoDXIV;EFJ3DpAUjIDL[,q:3Z-"H&t'[.AafoKF3]@[73'?T$A)#b$sY%HYaDO.`h`YPdosZil#r.a7ou(`aS;6aYers/RkhtP+[N%[#cY]?WNWT(mDQioKnua5T*P:k@+$_Bmj5+A@8^J%VZfsj^%L)(cB%*%DsK$t`,KEo(0\$*Td#i<a&2/FK^Ie$c9Ecj>YOU[\mR:7KM.-8eY*9(/%/W[K1'Y%GSG>!?64iO1nWrN-X;FIlj>TDTY.09%W=Ze%\$Ra\KrqO]i$W:&o^3X3Bc56M:X5]1?a'4MnhL\U4Zar@Y2i-@PkGVjJ[)Jj>X.MbR>`Ze3&iaZ@'.Tp>h6EnHM./T3br><=N2dF%eQGmP91]hEIY+C4QXUGbR,F)1[g\acVOsioF[TfhIS)A,.7RT1#caMKdlb*2UKC7sF6K%-4O8rajEb'/k-^Xf7c:*kMq^L;\Br'^%b9En&q5.73l\2QT?46]5,)0L.,E+KPi4('bfj0c+:btPtZLF&-9'&F[]``k:RL]\E&VinnDcU,(JAc(sY':pK4u+X]DaNLuA*I:T%ga]%M.W.m6]2ORhocLaIOG+O^loMBgVb)VO%PloT'ZG4E2!IjoL%Ip=Lh$u8>$B?m/59>_QI?6ko"8+V8!\T9;Wk$_F:CmJc2dUS%/HTU.A72_rf%8F$<WPV`/?^iTD7cmn0&hp3\2!F:E,%0(V#<KRF0\)h2*rj*%`T>Z)I/M,O.NgP>4=OVetZFiRbNGZZA4n,=!umO%;K7_2_7MmZPEZLLk<pof?kkkCdF35!IGNRLlG_:%L!57)5(>^jS`j\c7`rO[ilZ9G=9bEb!iVLGT[A3`du/R6]d9YY`6\!2jYl"#%:of%0mi=oWXK;P\k7+5ZLDZSh"If:mK>>#m\8j(>pJ?j0&m,u;IYX[RF.F#T:2.=Kqi;K0K0mbseQ4s;FWqgH6S"KHRR/IBkiL-n%VX:Ue>kL[eT4fs_UB0/FmUBUa-[f2.aOg$jF^J@IViu;>jj]O)?McaTo'U+CB?qTEe:5U?p)_V@X<jq!n&%]8p[b*pM$aC)*[I6#%o-.D')-3?R/o#l"FoH>.GC>Ptb(($8O8PHcono=$Bugq;crF$D/8dK?,:PWrVEZk0O[sEL!F5+T!<A3facp0eO<FtcemuG`Et$t^%E?D\l=5@-B!.\'@EVgZ<2kMHYD^bj4X9_,mm'ZW:eHNAk)#MEg!2IiL1Bo<f?U]rBUhd!8hs[JVQ-<_\e-B!88$7e.OpQ%I8nYHT%dXrg[NdEHJQ)&1jKEKES_JJTa?c_o@o2SfCk_K[`DNTn$"*(r9bIa7;kj%N2Eb&?r$C>8h=]1<3rg_e"f7gqR>;ha/98.dZBd=#e%Ot2d(Bi(72?3(\g<-_Z#$!;MF"<gkSK(a>RW!1SEmW'uOaQ1bKV.;J?3)lIS&OJu<bND1iA3#]_h5X87+A[[j\6f%X$l$a\^iVZH%^1S1s[<>/9MTj''DP#3+oDO"YK1)DcaBeQqVkI'o.cq$F7a!_F=$T0@bEfsAP[.1cBTMgge8H'@49UOg3b8=!k_?;A*sL&h@8cEi%ajtg+FK>g!)-2T5PY8P;/.A7"PA0T<7FcSfp;e4%#28W(o,/$>_u];HP%jlD?;UJuo^1<:aY]eA$o;j,!?]kaKhYRq\9OrR_AI,@%4P,KAFL.fWmo<Z`L[Y$aW"F_]cjm'ae^[BnB#@oImQ]V-r+-V5I=X#Z>^rtQ>nTYbWm"i1I&o]jO/j'JV5"pE8kZT"ZKK-Z(>!gr%01mdPs3N?-WtJ&l,(rGnYjuc(T'5nN.)$1F*,ueMT=Gfg4PJXJ7EGLTR_E9fWa&@cej6AUf*)0sC35QeM1'`19D[bm`3[a#MCFll%##PukmMNhf+nEQQn2SSfj#ZJGPPA1j5A]V7^:P7pQ*!X@kQU+6!\FV88e)tNa[$+$MVHN5Wt(/PD9=%&H7E,i+W"o6?;Cs8Sp9/[%F(e5)3kH.Q4$$]7*?]nY_^0%55.MrV<<EqPNH2I),9/:uFKhcJN;Ghrhc1n>7^kLbA1d>Pm#_'C4R>@Om\Fmb\iFQA(I>G39<`0d%]:8h,5hbC365;?]hQp'SF[V1u\7BZ?K&bIe=(G[=<sGp#.((s;\PA4CNshu9U?k3_,d*IgN6dT0JH/'DcT5(.kA5bsart^CeGKkZ%X%!OCDXpA'_>@rOJ>IblQoHW(+^AY<Sq?l?^JJO%L?2V5fC=W"B=lkGcoPNB:M8@Z:LS?3?&l:k9_dru5'XdO]BgtlW4:1-@9\Yr%#31ofs25-7fe%<rqqWGsYLkkfT1I'S<^1qtiNR%B5fH4gp8uA?Z$Q9&mDS9=+HE0C>FA@IMjqXl^E483<G=c$DM<[?ZGB0Hlpa/J%S30[P@(RuWao]`GFK2L1hOHV0A;/L:<cb-WU[:Btn#*k@:LPbhl_/>#hM9VpYW^('g72Qs<q+a6`R-Kof/25G/P8IJ`%'fnpS7@,%#+/3R*X'VZ;+(ct1DWr#9TDEbA\oQ)IbmOX!D6"9,R2RKmYCP[8i#:b$gDVA<=sg4?+\ap(_59X=&AONOi:qk^o)3J1VR"#G%4)d%p5kQE0I2,c+FM&t^r"V:iH`t3_0(qSo&rBeFYd5'qq]RhR0rh@omT?kMeK/lqaeD)W7$1OXY-CeRm8@:(#_ZWf<bY.Fj2C(M1_gb%gh.ueKqJl)ZjUm%>YY%XfJa@!Eb&@]LUH':iAujt2<3sDXnQ>Nit+c9j5REu+BqLtD<B?8_c7hKpr0udO^[oaS8;l3Q3NqG(6Q;F%#?$a1Uf6*%+!+G5oq#u_6KQY/nkAF##m<@d(K)'dq*Z\7[$@Q:0he2?d0"muRSo6_RSkG;VXZos"@tGF@i.4D+eeVAQ\r?h;q^t&%0h#!gIBe#/a_.o<q'>TsDfqk+)R;KU\LMppc0Enok[Z5&'JmSG:XlMp]_K.>_X,7qi;fV3&4MYI=CFXbm?Ufq,IJYfBagru)/4c^%qD?;,!IAM!A,.iRQ_IU7"'\/;5sPZKQbhrjSI%ZpN0MGfL/'m;?p_^:'TIO@L>o\8*2/'0%&?NqVA*l'AtB?/,nRVSpUOJ'BlIA/%?/cUbKs:'rK`8nVQqac],i:C<3D)\^[,jp5BitBGj$qDUmu`RuO#ST5Q)]=5SsDJhB],hr+ROW;P_qAnV7q*]L2CUQ2+,i.A4(p7%>_IP/L`\:F1cqI%MUd@=5ZAD:iS'_^@j!1[9-oF-/[1Qml@Q?n\q7^D&AZk_m-a2<4!=UZ8h]NV"/A#t_R8WCd9hM=#F#`;-R4"(%Of<rcd=r,Z`@m=EJ:\Ln(B&\GngcM(UUonoa,q>kg^)kon&N+o:foVF`?7^hZ`QmYOUVGK,$DtXiW/!Xe<>2L!]5$N$(oFf<)';X%DVC/Ee$XBs]fWi#r2=H)Ok*O^rWifaagf3s/P=dI-mt)b2/,Y$Jt>dVCt^'J.n$B5:_Z'lQ>f+;Gho`S.CI]0&o??d3Q2^L*42AX%]!7gk_(j9-/bY8.3:%ss#^Ls<Br--lr__H$eK>5m'+EMg7UT@4ZY:=NAGK&=Sp<cI7./M/?'4-:in=j`LHb`cIrq7T7FipFB1lZA%A_6;a^p@@k&\O/gl8#m.\_G#l65;'!Zk7HG)Qf1o9t%fsHZ5>8]*ESFe=ku-3t?cF;[Z`K;'`TZ,RPm&%+SD39'3DuM..&8CF5C*%]&Qpu=fqrr?qGV$\;B4&'%o6WK(4IYV-f7jZ!c>mouUbQ1"\pM^APOc6*qM@41+[T`=m*%<51Xa&@mM<CdZVQn=tk<g][Z*O%L0Y%DPS"CVOe__j/n(V'66r.i.J"tP>`1r0Q?3t`HBa9%UBuNWEHdB3VZ*:GT9Z!pRNMYXW.KGG[Lr8qoi]#L2q!q)gof[lc&iOH:8Zo%5>4jont:sd'A*6II*%S=\9<cODBR[V":AfN$dE,2(2fP&?bGMU*OS)D'eM-R#30OE*;/cL^>j\tEMT3l=rM5uX-"18Y#QW*MQENq%3?*G62J7am@ReZW[[g%%L90&c9:pRANMU$l\'`[qmUQTSg;4!/-%umY9.4l>XTQ_Q/B<0B(XuA8]!+O2&7&oLk3XENa/Zq=qKeOA%a3a=5Sbn2DE$`r:F)ril]Q=-Zq#855iTFg_Q-*cJe4[kf;(N74"c)g;EAA72VAAliCdf:Y<OP&@,!s>EW#$WBBc:c<hcTP77FCd/%-#,rNPF:X@%WUs)*]B%6nO"lPN[\q7X]ep%X-`:r?en6K!KJrr>7B[Oa8*#PA>U(N`0=XEUNHp%0\7Olc)(odFQEoA?t9h?]pt/4%BimgSA>$1C%D6p`?el.06O=Jl"&G0"XP<V2<%ri!(uC?P;SuJrDQ+\8E!6lb60O6.<cHPC>X6%Gq)np\OYR0C=ssiRN9cc2`WP=Q%9gHgnZf[h]"Y6YZKSk^PC@=&hZ)1L3cal6FK6>;FnPQZK-&_+CcZ1>hK+^k#;9+4q$B:9f^(!]lZIHc[1<TnJZQ9YW\E+9M+d$gA%W+@*;7*=jXOe)IL]LY3_]sEAGP^4rmYedCBp-L4hWK40M&=r!JU6$u_.>4E:O99'gn,gboAtaHig$LNpq?a.^fT__T=Xq1\Vn`*G%7A;(-(5AoJ7"+b8)3SMSo3@LRQOL6]l:V,Z9>L^)P2F*[DuOE2dFGPu5[TT$Hk3k#K"Y&CA6'a\j9Q*B^?0%!T(,q!n3R$Z:%[UQ%:c=k0>+jm:/c^u>"Jcano':;aCasBJMr=qR1J'2h)c@kZ/*]hjL,+747FUZna8I1W7q4Tt-nYPscH&\9M=c1BVFm3@i<VD6'b2fi%JO$trW<"P"ec;r^S5):bRY+BU$KEj06DQ6^<m<l_-!L@].6_WTH4XqVg&p@`=1).!o[i-ML]?[is-N`_YQ'V-]=O^Qp4(JB[_Q3\%osJ73RZHDUo<MsU-s'JA$$i>Hb.9R(E[7V7N0Zrd'ng'7Na>Y@5e3\L?K"tM`aPdT1Vus/X@_TZ$Q<RA&BR28GVo_kX6JVW=_j?g%?Z5\A1:g)N25sSNi8L]Yof_!_V=IM[dMLk/KX[L$AlT#e_/77]&`Xh5#c+0)=ji9*r8oE28&,XWpt8XiPd-=hZ5Y_JIl6J:LD.5R%V`'fh'rVUsJ"O2PeZ,Y>U$H72_k`VdS5;=WnP0MC+"70\5q/6mI:)o."`C=,^2tT_9>1WE6i=_!gOK3`s7=S:o7-f7s2b`Pq_Va6%\cV2`a@)L1>D4oi:IDAA9=D3K@M14c,Ha>>&XJgoBZ4O,SYL]nH^^C40)r:C_@XW6VX/buVQX]9jVUHN3=a.k@c^Rb5*MkD!\t'T%RWP"L32CXFo%@_,e=c+A$VAO'B8Aba!0F)?A$2+H#M<(f>IO&s9<Z,8lm?D.$qt8Yd`!!e)!`qd>QNpI3LuZ!@qaQ<'O(n-Z^i5\%fHS4lBniL\"+lmfh3o(00`gt@+.IoU@nN%*/B4g8*i$'!:Wp@8!u"Z9nV((V`9Km_GHSqCTnS'lA=Uor*!ljWb)kifN8`]Q-B)>E%Q$<Jm#O%>.frkqj:NfqgkV9&qN6b_/V9BLLB$6pC92p@4LkGYg,QWh`n13lPh-hKuq2n4%B?Mq%-_[e3[Ni!A'"KELlXNO0(\7NF%VoTt-UhM<",9\.DC/kHlZR(c9nf,$>a:VuY.]r#A.K#9Mp2d/lO'(?PY6o),G%tnC/;ofZ-ebY=K"["e6)dtl*;Y&P'/AemTXdR&%LS[e%Cf'1F[XL):jU+V0Pa,#fmPBet_=IlZU]6#D)#g<6/5Z_<X*SKkILcf<JDlZU+1pcejKY`MfZ2KN;mPU9:\)BP]B)J0g#0.1%RA0HgVB)+)D?EE7+SKb!/!.K:Kar3d@_dRGgVRA`Cs)gq("@dWl\!a&53EW/-,pTkk*F:.Z@kG8$h_7M/jm,hMe"3Sed<qi_5LWP%5V/kY[\TCI-3W\_-:rg8\]X\">*L.:;^LJWZ:&b$LV[akS'"1eW<1c:^]nZLqs?@1dh_*KmtYH3B7aT>!eqLc"bJ")5s%eI.Yr<f%d0[a'42*f-3mdG2=ql9Lc2_OB_OA_3%LQ"Nql6Ie<8!"h'I8ROlsc#`!L:>d2WJ_]nE?Z)[E7AQ":"bbkC@2tVX*\P;fH0&lr"B%%=?1=@$f!nP\YNLCh%qZ%n1tZba4<@T/d5Ss^-KG87##rJjIYq@pjSf>HZN-o152\s8S8g266"0Gd[r3s9GOiM*@-(t9+*>Imf.@Q%][)=h[`-`8P&[>`hVGCJ6Gs8tNG't5>N=WgL[7%2=hbSiI_.3;>O%#2K$:?k9a;*k=$tk<1)=58a*4,r%C;hV?<-7u&S/g15A$WY%Ij&*Mh5XjM<E76m&Jha8^AjViN*&$HaZP1a<8k$LEC+$YdjEOT+lJ2!;j;1>YZ+>J\e0LU+]O5_7'[;)VV$\4KUVs%q5eT2MQj!C%Q@fR4FK&4TS54JK_%)5:59Wnrds6JG&BR>0M/-D@.GS1<A19Y#h\fj94cGbLZu%70AS&,##a,\<^,Pg2<BBZ"[As@B`jTVN6%Zf"%@St%pR*_Q%R!L`NlY"N&#mA'CYRL`<dt@p_YeF<).@q=BC^B*rpQFOQIL$7X6FeFHS4e^4!]frtpAaD]bQUn>$rpen@%ru"]&&5L%5j\h/gc[ls`?PUtN0CABTO9#A:tW'%f*(kc`FT<=.80pXG17'VXI%q@1#u0(;[O81q$8G)'%;sm[qH[0.6YY=5`=\,VFe"G2(qq\%)+b,O>c.r\=:N8URBF>W/.ZrJpb.Q1Bi^Y^I"aj^)F&\):jACZ2$ZIZkpK,]LaZ5cGu_+%$0rC9[t9K<@l_7KF0&&FrBEZ+3g#Er%m]IQ1rG)*>KgJiTBiteS('rD=.ELM9=K[A*+'16GL8rJe,E]54#Qii+[4DgqPrpc(oF5$+*=Sh'G%Y8>R\dq\ecku^_F0o"2Nf>)%G;9L[<InpQ#7+-#GKk-Y8n&7U/S#-A749+NEtX79Lr]+Rf5XkXRfja4Q/89>fZc%B"1D1ZnQelUCCV^N%I@N173H2uE_BK+OAs<k%3-[iF=S/ar7MZ3?8Z)qOD_sLWr`QLf<E*fJD*eo=VSF@i0q[@:18`T'[-e3%jesm(!r!@134+e?O'?62-ULH+?*P,Ym#^Dcr"2L7%S957+,KYWNEg[HnD>BcWV,9Bt"L;gG<7sD<oh(/.YN%CMD>_3!gqc"Fo`K_6Ps`j!Po?6(qe;Ub4?:W<5Xh`BL&qNA&%aGM@\Q9\%;B.7c]Vn%m4X>>4\GuQb72@bL<5S]G[.G:iEVqoS]7@N'fJ]:(7ir<n-rd;:qlq4d*^B5hJ<0lLHZ-Y)Gm(X9Fs'sFD6>`MF^,XC%5A?TFc4(ajX;:Fh$<Z9Mn,%?K'^0;jdJ/-Ci,$Mk<'g&8T)fn:jB8uXVjb-91,&d^$-#91,)cWlF75mFG/Dgaa>d$tkVi/[E?_gh%^7TQRc-G1)_l_>oDUeNY+d1(36W2U8]dW>j9$ukT"Fk.5YgNk3;qWl-1XMjNq0LgfHQd%DD#f`@8pa93j?X_^8Z[`W0qGgAdk]0G%\ikE6?e*S?gH,GBP-BL78;@SA0aAPk]AKY*9g(BP@XD3lXq'he4Jfg).C6%m2"MdZ6SD,&<4&o<8o+C]6ESCWmpRdrn%Vk3PCq8#%FB'l&S3WU9[VU([d5U!W82Ct$%baFgDf"$@?Hm8Jo)EqQgpsP0,s6L<KZ)\h.c5.\)sc<l?2ps:OPB:_.O"1YeVc%[Bb`uP@FQP1%3>%cQUP@;#8;+sd+DY0jd7#f=g[l@P<HH:17#RRi[e633P8FJ1F@Ql*1ph+D@$!:lL>I6'4fu8(cS<H/.osG;/@4/3N3$W[6;<4Q%Y(JP:N0.Pm14#q]$0s!299*iLCGTJJL<5dO8gmPj$$Iei:[dRa-oi/R:<T_Zh`m=048+Y_WS/(pgRDD?obOTCH'NRmnrlHTom"bo%AVfF91:E2:f@(oiOMMY[Qif$8PZ*th;[jAK<':C;@.W8<gmQ@S3/G03LBn!t#kDWWQfL8,.P13laN-d!O&ES39;PIY95kD\I:8q6%:/n'Wo(fK6S(GZGl;Jb79L5h\@>Mi4g(ZK?.U``":)E&73^7Y]/uJ5PM*EJ])o.2HcCeuqE49FChRC!sBCP<sV2T;CX?p($B!aAP%/HpF.F:]1O7H_AVX%a--3^BV7q\)A7E<7O\<3V8>igKP8s2<XN1h1ck.b5LC[L=P^Q"N-p?)mBqM]'-.M`\b,l\pb+W:(F=Y&\!)%eDOC]UV%0Z,7I;nU6#u)%UZ/Y%F^.Z`&7?O6=."`#=8J+)d(Y4Y,RUBF&CoYKR.\R\/r@*(Q9X%L^ReK<2Z!]L#JPr'BHu[FUuf`%h[B_=2+Lr;llT:3[G3bg;paqK^]#@5QZ*ik#-jlqQu&k=KNg0IJ/aUd;(/]bCjZg>OGds9X^4u'R'2m38hYZXS>N*7SA/Da+9CQ]%ir36"$iH0m#BZR%F-_.WF1XuL>ib%s\Q#j$86:k;\)@^)@?LM@q(n<@MhH::0*)cCkKT6cF>q<8C]fu^ZnJBOl.`NSipV=G$r+I[%k=U?`M^j#rMc-]9[#huuC0:jQ&M4@',HXh3lb<GQ7NK+X@])]1ku7^bEKu?RbPiVVSYY!(*MYX^.\V%B)u/S9ZGg3/(ZO)UX5@lr%Tgc!6'h0EOk)k4&d6E:,#c02(Ui)4!.g1@:#N\?:A0<,PbqR^]OWi?\8"4`16I^1D)+mdVCX=2]W,TIRFbn4E-MXsAKdqh\Q<C;i%I'*Pt.8-S0^c=fR.1T)2E8p'S(95'r1Y\BrkA?FiP)L?X'=\ednUhR\5Hfu)0EFaY+ijKKIm%@Y6GnMQhmA_0h%Z'N'-'ke<]od/%f54_"E5Mu@gf9+Q92?4+\$JomPVoH.An%QB4@2"D>L@!J)A5"7cN1aE>0Q/=i1#?ZU/9@.*c`fJetZDIiFLeK_Y/t*]4,e*IG(/+%\OS:d3EQQ0DO2.#8(Vmb0Fc,<C.EY47:IlM)/H60$/\<PA1+?Q+Quss?A@B,G*D4]SZ0(I[q8@PX1NsS$r\d`ZW(o_3T+(GZJMQj%AIp:0EBHZZ>c;I4@c_@Q';_QGFh$ASjXc6\l@nLaP4i!2M\pup['F@F;5<)qSgi.IWjB'NLjJUZ8<8=kd$/UDeFt<L=*d>,l6@J[%P>TP'n91aN:2XZNf12_?)REb;)A>suRRRE/_iq'#!@la6O_[ND.l#`-c/#L8pfuFHl!1jf&PQ6&OO3OD=N$/1m';eF&(h':-\>SS%2+ATSj<IQb8PW8HXZU#8_95;q#&?gG+Zcr,q9r6Dc%m-8#"BP'oP!:G6jlB-/>IeceWIB-Y-5KL;tguI"7--nI6,J%1u4Y%L$kd:%HNa[hd%9@&i9I(sa`H7NP5>V(D<28d_l$BR2oQ7mLf8.^BgM(jj=?uo&eo\KkYS<khDChr^!K4S#VoW:[IG1soLOJJX*@oMm3hrb%6`fPJlB"[arKK)?e%@S)Pn_<$,(5F`YLrOSC`pKeFK[/RcIG"c-8gKs.EiCn$Wq1Xg!kdA9=@l@EZB9G#+^F-DNKSo(DTkgCJOJ)%T29*#$4q&@%jR7V/J3q3il!&[c5/+m_'7k@$_UB@B*l1:ALOo"MB$^1]-TeD$Q*%)'hFi8g6-,M<9Ta5S:$&)LUL2AiVaEb%eLkO%0-RR8g5uA='!/QJi=49(F5,g;-W(G>kpJ0&iu<!l%5Z6%Y`N@aMPB@FA3"&e&/nVRoBWgHJU5nKnp^V+r04EJ-ErN1/@G8!C)R.+%9Ul-WDuqf]W_=Jf#]ASU`14bg&n]rm4>5JOni'*anVh0W:1+A?&R<H0l@Y"%#a&oCh3M6_efmF5P&Q6.@oQRbmlA.Ol0eE53p<7f%9@P'G'^MJ[(7!@hO^H>sBg&.)2@FYDLuY5r2-Q0$Q`['X`Fu6RH\u0=JXn\cT/)bRBlT[7F^;7+:IV.-)Bd!K*Ap@VcI#b$0NP>F%`1R[q53K#5bh1[bU;klmpjAVZVel-C8"M_b7!0tNl^K6LB>D.AI2<u5]?Uf9($3ABUs\DGg4Rs3DWLIg<>8-5beGX5f=5:G$Nb@.%`4=tZ]Gf_*K*W>8YaB0gjSN8g,<<3S]et)EUIkCP5OS=U&HFf'LGi_4KE*PI[YttKIBW`.e:Yq<U;i_KT+1B&=st,?)+DTR"!<QU%108Um_22Mj<4]Y3!'3R()7h8V&14mXqkN2-@0u>,,V>"9CRg8t"f%]s.4_F[$AsQrc28t@a^YV)6YN/fL80W'oa5Pbm(qCY=L+qL%?:6&HQ"X>IG%ofS)BH'34\?#XJIa@bAd!0I1gS:dl$K/1kQ!a[>:l4[lr6DcGWCajZdC?qrlM;CjJjTh^+;->JM<k``ge'!eQc[@%F_9%m9Ru;FoU'O_k<j`*R:sQN_FTE*`UgAIc%*u^J8:1EZrRCbR!*_:!p\sM#Ll4)[r.G=WYBc/VoK!T)-PLo`.=:%j?qLo9*QD)%gqWl"\d^rQUlr<H3"89,@)E6,W>`q"9S@R7/n\VnRFssQ/c^B`ZI;9d?Y5-Fi^oC2o)=?/7Jcp+"IT]^[E.nEXHf<R@^l.XCc$2q%lP5d#`Y"bef`[TLKo_@XA@WV/CQrLBk,.\sP]([]R1XW]UI1_lSohb:YQSO''o-.X:Q1r(UA7`\Q,\]s=TqpsXQ6s3ge@P5Wa%Tb%1Vg.<EbJZ+Rh5q_HWVH<Qm>_gToFrN)@fWO1#jWa[QkY.hFl<[`Og,D+U4C2Cl.J8W1]n)"*/,].n$mP=6hO*Nt\'baB@t4o[lQY%J3mnff`VLa@0T=X9bpSl%Vl[)-cHmV&IL^p`)MYr,dae-1>XW6dpD6Q85Z<siBL;BLBW"(cmHXY9rWXK,U2&8!cRmV*_V`$AgW[[%As%CAk:#XOC/Im:D<obFXs5beef2%!r?T1%n>d1*56M)K7P7@g"nT^6od\6,$a:f;6EL>]"?&FbRugV].7T4j/t![7+t:o--0riu%Pp\C9P*0mW"V*C7M.A3#J7W/QARpcN9in)!QK^G&LTldX5p`Oqi@n^aHCLA@g\LVuA.moad^n6$rW!3T[Gd)'=BA`K.IT%P$OAZq%j$YZ8;\9Z7^u`%gnclUJZcjJBNsp<O>Zhh&(3kHLI4M<obDIm/QGV<d,]$?3`F=9uqe36$:6Dg(jQBW"]adLZ$R1f\%u'>fOPZ!%%1\iI/8`b8_1K<XsY$Y%!o/p%L!f>(\_5o](JNk(.o"%BtBFttX"Zqj1Ed9NJ2ZpU`)M$ISH''Lj]h,<"n:4D]Ut[d\%&>b[V[[)F%OTZ+*8U?&+.J.j2fST)SmZh&7N^*SrUnX*j_@BjBXY#J7Y`L5p%,6G6jFiBc_QQSR='fjgpJs2W<-Nm^Hake_Q<hT!h>(4Za:dMB%rc.`f[&hl[;QSs,O3FN],Njtlp^V&7D<49#aAK3ClDpa(>DBd5n[&&r<%SgH_c"L-a$26sC1_A^L>KFpPEi7lYGJf40Wg_dB14"F%;lT(XfrA@bdq'fiYboT9C(Y&9$*o8,k*F6e84p*Bl+('nK`Q\aAqbdq83+&!W>)S2h,'S6ef)iP,]@jKaBJ6M-KoOhcWTJuKkr\j%qLtJrRNgP[,A6c>5?/arb-*YPV-AM/aHh#\j9X1/_!:-.V!h7g[I`Yqaq[!>$h6U.j3k&>Ur=fo%*L&$muB*TdY"$LOP9DH6<XbS%$37:FPs6amNM`TNKG6Nc6#Y&s'VV"#<apZ[2A'r8cO>3cdN8X:1bb!_=&iW64/o5,.;%"+.eD00TZN5O0`QjMP^+M_&K)a#T=^f[%UgDC`JT-j-8Nqk_/au(M&uMIfbQ;;aZina-TPOYN9ke=igmCoP6-Xrh(=i_r#0_"LH3#ChOLAnd/X>+&\q*d/4/5Uh;BjG=+f5=/%0IQ>)?cPhAf8He\Y2[d47oSa_-B"<oq-T:@8CT6-lUT-/Q]n-q\1^ctT^o[3"D!u`F!"80.d+<;[d$@XMEKkC%CYXgC:P_%pW-0%%`\)PA0T3c!e0oH)gPA-!1$l5d=U7gOhM/fZ7^%KB)Hn%fNAtd7AmVK":hX`@lSK3o99i!t2c2dS2k"`WfdN46N6r24%3#2/MFB@f%)r:\N_0(_05A=]IG&U,bqD2pj"EH-=):#/a5\s))`csO5!TZ",^P.ekGRk&Lgo[]Rl_p.IW"*+O+_Mf8-KeK@%Ur1*Z'dKSf`W9\%Yl@Z10_8AFj8F:7%:JmAs!G_h-LG@$_omXs<VW]3jKWY+]k2Z<KQ,X0attgObIeZ`0!H@n1Mhn/R_aisr*a!O.MPDmTT,ie;ahOP%?:P=Nk;oi+MOk&R)!BD1;Ck6Z!4g";8t?,rBq7/aq^SW/e!=9QR@L\0L:%V_VG1.Kdfkf%97oaf4dLQQb_MXc8?iZGqVRor1*UPX%;?-]4-?C4.kEC\_=LkDX0q%XA\:\V\HjChL8e#Ym!M(_j<6X%Y3lIMud_oT\4H4^?1):7n4-\qW'U4e"(XTIYM+=pIji0hLf2oFX%58,AtKc%dB!_]G-bn`nXO]qpcSi^^BhhP40$d5MRod7Z%bE9/#qu^kr`?&8Lp%/"gJ2;Cf$/uEq)Z\9-[&?)$1>n].ig%.dQ2mtO%+nEP4]D/L15__ifk)jq:VB?$KRMr"lX&.QnN&O(i0Fn.MKQ@e6ZJ[6KoloS8';8iVGZb/tW0#7aaT&h"\D%j$ASL&!F.=40+fLYQ%2d[)4X9l^ikH=X1-LW`q()7tC2Wq]5=dt\>r^jE29^4@'hku^;76cB<d06m#Ge4?n5s9XF3SnEW&;mGCG5_HoHB[D^E[AeM"hBCj%_%ZIc3,8546'4Clrhi1JC4JD+egqG*D_<#h_+^?klSXIB3scK;<Qu9F"].'U0G3)i!>p>:E:WIQQAt&/aK6**mL0=6SC?2IMqkT=%B=Fg33$StL)!qQHTR*ZYoG?Kj(qJGs"B&sV2&>oQXrWDPrA.+NdYKk"&f8fhFZ^+/ifoBhFtNTNVRZkMr=p"e/>sFX$7U*7B2/'U%p:r+:3.g0dLj%^P>m%)?T3F,F(P618B6/W?j^p#Yjp#1p]j=R`i!@'b`lOW7cU`h.bU'_iiC@2UR6j0s_7u<YeaNhXL'$/D3fR[E%k!Q>e&3=RdYY1q*L6\6aMjR#M7!'@64oa4XQ._\NIg*B]EWBGV@pOVtqpc(jV+!R:Dqdr`ag`()-9_kjC!A$0r:9G=d0eJlEq]&n%7aOVA-JnU&;5puf4]5^fdNZG#[92'Nl,]!Gp7nK*n*(G@c<KtoMBEW`a14O,Por*MUWV5(FW83,m-JTbc!@P[n<df]N8fh7(]\93%-+eSJ^>6PBp4kN*.99M68sO'S6!\10]$],W?T1!C"1nt]Vi)uCOoAB.W^Mac<8LCqIi?#Bg&")j71M6je"1/nPOW2$B.[E?Oil3S%nO=8@2K$2[,Sf3W)B7iWLQ8H2Dk'Gp:@-80I,28h7b7PB9@h*:QPgqfp;OIH\iGnJhQ/F9it]>eY8TAY6D04tC\8Z1dL?/5H2.:o%/aY?UU<p73E=l]<';.mVl-*ffq9SXX:']VfqlM9!-f0`5+bd-4dD9eUn`Oml_?nu5ZJFeGn]:g.Zs[W3r"B)86]P/rQ)4d0jX!Ks%`[B_YX/eoi'Ka?/-++m\Wj^l<Ze"8U?4nB(Q'4a,Mu]UZ_(2@Clp#MV6nOhA$:RoDaf1bn1IH1f8h49VB:.H<2(=KQ+]8/Ya%F&Z%@`87c#'nJQa@acGL;[d9e\Emu,HGgJ4_f%%*RML277(m^+Qa#]L+:d_d`>.Q\I'C*#AeZ8L2PZrj:G;bF*oS;^L6:jhcr%P'PN!%%4t8T:P7>&uZ_o@tHGS@:[cF;0)tZJf[sB#s;]_i:K/2=6^BfT/qC9Tb`UPh.Ht7n44"7BM.iE>F-&m%QF]-Z/DWll$P<p4a\=T`M%K$F6rD&ks?S8)BJ3\*1<]=^Vb6gRVgPo9oO9'tl&]//<_#U6K$$1^G<6,K7@^^JLN[fAmjQ2sE@6l^>l)>hZCiK$lWdb@'aDR>o!%&/;Zi4!brQC;\b1Tuo.<'l"5Fj^]!E,A=99R&2p'D,>eJ%+eV64S;4iC.U=-;+;)OMHW8MBoI^PL0;C4j`dUJ"X4(Q<),_.#in42%/"6'5)L$iq)G(.fMb]7<T[GPm3Ot4"Fkq`W0u5<Z$QuMqU1i&:rH.ALA[h$&S"i6C2U_Q8\`oJCbWp<KQD)h^4!OY$\ia7FU8']E%TR3_>(19pXB,GeB&>SJ'OMmDgTGZjd<61`u#2i$tPo>?@1@sXVa('4)C]4o00F;&Sg2CmkkIe/koU+RBa1_7<l_d(+j?te/m8\Oe%B26MneV0737SbV#-C/b8i:tXFQ'dD,!H"4cVJWc.dNk[N&GDIs!UtR^>j@2a;['>V`T>'FMsk(/!s;jcW+k*`2UP]u<9E;<P=p-(%n.3JbP#)`7>;D*h?e)3(+sdi*V[/Z'Fi`%)3aH+&Y%6_pF^90*\k5VK,BjVp!Bm:!&#/E5)SXQ3899gChfQ3KF;qTnT:S7Xdq*4<%l!_`HT_Hn$kMq-'/aYhf9VXf"UD8#@!AuRZo&D:fqU8p.'4E('aF[l"7ULn(NnW.":uafo;_G7&>G`]Xi!1`GNH8A+Ip&KuY6Fui%1A[Dc^#--*XRVWP),6l,U3,pb%E"CdSO-WTD3G6V>+c,u7BV4&(P%/ogu1I*GbG;ZpXMF*ki>nC7t8KUVliD?>;*d\FoDa(LU$ih%:)Vi6>mT^HO+H76Z:-kiVnsQ)B4.%:gil<!\Q6G'pcq%J70I.$T'%85+E8^83<uDM)a)m$h,3ic'f^J%qH4](4G:e5k_);X9n(hu%7kJBmWt#X?7dFEi=:%V6MYa&TjR'7&)DbE.C:lVn>l^?FpnTgP,p7V,Ue40GaDePSp[Zd2Q."''T1b/DcRS3FB\96ta]H4WP'uK\%QT';G/[iD:2/ME4:AD@PWL!^mfj<6O=h9sE:aIeN)1/:H3Z7+^U-V`m@g&>_H>-9`):k))(,;,sLksHF8Ab9eb0n2P=6W6Y@keca%lk[$K%"7)i\9F>o9G(8T<k3D^#FY=//&^:1CbF3B_DPJC0NLZA<cDplJn[0)YA'(B#YKs!;S`V7?BHLT^"raoNIeS87'W9E$>-[[%'B;Ub%+4u^JP-"(lF=ZmRU8Q3",ZRaS8158gDSm@<[k,shgiQ5F_rUL-T3!#"/55+J4Wag4s01n:F]6t9Mc7(c2%nZ&Mk$g37d((%cja7`'s6edPo^144Ud^^'.JTljVG05=r9Ef3\/ubN15Q37J"_+0l@RbB!_GDZ,T>+n/I:n=^Ad\-MK)%[3Tij`4[jD'K-MQ`$CG9%>__%N1Q,`8cbQ"m^-QAqEAb6@:i1qU;7\k*n1mSQi[n*OSpCFQU>ER`8$:JnD0G\H+"9.[*,sTUoK^37;7!1.naiGgA&MV:3=E5O%H;,6sf_G!:1'ARQ8FA=B"Y$ir.@qYc#_t*^Pt"/lab`2p+^`U6(@G=VPZ"RP1hDrR5AVd?jdMsIb*2U$&PG#hO1!L'>t:Urg[uK:%XT7Ytc:&)!aporsREs?<'J"tWS[8P>00+>R6\4t9A)"n6bg5lfOYeG'9+Ed9-rK2-S=#%oB0mJ3N:_oHnJd_&Zc%r&YL9H4i=3.F%K[X<#"T=V;"cZM?[;5l[94N>jV\EEN4+86U4gpYiWZY9kXK@H4>_8EIX=W4(ITAsT)qid+2u8BTXY'=s-._A8UhT!lA4Ip6aELdS%X2^"pJC"!02G4bqQGm,E_3SnS_&/K]:dS^44M8%5:!9/+48NDgre/a$Dfo1diMb`-,o-[<;B6/G#d->QNWVeJJ.Q7kXp6AaK8/b,%0Va/icRa%bU8.AOOPc3Ze^KhVG)!?OV_uef"r2%#b-?GrMR^*YJ3Lj-8Z1'Abp.C@O!:D(@B"#_.,!>=5?jLN?=8I8Lp`Un3KcJX%VEsnu;mg3_8!eR6\d-0i#/*?!Bhg^3QS"P'`=RPsc[q"b(55>R2pZ7XN3,@!b/^8S<<XH]Y;f.qd(.:ZIV8`_'"nbMo>8Zkqg;+"%?(WPuE5^C.N2m\'e`Xr2lZ3'@&N;:1%ClTj0Z>(UKdo_8C@BDEdqsBFL*hS)k1SI@o`4f\=D>u:jE5(#:.Q\A_iY\a3@$V\US:Aa%Aq?qe9md#%>Q/hW%M2joAL0Z"dJ4=kbfA(,J!E"nj='9\+O^.,'I`3dLbWV94)$S,5-uJkJ-l-m\gBj7eo!3C$Y2fO9a+OUHX(;.%=^-m/CfMaYGa':k$EnQ*g4AkW/Z#=Oo_^@kSaE0U0&UE).q!("'Yp^SZY\O&N*qBi>W71g^Zo3m"i(mM8e;;GXZ@e4W)e\j.%fQ9%C=cU(JC]PcO_=8e#'W;X'-Y8oTC+#hYIZFGd.i_rCE2JUmX_PXfYO41:8JL4FL]456Wap/HhD/5YjLMqU4,X(dHV!L"c9>GW2;?<%X+F2AIBiWBejm7,n-*nOL&d\r@%]<aaS_26W?rWLYa,-3h\N&eEj6lW8=!u:s0hFfc[9iIRP9*3gC`LR1.514cT<n&8FPPk&G<o0%I8ijQ/_?qt+He4`#q/"UO+Vjo5t=kcJC>\]#RRHa$aI/)>i*e](B2a>MICcb"qbm`b6tl@AMd3>KZks6H[0o^dClYqqs'F^H?/Wb%@X9Wm@Hdn.Km)rjT:^mC?$FcD4)JF-Fu"`Q8ISJ#`sX(*$?b13nrJkmH^Y'OJ!=4;^:@5T2U451M'=+KpnC_T%tXESJRW\X+9A9X%8]:Ho,1j]hWS6opo+-;C&3.*'MRc[>pQP@4EY,b!!^1c>H+CoWJZDV<6N#W\4k:(MV;Xdkb5/iVs+\W.Ht_d8/Q]Z.rWDhj,hRhO%<5Q4J1r9m'*sc%oepTQ*YB6)ag8H&.[\8u7l_&$C6D)MPru@e\jPZ0"<Y(;9Uq=r+0t$O69eRA02?%?FpDgHZ<F?Vj#tLU'."B4-%ok+,#*nEe+%'?u<l*QgoU_XEK$C*Cs'Cf';l'kbA,%H"B'MAlNUaR'1P-W=6H+:n/'2qXV_%Kf%XIAY[:fgXYO:kl0HQOK2g'Z66%@94./ZXRMibP$+AGIDp#=;5_.;sdCF%`2uBGhB=r.1J9QoQB"FKm9dP-e!+kp(JcJ?IF%^:uU-RjOU!tc!e41m5!MW]$1E"-RFK'%FRHE7,3DAnhS3V=k@FMk;IS7D\,2b(?CQe$<f%X4Tg$"<C*:l3$p!%A]P!X@^p(\Bek$D[a8h<g'-&6k]867;<a;XmW0HVhXM^rO%c7on<!>r$G1\j"#F,F[&5GfhT!Dh[lbW)i-3`TuIT(h4:GP2%(1pquQ;'/L.l=GM:J+H^=S:9`%=E?m=`]$d\%C'.1UHLaK@@m;X%APqB*5K&1>#r=p_!ib;3UAg;a@$i&%+1sN)Z!;<8fhlaq#.X_W^P5nX?[OC3GpSkP_O[Ju"&!Dtm"V@Q(YoDATWZ?E;B_N/XG>,O%Cks\@%k5OfZ%q7eSHP2n0mTHl<:#O0[6!,/"Q^BpB-P;$"d3-tY=TrtWd/<ERMPmM%Bg;a2%j;>eG*0&j'r)pTkN&q''aj.0m`AD%<'H*_SEZA@4U15GKG`D.@o2:s+jXuBNh:r.V=,CK$fsPY<[0<HiJt83QWKIgcIrbT7B`;s&VbRGnHhc^5&1]2j;-tf<FIuZPR,UY%!q:IdQNTDl`]f:2Rd31$A'gA0;-@;U*O$c]4UP45RL+6]#&t>%Q<cn;9a$W;:eV+LlfDch@85JuW@`lF$GfmU_f"n+bagQe=B4iO%:P>-6eGEN3;p\")5qSIel*W,,;(6/S@>WM*W:;)gi"=^SPI/N[))grNIn!Of!Gqa3]O4(i,uqRY5V]V\S?n$)XBIaR5[7937s.*U%`&l]sVK3/VgW8\XQT1$6jVhT-]qnXDUH$<eqJo#iaq:\$;N-HW"r5rfNAbl.b,Fb^LE^/dZ]?9&898a+8<HmlB0rOF+n!ZL"bVF:%>Fs]&];P$0/3q+<euMV%7!AZbcf#+U[R1/W:(Ue"(0b.XcpNuYK9C%MFZ5:>1m(/=V60*!Vcm8FkcO@WAQWPs.KOnF.o)j;:/hUo%nVX=5SoNERI)U#M]3aVETlPPg(S8qQ!G(RRU)?m%P#f=3-r5Zhj#s+YFtQ9H=^tFCB_pb+G,u)*c1.RY9aG_6U[p02^koEtm3Q/f%O/2ru4efWqTDC&?>]h'pV-G$[OYR"XXqrc&?R>/\O+_@3.m7(+jf31@MEO+-0AcLV@A5X^Pa'<9H)Bo%QZ@aPY/7nNG1gp)A.?Y=%akWc2\Sn_flCa;,GQfRjp7D?/,9MNFK^9)p[&f[Z/L;%>'lgL$p,`Ot\rM(@YO)a7GF_2$QL[,HbF(=H?$IShGeDF,5YKakhasKs%+:#6C2G,QQP_L4hGcU!B[9FUG-Tc+@.,nH1_b/Dk,pS-Gq`4*$[DAbO_rcM;`?@6qLfSJo>@_J<W.d2b_HB\5"t2S@Pto0mM\Zl!%::F^N&;Ql]4iLj?\7eqqLSJV('B#f4D=>R!0afq<eu*haF8:&Ld#^/"npVu+Cud_lcn"BYL2R?!m98PUcO?6qbL)f2-`44p(&2.m%^CnrDQ*#T1:aYCg3]P).P1eA#:sMV%EK_oe&0E`rVbAH^j1pVi27C*s$GHmJSN6TL5:9**KqQ$S2<2KD%E-dfEThc)JRGLakt,hZ%N*(!CjD'KPn>FE;W=$qI[f"jA(&;qRZ^?P^!1Zb9#F?:0KSVl5VW^L<0jbD+'1#S*K4m"rAONWO?08VPL5r;dI\,gHb?u$gbWlAY%G!XjGrOcs/Tbbp*4p.4[/pF6K4Rr>>h;GC_VNo9Qb3(N%8Z8eu"]*21%,/FDjMD=^>8KY>[<6+3Xf"doAPSQ8e@&p]oc+QcdP(-Z%1V?t8o'+pK"ZF[%L#1W?V&rP9VD,JYM!.0TF1,-[2\*gQaA`Lbe2(!Q3U>,rEKeIPn[ftnYD0h<AB-^Ebk_h&VcahlF"CQJqV<Fr%P)Vbe;p<',1^6$1kT8]3me_,tHULO!cX)fr3&Y[)i7"?1E\m)>d'.IBTEL,BRro0gJ?ro!l?7OeU$g^ANg,/45%W)Ur70+Wj7F>f%&2)!n3WEa4r)L/UruAA`Yk2j$8]Y7Qo[d>r+\W4E'>pmAWQSd4;iW3]6"]X7fh$4,;k4s;Te2Mq+j?9gj+U4W#fr-`O`F;VlGbLl%P);!gT[M3/A3jO3\Pa+3Z@t:Ph*#qoG2!PMNCd-:PCq-FndGmu6<0hhSn"gYo?s)FqZP^N^Hhg,or;m+E(aWK4ogD.p3A4uC9!sL%!c-?G5MMs[f"J;aP.TtK>#?m<O[!/cA'+6V9M\c(+o\5;EkgEHi*N%=9-E.)'&'TaDrVb`9a.D\4QkG7R]-beOm\cLT`2m[+g'gj%!uTf0=8@MSM?W&TS2Q-B.maaDBBQH)hB#r6+q-SeZQ!lR<(dE?ngKM8%@]Zc"NN'lNDqE_@I?&lr)2,P'q2(#ng4Wgl)1J%8u-R8%Hn!..rna^gC9pfG[EAlC0j^)f,c`+7iNNJa$h1!D7E*o4!#FsS9kY]<Hp)nb_bu6+#`.c0oH5;W6W-TTnI=6?L>E)b!E`:bA8hZb%Toqhb*lBjL@N:dI+EYmkP>&s4`il3$2ac10S^T.D:2S'Bs0d=UQJiPR[pCUM!!$j>Hskl6p%eXqE`n#mj;F*3,n6/mfBBHJ[9k"\%L&]]`:s?5I(@kWikb.2d=]Gp)*<$SbX95H7G)",!]\k3WX+.qW#?L\TAnfoioRLdg*jMKoM29^DM^dBoNtXl'<s*_B$p\F:)o5r#%/P%]"*isdN/h:bkq'uT_-moB4,\\3]4:agB\EN]KO?*As$#0W4(7n$G7IKFaQ+W\9?%[UA]u$""on)JA6'/]<:M*&B<AUH<S&JW(%<[;m(?l=3>4qK.YG%8W]=f;?F<K4OUNI.N.<0Z)aa*l$X3%N7X212gjj85mR*L$BT;?C\`cK2&\aD5>(_@idabtdis!:KOjC/mKi%1HY0`/&D:oU]e5A*%_!QlZG9a;H&?DW0HHb"r!cC#9!U0l,-U%qTh:+lo#4DLs$FFU\3)P&8*6Bp[;=[No@Qn?ksSj3ufRh%dOU.%jBkj+\q.W40AOja>q[i87TjpeqL[R9JU69j9RJFcBrd[5reX5ZMT#%VkXqnbBQJbs5e7R.&5PGTjFH-eL`)]eZ+c1$Y4dJo9pq:Z%en>*cj<0>0NA4[pRdnl;J`[8*<NcYDIe[/_q2*FEFGeD`W[U4hLQS*ch19&5Y^6N,hKD"MngXQQ95^D3XN<+Jp0>3l0Qrp*K.LcL%]I.Kq>20K3<35T0$qr\0,ei\Z^M*07iiamtX"#14fCRDIha)l.>bKpsf\?Vua[.U4pl,,eG<[/iorLDAFb]kN8WKq5F``_6P&h*1%.sX"Xa>30s=DGsX`)),;Ji:fKqm(VQNt=2`<hpssF&<q!U0''a0'I,;<uN5#7_2n[_fb&$"MS!O^*I^^[1S9QOnVqeZ[]A&rnctH%&kYUaW*&Al_$&=G-CdLl-s<n<YWSrr<&I'JMEs7ghq"7'kNf0SL5s$;*M##UaXsG0K#"j-5P7TJ,"=$UEF7k;_-p?GAjsZl]Gu`:%q:l,O03&a8DPBG$Y&J]p`s`NS_[9Im>V!#%]:eM$5Wc^j;:Te+U6=R\Lq;:CkAU8\dX[u68Ps9B(!_cMHWFrqg::,g[\/(qr0>ka%NJD`Z#9S_1-l2(RVPb20GIVJpjG9"#E1M#uVSLC."SO$Fa[F04;ef7cAmkDC]=Z7)P*E[c:M)6TA?]\<m]+<MF1H&U;Y6^HOBgD!%+[jkPZNJip<DFu-'`WCK>69B`75(-`lC/@08J-t79=V--6=@rA,'E2r<X"0`l%r8)"UYG142E$7.fKbrSiR2fprBfrS#9Fm+dP3$%f\'.N/C$XgLE3X.EmqrTEhoFh+NXPl^o<<^'jV&/6X)TnIpdR@!n+pOkr6RRn?8;Z=##*#BbcBnVB-SQeUMuMKn-Wo\)@YgMa5f*%e3q@_DDPSYZ#C"g3C5?X$SL0]\<tZqR()$q:+5OYo]SX;"DHL/mC>tF=m,Y%^N"uVc`t[P3`Lt.WB1K"!,rtm8[MD1=P9%H"O[<?%E=.o27d.Q\'#K-#E\>s-2,n7BJI3p[m;/O?.[Y:j*J%3M@6)pK<([a=`@`m%-"Il0eJt1@c*#*p:o[24<i=RAF9?%$!_.b_#a3as%;bE1"<`"Hi47G*5^cNeN)i$VEDl6YTT!6[76R#C`Lq0T+5oSk9!s%Q@rdCh,[0b'q:7W@s?"fc$Plthq<e`A3b>@HjnT<k.,OTh_%(Uhb!s1)tO5Z-";_$=`c_XPT[SCLYh]'1l=8_tN@F5q0oXuaFl@Kr)A!M[%+D54-Aal)C?1tY-f9dNdQ#X7NC[nhJ0P!WFEOb&3$%=6L[9R+)QKYSs<:"k_LO4]FV-V!>ADQ</8#O6]n9.V46QK?iA_Hr8W4E8AGmr>=X3HOk-;$<g&KihlPJF@pmh(F?GsL($&G'k-Pj%^c-W7^%<S8Z/%,gGT#@q","+<)S_>;p%+Wp8oi;?+LU7Me/iW0G^c1I3SS`-;'Z/7%-C-<B!u6$O+>EQ!)hSJp#EhVJGW):1]s(+%!-3ZX^iA_l:Y;f8S<6T*doM+?K_5fH-F.-l5:#eD[&k13$8^1^AQ2+D8]XdUM=%&7\no/'j-ZOH^D`8PL;OYp0n4K(?Zdl@dTIZ[%#0K0(&[t-?7kH5M:V.a92E7DZ+DV@LOTE_s='/gqC!"5%ngb0S*;%f,>:p=[$mq@^)"-IhQG,N8Jt]'J/SM[-g<H:R;5Y-V.0h:\%L\PbD\;HMG`Rin2T,_?fI[Tc^di&)gO%0gakQ.#@&@$VU4f2IBE!1TP@]_FtI&Z.?q,k[d`tGg0Hj7k4GV:K7ihj0ngB<4mG'+jV%Y4eG"5X\nbNlpd/.&@u)>n3tjC!R);Zs@R)=o*ic&YdBM6N)5(H@V*o!!osZ"A;0Dj5q"Z7If/Y,3?'$2cc^ZCb=.D<Gar^;,dmU%i!)keH;C#eV_oRGg!fLbB'q^kl`q:/X:ueT7WNs&F\21k.FOE$_n'Qi+;n/5(eq3OfnXnoOqqKd4nITR^R!23B^KJV>G4TE$*?r,%V\2CNaK2RT:K5t5MN8>T!IoIJcsR*HI!rH<QiK48#SS2!%7:SJ$_?DPF"-ptpQ&L=cu60$LO+12@#B$t^L-E:($gpnS0_Bhl#E*#%ODI4E:rRr-b*/7eA_'6`FV:LNDNn%$40NnPno-mVb%a25H3bOL@I0]::9ZVShGudn^0il%8rp7<`!<FgrQB1^14`Mhn?iPPIcbio%``YogGm=qRSZI[l=-IuPL$O=%]f68SQpCk(-(*Y8@B.3a<<(4jqkjELlY@<?TbssKWYZ-+p=SN-jWmjH(a5\K4<h`S(0qak_K(k:%k*o.ZV(L0[%&W_BF;b<i"nJDl"X@=O%@%b6Sfu,]>Hs0T5k;dS)FI8^%e3'H*e'tO=e&=?RCk`#"[SC_Q6ld1luS=J+Xrj)%$Cs/%M,TP0X9b#jP+ihaUYsr2cf'hGENZTlAID&-63U"^G1ZXL[<-G;/pg.FC;\g81c=:,m3mU#U"$(#Fks181o8sK7;5h$iEC96Tl8<2%PU+<h$M"cF*8+XPPfiKhP[20=;jV>1EXAC%Q*\gJp%,)L"O^niUQ,\9"Yo7a*((bVI>O-K(+e6lSG0CH:&td\BX$M*qXkN*PG@UV%8/@'?*aA^siRW>I@W.8'$_:G`ra8&llXWeXr3F<>YM_1i!R:.256N<%Dg4E:Lp+FtNY:+^3B]e1\114*F!r]8O.-2r"MX/9We(Nc%j];a"Z\sY8JH^_FbLo8e:F35j3osCa;9qFL!<+DlZ@l1VURS?BWIgbQ1[Qkj!@fK>_Ug+&UUn.c_H1^P<F_kX't']5arcTk1?;:1%6];dqKYU,%i8-h[)*re3eo/(n:dKh#TGHb(g<e:5E?,6r%"fJ9aTG4%E(b#B9)UY4)"noGS2crpHgM-*"/0^'a0.LR0-ef>3Br:9%idV/2nLp$cT60RH%ShL])R'U)@mEHr0D)%<UUdFAXBOsKnL+U?D8tW;I+D-ObO0m7<PRY\Qa;=aCbi(>.2/g&?'[Q;K8)kT_$;u)%NFOusUc$g_[t3+("s97JUZ*$(FN$6Br$>Ohi:XH5C%P$GcIu#91LH<`0Zq!JcU<pB4eu8]J-cM-gNG$%ld,28lE01nL2WS3*,6a\%LZL/m7bkViQ5&[gH]KIamdR;-\2@u_6*We`9n"5_%4UNDc2'bGftpj[2W[J>A)GkbkWqnreI-(8YAqM<>p*1;L@YG/+k,'p5n-me%/L_YQ<$*oi=@3s=]kXJgos/c-\Ns[OgRsU[U;<If7h'fg@V.Z]]QX^-RBaI%P31Muf5ZW/1?]qQ5u`>mKDel>I-29?,TCtW0bV]]%=!S=WOnNqB+PmSoC17>0<cIV!#j4Oec[!5W$\X\@J8K.;e&FKCOh[&(@X"_dj3f"',aB@SGE[2(qo(,V>AA\Gj[eC"0Mss'Jgmu$%\,(@!&CR"5l`&-pf=#RF5c+7O9ER`b6E),Qn'b^%/dkn/a1Y9P`-Fg-H7e441ET6AD4*4E@r$brr*Kj=bk2m:T#;k++s48?3qPVf%9iiJ:g3jl.XqB(g)?d:i\5V*&44_m2SOP/WVk_6e&D/JnU!Hm(fT4bg8tXD5H3p.>`aH-rb)^A_#^),BJ7-a5GFfi7a('ksT`CY.%J9jN'o\Wt=?SC)6/@'$N5U![a;O@R(9D_b_dNR=g\HX1rLZuJU0gXd2;@19\^-1$c3,]RF?@"i-R6;l)8s\"=H,ka82.s>,:?]0>%Y"#7qGgA;07O8snTQd"i'VCJFLHrGrWGW\J.A^+[V2_NU6HGXL-Q7HaFiPrI(<no:<e\kVa%u9"(m3&1LT,bg4\2\B[4u9as/I$n%c0"("C:BLkG90hkBBWTG$ZgS/Ri:fY^shU5iGPB=2GFH%P8W3oR$b`iV7\Y\6tcYcRN;ZkF8-igZ[^U;>3]BD<Vnj90`rVqS&0!t%G&I*$M<oFNg>`@jOH$(D2m%8A*WV^T&QmaZ`09a8\IgPRf45EqCd$!s>nYQ35+X/P22i74Limb,b)#Uib<RE9&@H@6JH*g*5NGXg%=XU2AN+(F`V(lR[M*;N[BS!ai^TgbN<_YuF:^p?(6ZNgPdb.GB>*!0e>,GRmoLBa,^n=Z",tSho\FR]&Z3nilb4(4oQQSoq91\PE%TJ>l`]D7Y&FJ%FpUTukV_6]GSl27[UY9F&=4ZqW<"3JAPo#1D-rtOE2luCArPF',ul`OH,_#hMqgV+-F\'WH<]tI>(R@#3]6XH#D%#"m"m:jY4qfY.&)''\eHgRF80n_5g9_gEWEIji3$(FZD2m4fa!B@""-7rI.`-fXn9Fu2gu@aK,-OsjEX]?@1UDAP$.l/>D=NOKhE%Gmu:\T:cE/LI0:Z:JgX`!oL.W-X'G'L1?iO40q6G>uj+]QPdVS77dlVU?q2\S<>^*p&AEu.#3K$OSVlI$u.`aaA68mN0@]>99gLM%=J>%;_j-X-H1iW)TZgD,^sGQb76!t@1j'hf6@VGK<%[$F)PUs=3(T/0,rM-H&)ddMPFKkoLl-G1$>A?X]eHp,#$OCJClI"W86>!;%W(]*7oShG_L6$OhioplBgp#"R-sH?)c(qGuZ27OSfcr@[ReL7cg:@^`ff^Y;+6UE\2[mBN]1tI>gh;qd&B!QM#T=n#ob`0=bDS3H%6>bLM[].be(rDP-6P*JF#V8!.C02)fN6oA99#ir$"Q9?gLuo\CU4eqe?G:^.@<4'`0.)Si^*Uda(f$,gRfG*QCG1X&*S#[hb7/oM%9q>jJ,([c/=MupG.,#*9HN;Q!h7O:JOIt;jOlTSn5jOCBS[U7KD_(r^k^O0dH;J@2V7;O[Qan>EM>jAAc&;\bbHNp)bm_7;G$(t`%d/Cr-A'`+A-"dA3^Y":W&P::l/T8SCp@&F*ZUC>l.m)bB@CM't]l2Quc`(F(38!^f2711hZcf9Y(?fPtBK`u&j)$`9)>,@38pfm=%(/!O$)9*;\`7'dO`jK,,Q.P8^jedbqF"ss3B`g8lA]mIKZqB=8'[MAFs)[12MLp.&hG3T`_$h5E_soa7/o+cbI9D?FL'-DC7C=H1%<<a5gnF>8hfS8@$Z9m>LTg9OD`Zd%B"A2;2BVP%\dsU]Of\=2Ag!_bu%X7Zn'GcB>)a:T@S)V1($J<_Pe7,IT>e&q^UpKW3-u%UE%ap<b09Rr>_aqW541#cb>k`b,O'jWBT*^])I=bM#C%7WPmgF=uI?huUb@g)dep'ff94&Sfm*`g+rdF.Z%l/?-A,O_Of#Er88J'LCq%!&Pg@CP,`uP:=5kiZ"n/W#UHu])*r7?B8m_X'>:Sl2aO)5AqJf2S=>uDSh!LCnDpDbliG1ba7m_cu"3%DjOdbN:/HDSMN5d!>r!m%qtP_34Y8it4CPp\)!!2uH1CF5AamMl2T5tuY?W(t3sCs90.,T2''B<qqCU%&djUS93pLp@I["%^)lM%T^rteX7ED-NL0-YBOm-4c%;TD0kj3Mk=(\!CD[6>6A)#9alksY3;()APKmdRsHaYa"&X)2^71-<nEch*oIRX@^m%MTRpRicb<:,aZlbCI'<EHuilRTffuOM@5"%g=G)lj>+:?$os)!mo8bpO^YQh2=-eQb3M^BD$aQT10d=qln?Z.V"?ZcWc3^WWMeFV:5812@E4S<*OG8W4_6ueeR$=V/T<S[V-+9a%r7^0_%4uI(?r\WL.k0/LV,usYcmY1,UYbSAs-Nc`+-,eYC0V+qWoD`N+.rhm9l\R4U`iT8:=e7J;2gKq4eS\n=Yrj!ePfW\G=II-%JhV-N4rNgf7%]Ds?p+B&$p]a_$!Y7TrUV>MIU6Am,p*1]@%P,I__@K>-cW=3=4V5I"PbiQVRBE'!Fbfjf;s":RpJ%'[H%[Rin%`B%af)HEW'UYe#h%)tFf0K/^V'JmM;k/2QOfble;lS,*?QDo`G2n0dRU2_I#q4.8kn,qSR<'BpXQ3F37_/(ER%LJ%K%HiqH^OSK5SW@%CDtMJmFTgMLFnY%jGe:SU@tK(iK?Na8n"`eH6Z/jgT,tJPmbpVm,XT'9cj*&1ht3R!_q6Y6N)o5S6SKHeTlR`b]$4hLbk/b/Q-`<%H6TY*98RY,]b"Rg&8T2\?4UC>Kf[LdWW6'u"O%6Pf#Sidd*ESb#[rK[r!\#IOTbUUQ)UFQqc&Sp5rf2#9mf]"%hU,Q1%Gd)M=Uu^%.:Oq.*Q3uZi!W!7Zj;gh,?hb@l:uKOJ20m?fi[mDjQt1XG]3cR`c5;IGa1cUmD7iqG\;/XN(.P%%cWrB>!4ltSt,nX(<(R/lsD-r%k9-K-Ij7-V!1rQb>VOoraM>[,Ya]b-%W%E>aWYN`<Dt8cloT9U?sQ:PQN/!PLU4rT7t!jk,\7_?U8`L^O"Wp[)j4q9B8Bg<A]0Zm%U/];&"'^l.5dU&'<SA:@5fth=jG9CCFSi&a272W%Z-L<U<fbF@7HRLs49rjr\pnHCF7OBb3qnk7Q<ToZE[T"AdbD9%et`$$"KN:,%VYS8WG`q73o5nlXnF*,oVE^L_hnkB>JLe:]dV!!a)TCR"cl(-$A:3qTO7,8kU-]GE[IJR`ID@"@+XYHBImIqOCp0<m;_)Ub*.PE1%#icpCrn:u2HrH0[)c*p?**K9MG3RXKgHATM?sn[lO#\;IJ;6A48.#9Yf/crNSbpBOT[[mR<%u`bQ[`iZ=#GLq?2p<"hq$@WH,Y5n%8&o6Y+7:[Y,o?pGig23*7@;d_9CQ4ZO\i"!Y$b\R_D9I2*/*;e;,f^jH"1hFM!%n3j"5QN_q8SHrS7)C58u;<:tn:6.+UC$Fd-/_%mS9Tu#6'NG>d)gRW?mcWblTe(8IqP22Z`'KPYsXJE2.(=W-Qr,'/]s\qBonJApU6mKZKV4)bb-0`/ViS$O)\[2rW@A;t+chAjEqB%oDAO5>&sG?"$4bad$^:+dMU&ks6qQTH6dm/PQ_05XM#41MVq"$7/XH"dLGJ$arOgp2%]Fp#u/uqlor7jn7EN`TmFNV^AIHP+O+^Z%oaWn^B7T:INXe7s4X5e8L_!7Dgk@Ffe]Ikr!ZYs+s)RKh?3q^?\r5=)=#^n6h`U6fd$&d6n>Z-KNON'B?8oIMb0Q+CP-9+A*LJHB%j>a+D@9H!Epuidsqs!mIa=="UA2QN!+Yr77G<op.La,N.!Z-ppmSD12Su#6Gh95p733suF=qCu:GT:cQoN1HAr_6<'NZXZc$gr,k%Q)Op5n`R2b,,JUlU`0Y0?T2.;N*:#qoC4NJ_5!cQlD<B=-q9-R#Z-0Ria(X>CMr):UXVg+L[1$fDkWp0LDDo?2B@-2:nAHtJH0D8%@SCba%C^:QYXDo<7Xa5P^*rSgENj9N$Ec$=i\E*=hb_#,f/l*JN6:B%VHJ)V#0'2Ng)$HRJBJP/TH,?h?4=MM>1lX]TqK0<AJR4p%A9h"G2o,,M'H@]@ZSM;Fk5D['[W[f4eM8[+HERE-%0E<i>T[?Yj#tcYrU]6)CWI"oV-u\g/>NW*;<=?[FTX!\;Ko4C[D*dmEk@OV%7-JZ-;.H.l491bPq-"2/8Nb3@[LE3=XR$b+Q<]KS>pD#a6'C/aLj`WB^^[(05=1XkI0`4Q_'Q#qj9Dd_Qs.<!0\o+Y3F6AiRFJ7b%4X:@"%.D^eG+`)Qf]%$ZG[6Z2>V-PJgeF-T!X[!&&_%F$dPM?GJ,.,"HD#s&_,UQ=JoqqLDLj7D,u"+JWMN>HHQKg^ab+nAH$kb>%5P^-s7XR*5U.)$d;joaNLt37Ro"k<>L\Z3u5HVscekXPO.n$k?(,`Jo(_LK[P/KqIjs=<ddETDhF,*<3%Z5=T3uM4Wi45"AeST"J%J+82H+/W&n8VrDeh_J4\q"J`fWJ!Dl32peg55\*D#Oc3_#b,S;#sD2g^8h;Q4pDniD1dipr>]*uG(JaR=Sp'b_>CNSqgJh]DXBdg%Yfut\6l]&(+dN_B&1f]?[=V_4lEb-!`+>7-O^d!!f%gm]"CU@b@'q*ga!tF`UTQus#,+4;K-c2pNtaq;FuPJ+O(;?9m/r&11iC9-%j_a"ZZR*tH29QYGTk\:&a;,QK7+`&iTWb[]</O&)oskVE9*ZZ;\7ATLlmqc2U)<+gb?QOL^]j4N2VecB.cL)AT`"/SHI^YS:Wm/u%!q"4Q9lLtr`r^6AO&/GoN2UhHU5G"<?npf1*RLm?p/6ir>pXXim%Fu?4N!paT,lV#.iiu(FI%U^:/V\omQ7)BaXH<.6c7/h;W:;n%O!AJV"\HW`lNQ[C4"=G.)#KWIGu;h?eupCP.IfnJTC"3flV"K6Fj!YX1+NX.DJgGh)IT[b<0QL#>n5`F.d7Mk\keBC'-hde3&HB`%&_Z:?3)T?-I)s[In8nqBTN@+lR^;Yc3nA4M0#Y:MA;DeKKrnI;@$M%q3,6a6j(:jn]`PsTbeOL^GuRH^V#Bs$KJgmN1"Jrcju:p?%#%V#9g'89b>71?9#'$/V&AUoSn;S*D/ZHliW<6eY>P;QkKo2cR'6c^fX\sr8E_JJ4!U=SCE^kVAG?h8bYG1qli]>9Z:aNL"Os<%(%NFI0=MrNltgr=liU$ta3k4KtWp!nq!B-O#6B[nE.E]"*02CV/>&;d$3#F"ZSd>DPDqtm#?[cb)QL"(^kN93#)Z]Ya>;bJVq^f'A@%8;@J`F?-b%*,sCt=%uiM'rl8sjF->o013`@*bWX/Kg(t`-5<)UETGc.>P1amDL%XabWjHC;!R)R#cFrB#X]r/CeM)s'q_R^%MM55%ehR52Df**!ML4'`;RK%IU?i:u8o2*5N'm5;NB70T<5]%sPn>4u'0@?*keh[8H9Z_^`AmL(G?93-F78XJS8SknYRp]k1,qR5ceEXe%!dtct8pF]F6hDtHQ]CdOVD8:n$(]l^YfrgZoAP8+ZJ`e4!p_@OMAXAS(&]1GX0,8*1u^Vcg7aY]mXE`>M;:Xs$<WMGGb8=7$9;\,%)+$rHV"mOrqA[J/:YG-lc?8i6'2I9D3'H?eH>mC9f=qP-b]\O]I6WE7,uYpX$d@(0=nKq'k0p[K^Od$HQ]sX%`/Y9P>cSi&$E407%V$F!8dGiN'&m@,G(F&*/?07pB[F9I496qReWVBS8ekrFe6B#m:(0M7K/6SC??7SE"94UgT__BJuA0=EIHTuD9g?%WeijXZ8k2iq1%AQ7k,]hQs@r0AVFBgMjeNYS6*M/BF\,f"g]d:u#U"W-Cfi5Z<@Jjn7p3V636PsXBk3hTk1gtA<iSL?1[(0l3h$gaZ:HEQ'mm9YG*%!(*#M351)l=U%Y*pFlYMO@OPCU^("Vcm%/`HgQ\fWf.qOAJoV7X%jA4@f["VCEW)P0S]HiX[bV4Z>D*a2+Z=?5mqH@5.^UF3/YI(%JQk9to-aM[BNjd7=Lj@^j8D?0M9`VGXZ;bKrktfCO.BW%MJqC,BkT,Q&Z6-5.;fL9Z,S$Qp<IL)a?s*LTK.4PnVlnMED(T$/>fiL%*<qmc/Mq.3<oPqhA1r<'4GrP;L6Lg?X&>d$(lMqH[ui,8iZ>)KpLbRI&.n%ZrH3kTVYG[T[9cR(j_Ss$R\5Zu-)8g\G\[IfBaB@U%4t5oPP)MW:a\D'E]L%C91c%8P@G]FqKCZ4!eM:@adLaZ-%anQ5ok4:j5%B=hr38]B8O((<m)nub+msgOc>fI[8%@><4i/=d(9iI'%RnXJ<*HqgP.+bjE_H[W_V%GbaJ<k:%Z^S$p]kict`@CTng/_Dc1*LcFYX:SI9rgXrYA4`H#our2-_7h01+o)WO']/)DiV_2$%)`/%P)r8]+]7k&hWkn;4FhPgai2uC%pBJ:1XHAW1Wq:U(g2\bcurOOH5dI)KYaK"',PlolZ_kkDl1[00]Ll?HDNmjT`N59T1AbHDK^Wl%KqaU9`+'7,f"''P!5^I#O'Ts7g%T(.,RtXt&1@[GoklJ-jkrlO3U1L>qj7%<OWG+a-W8?7ka[VGk9&4cD-F"8dqOe,-]%-M%/$bd%:#GdBE]u_`JFV&a`lk6j8l.k`XWT[]LpYe"E=,$),R.K6!F`[[Sr>ZV8[[?Uf]!b-8]5S=[:];1%9`h;,4"7K@]3$Ke#AjLo%kdc%c'_8Fol3cl+t'9J3_7W(L<4CpJ?VV;p:+o`>M;D7?ATTG]2DU&QD;l>*9^T!NebIV6)Q!^H[#2I7U5#<_R0t94NdX7P]nO=MhjIO%*o#":ZVgM%(2J0=SK1,*-\3L+1ZZj:LY9%l0cXW:s7=>c.fK\rTL;WMr:?ksS=G1T)AdQrCp'qij(N<jqs(l1U<Y@ad?foUZnER5%CmU.o6J+Bb,nt0U%fde+qt`#l$f+AMAcJ$JGjuXubMgQ**<;mfJ'04&j^2?l/7"&G:Ti#appQF9EgQsS5$ROXGsfg)H^8UPi6["$%R=m*Me6q#gEP,?!3iT(a4Gj5\51l6\khqCtRnJk*n)`Or0<k3=KC82(#<kXmSU^eP3rU)B/]BZ^QRPNlFdHeOP?PV&g4"Mhh9(H#%]q(&tn?sAP"Y,Q7k5opljA<%o/1>%*,QK4:,C$4B!F42%`G%sdCW5=;Am<]DFoD^_?Yo3(;pVZ-:;O]4!LIl^0GlbkI4XT!c_'!+%#.i+dP:Q:8oNPdHMNLf\_K-4G`CQ-*jNKd>/uj)pT5$L7=toRCdi?nA_jE%7B`H_0Sp`$M_+Pk$m#,d,DBK',%9NqVdg<qsh)Y;_%j2./4O"9>m2;<,O`EI9Ho49>QUM6hu4q[!mTr-DbpS9a1UW1tBchHHnL5MlDB%7J*Gri:bc2.+ng6&<9UKs&c&+b22Z&7Gl)UOG@%1<ja+G+.B8pc"mp.MTIaRu+B>!!R(a5Mh%FSHg&?5$&tSio=Ns8G3P$fRlI['%pI`3jQAf&iLsh%W)>9e7g5n$06)]XDZsgBBXdB%m&U53L6@8XIIlX/kf5^.#?bmI!hl_]\6FF)B<V9sF/Cbn%ta)4^qW03)=+!(Z@T@Ic;PjW"hR2TcspEf*1?1:,*KMrD-H)m8qK/V%A7Epc0?Oh/j).I)qVQ&(qLL`q[,5*p&c;.\c,"'ciP,InQ+=cS"WV@`lfejKS#0;?l."Gs7-I?d0MV!I:8&CK9?N2*]ITgL7o27.%T#.68PKOPpCP*?aBTEg^reb0d+_mu@-`YM=^rKT@.W6ms]:n$r*'6HQWi6m@!nQP'!s;U5IOG--bJKTK$>/qTOG4Dm3E7_"kk_l%%]hV)3DEqpcSqneV&G`90?JV2uN\[dUVsB.7;$c$_"FPgPWO4;K%4midkRD,moJeUh'iflr23lY["'rrOn9P4pb?uJ-FhnJ]!jHe4%^M/!9r;ZZ;X:T2V=S!%PRr/</Z,jZ/NAn^N'mL:qdPle%XVPJ`@--U*dPtV#Qp\;3j0u*0IjJ,A1^O0\$7/!cIXH04)c)-\.[O!O%W*;rJ.PVIVTi>U\bEJ*D8uEq6:?T7n</eSDU6.fC'n.40=W`^r;K8UB^eha.-_T&;K4$3^1l:>\_cD)c'%9)^ju-b[Z!9JIOpQQs%RC*Ps;ncg.lr&XjHC`3U+(>]Xq22gE;?e]c+#6%X#&\)e;mO&h)D$o3P!.X)ecqbWKOB=,TOl&\gm1;meW4^pW&US%j@lT\L\'0P%9'-EU0Xbn^0d2Ji#1YVnYF%q!OkA?3FcO6d1AuPU>FqkaHQ%a0D?<k!iICK#lt?gJ]`fJUn^E3%fDOJ!cjh19+.N`L2U+)JhjnI\%gu0V22N\I92f5311m^kFB.OTIq^>m;#djCb/"Ik6R3uTs79""mmAUe,UGPZ\mN*aMN7n?qqm4HeGEh'sA7+P]f/,sFLXj4VR2(`d%q%jYugfA+/^7C_GbA??7gL]n5,SDD)[8FPf>J"VQ`S7'UhbWh\4l0bRGE?^'<H+9>idnlq$mBe*C`WrO3s=n%C2uCPMY18W+<`k*%&Y;K1iTYX7X?"R,62Bp1aV((]:pC6THkKD-?4a]W/NVfLhbtGDf7/;,=]#GA/lV07^Pf`O\[@cH(4nH@][qB?J`$+lER^\*ABo=g%MuF^P'VAb.M:^T-S@cJi`PYo7inc()2=sPBIQ=CV&Y=0`6I#RS=\tAi6XfEP3F;M=e9_$AMWGX+LG56A7Q^O1h,-XeN[n*2JEMg!%%FV"3P('Yq^`XhW&()jMgIjNF:J5YoOBr%?I3@hDdt#">0S^:D0ULl<Lf'?OYX-HpDgB=bE\D2o1BbU+&pJ>n=GQA$.=?5e49KeL%!3-(I:LcEl93Ub)YS^!6#]obcZU,R&lk65?6qCge:e5^J=m"aI1ObrK.+JE\;>8I0aFRp3Uk=<,2pX#'.b#]S,O2C0Vm_tX5&s;&%M`PO[=2J-q6-EgHf<)2Ol$97DJF1`u?2SHX!iOS"jc!$(,@QU/beLj^2mAq*&3mZ(jrH.,Ftk/u;6ajGF/TLKC0ibX(`<+r;n[kD%*MqBI9Smmk5G%&'DL-*4G0Sm'/W!5nOj0:f\*>>3j?;KI)n;'OkVPjC!GI]e5WOXrW,q5kH@@U0UiFA\Q&ruoTch_NSDWtqf"8cB%=GO='Ys4=H?5hX(WRY+Y@lom%A,l9bp.u-N03MIPg16$MCOFh][[Gf-o/UQQCq,^-Ri_O'`U>*OG@R1&;j@+@_^X]78"aFk_acaC%B?t;)6d2n97j_lE9qF-t9N=Jqc<&IT]3Cf6pF)6!q%s_V7PulgZ:4YlOSi'_TWPT\[DZ:L!3\$N8612PTD+_!$atDFRE'7@Rl7%I%QS;=Ti'T8OI)!5LfZIF+,6s)^]:-b3A[cDEp'(V\Q2A1O%K<EBDPR9;Z9=o=D`pX5qk!;<5KQdNE4SBO`cbB.I=>^f;]kK#$M)7o%nf;j^`\W"`K34[Cq=E8ecKj;F=Z$Q4Gs,BQBFWRn67V9%cF>OF\$sN'/(7N#`1]6G5-e0EY%(c8I%CkQ.<I-&%]&=B#?Y3TT\H)d%1is%@)aC61;3^-J%/(nj.Ej(7TDiSOXH<hgFkN/J*%3<[7e00p-VDYrXqPiqb;Ls/jk,l=<'.LgT*(p.*neeglhNLV8Z\k&nUmOu%CCJ&J:mu$f"m=t:G$-U\k)iphJM%LR(M_5(#)1m^a04eM!N*EE$!!f$NcJ#7s&]@oVlGf=?m<Ae77iSB^sR'fYYOQrQ&a5JFQKpl%hCij6Pp2RD=p\gE$ODRf"#YF\.d-!Dc60MZh.nO&.M\S2*ZR32V6LtimR%)NGQ^H4SBGpiVjNi$6isc8KiJZjDU/*Er(2#mbF6a!%Kh[K?F51H7T;`?E,R/bt-UrWuS@iJ@3H:Qn9)J5Ule$l5@Tbj[G%L-WBa^PnFXgV9g.q+E5YU7#j*Z07Z;L$r2?E"I5[A^&'$*Ij%4O38+&@K/PQHD6l?2:Ik7TS/:4Ufu:f0!in'L&RfKbRVrQ9c;X[aUL^3B4T88AC3%^tF<s,.I$&M+5JpdBN7Y]tQ](+Q%NJ9j*[m%RlWpU2lA?j_dW=C$EZ"S*<_TER/W`HA"<\X4Je-o:pQuY(.8giXKKi/4fX#*V)]+F<*XO]SS:)D998"tK6)GcGM*J(d>M^gW9ka-%:;=@YN(mD&,riB1+gJ+-0QXf.#.dtV"Md7,Ec?[$(^[Kh[bS]4Vb[.'_HP*tT+bN`Y?dk8Mh'<!U&$-m3gck/Nb;C1/S'i>kVDd6%?I8>N\:*o/m'j@]'4T\G=YcekejH@L[.d`2blmYoV]_oDj9:@9T]c57MSC?LC0>a0D_"`uHd7X0\s5B^/DX5tb*.%-X1Xfib`e'k%kruZW*?ng2"mShI(UhIs;7=K6!/&7BNS`VN%?sPr_MbUj%ipSnakNh:O3Y*^eB$J!_;E#p'P.`%f0Q,mq'&r,bf3>L8.K/O<;=a.%n\=@[03gp\Lo*BEU8s86QD.5oq=4+fL.K>HB\uHGX[ZT.kLol_^8716_obj@6RS^KA,SY]9E,)D6pdWVYoX_eHSL@\AJ2Og+F4md%0$'<A;%*O>P_]qE2'<Y1VBa*'[5lD>P3j7?N=K/EXV^0a"iN_-W]G10+e%]PAbnR-F6qfAGH.fn'8<M['n3odel1`l%CJX/FrK#Q%]mUbb7[qpqh<i!e-u6M>Tj&#-J]#mKqf:?P,NoL3OH3K883?UG3#R/!_:]3m6BNBp?m114'J:aLD"j180Zboia"HgB-(3)P-PA.>%7.g)/\I;f2g?;YC`]O#C#M/\%>Q,:OKOW4#CDU(EKT`Qm7*,<X<FV4tT%V8jY8n&M80S-2;MBXsEHguj6Hi",8W^Wdg$p`TBYUP+%,L(2@'Z?;[jNDK>rDl?"l7IrHIo\a7\g,9H7N=NV$LWB7<*>2^;)qN>)bRWkg;+,h]P9D#>4,UK6q)jJl?%_mF)k+ACkTfnYo_?V%2,/iE-bs)[KXW8!Y^_aRCm=Whd8L[En['="hJ,*<E@_6R[&2a/n5SN,_tSj'CGPSuYS-7SLFXC)WK!n"bB[(/ULIXBm?R[Op:nrb%'=DsehR;fAfb8plHKs8lpp&O2EV>?iFHfUO\QaVk]/d-m(Y9(Wn1p6iGm.VtAC_GDJBV(=/nF@QjW9l<e+-X:j,n/;C7QkRP)`T-%hUO[a9dr#\aKgEt%>ot%GchZHHWgqe8mH>G>/53]F/BNlpf1eaSF?F7\/5tUOZ.ifUWRG]fbW5TB7*:<3>Cb$0-D]Y>;^0SYefC@%N4@ac-pg=UmLF.=X(R+VT11eQD:t$r'R7rtfUn5"BP_X:$1u=J2\e,RRNX%E7CWQVk``K[!OoVg&HgP*7!+2"Gn,dH)c7gu0n"]o%*R3,FlaamHmr.0J4M5\o;sWeP&3i7>Y*N-%U8`gqO>GeGQIre2,:I,u3p.Dih$Wi5UR^jt.oSlmm$qh^e@Y#G^gEu.CV6)Hf890Y%!XDmEA3%`\BW/?#4G`)iO.9lDo`o8+5QRO;%7\d/V2hdCWo^3kE6N:X9q22`"*bg^F%Rk6$8uG>eUe[\bI=rD>_42be>"A4?hH9_%rW4a>+:0\_5EeGLmqCg5p7%a^6N$F1$.@)][:aUk+\6H1`+uL^_JsPnqX;uTn(E<"=*F`j.Z`G9pnE4?;qd&O=f)pX3%/,XgsrF8%/RK:!jG\BaMCiRun(\Cp<gSHS`Jk'3M8^<mZtX3q!*Ce6"Y*StD`nBA0.NRe3JP(AXc`#o(c+;:`O*>-gH'$gP>INn>P45hXrC3j%Q6-A@.+fQ%RiGPYcr&.##-?(ooC-9"?`p($I9FK9[tDR=Thu:([Y?Zoe_bjZ?B&du52V6FE3kBA$k*8sY>2c=Lk4iS0/TpG?p9$4%q;5WMTl*0j)Us10]uaii-#"Mnc,uPUS)O21@:a.G?\=H!O-^>".mG'c#i9OV=tV`/[.:H]]W<E#nW5=hP1k*KJn=WFWZ.r#bR-i'%B`s9+=aMS>9<IX,ifUNq#ahbRm6F[4UZo?M/ScplYe]['^YUcb3r"-A6!@A^S#I\m0=Am7WWd`I?g#m`Y+a-0)8?C2dRD11dS5;m%b9WN<O;/`<5q9Z"8#.KbYQ.r/=CSlaU_;8KUAq&d0'=L>'M@oE$kRZ##l7SFm@'^c4-RQ8;qY?"J+_c?n#9\b4Dd$-:c0+N/]e;q%pi/th5RuskLM/n*hL$4TYI>]Hi4@WKD?rP?nW7og=uo(ba<[iF,_(NHa,Pg.!aKBTmN=S]l8`i0(EHAN\<m$4V$uqD8F;`tb$qs3%iR7k^1XG@UITV[05hA^SrT-Y"`@WcQ;[6d.(eX!g-.I34W4XT:b<bB48@P\,_QEDnJu"EnV2bd0"LIOVSs5-TkIF`q$f-h^9OCb'%>)%8_=qs8eo>h5Pe^,MeDt`n*=;V85ej]Xn"PO4i.r&`L#I#.a3LjU9/QOr_>)Kp@NfPWJQm*"j<YAJl\O*W)QgdGa#M3`]V]+#L%904QG!j:[Ff]@$\p$6UXJNTPEpXpf\]$P:5/XgO^e6VDOe>J"c4NHSm(ukcZ?:Sa1E+_CI)td$u=*SSDK[FX;0i6@rfs`EUL`I:[%CW-`D7"CTBp+!0\;"T!"r=)_GG!4Q&,8`R&;dc`5IY"JPU\9Z<LpP@#@KAdEl%>_,[!R6(B]V'a*@S&mcuC%K!8[q;ghouu-WT/c%9j.9B6=I.W8+Z@]d&UU"QSc")o'KC(^pOiIQf50_9Ptole0iU-=r+itiu*l,p#C'"R4_]^h-VNbD7Tt8T[%;e9R`QI^"q&lZVHg7%D4T-VW-PnaV6e_Y<=Z&0?::WC8]&jD=?9QQ,hG$Alr1sNDe,YCBo:;jqJdJplOa7I=0+\a_j'HZ]MQ*EYbG/U8\pAIShhug\i@2_%>Y4%4>%69^egnj\ogj5bc6u/<!DKsh,X'7h6&p[)[c2,.l<UPMM;&*W:G)M&<f`;'R`bEV[MnABoAX5TE7fK^TZmgl;)gAP==,&@%Hb5H<5=.F15Und3:2d5VG-K?%@7k"HdU)HJdr`e)!K=mX3EHq.0j%:(<u_gu`kNmYMpRM;F."-)i[d5!o$t-E^r4Vtk4TCT('cmG%Wp5;n+kobN\s&%Im5T'TVd3nqJ#q4'+j('E&Zb'Wn%cBgS@+TLlKs&t`(5Xq0X)1VeW7`ak>k/sDCY@G5f.l.Y[*-a-'g^n.^dmW%UaKi-Y(r1#!b!fRQ.3ZL8"'!p>eXsN:Kt)M_loAsIarrp7(LqJ"IsRE+]VF$Y?fq8'&rik1<6?bp'ES_.;!Sl=lFn`X6J3=V_sg\%itL(%lR9P`,XJ?Wbn&<mZ.6IO$2l]4[>LbiO&*")P"WR)_!kh,X%T6Vd.?_@,+SM[6;HFi@C%AV]$8U?PpVCSa*$WI%IedLB*pKE%fl]o\9O&cV"FW)WX2+[YJ^(EeL+;)T!s$7hl")u'%;PW/T7%TMSKdC?),bb.P>?fPh^IKLhcVo"p*iWD&<2CY1*AoRJJ<<3;Ir`M%'&'N1(J5Mi-W+!2rJcf7f)LmJ^2^%$J,^L:0fDk:QrQEu0*[Vrg#Of!M:7o<i2!^d'4T)n]0)#3ff\G$'W/ll4nhY>hnRFbq6W;c%l-jZ:h#"YbgE57Y?j<,7Re+b#"6A&O\>9p35-O-*Y^L=L@+n$%JY6s"5,.]qk9s;IXOA/:FN0-H%7TPg,ECTtY8UM$!/Mg!hTe1Y%!gH`WIO?)?E@u_!XE4S2lYd4S9.8N+HFr]+s2a640X32oI/T1d5>FI^AJ@7q"+/$92$_KD$BL;[\?E\.@OKbFc1&t>+Iak)9o.$n%50bI/@p69pl_E@WRpf$9I>BVT)m469o^E4H9`F=l!SPfN)4.LI((sS^(ln4`4MSi9&b<9-m;j6i_lIZ[fa!1Je=6I-jLe8;2.BLC%i'<HI;o62VY%]]Z-Y)e5M$VC.e:0#=4HEUi'$I?14R;`7\eo\E]./nu`q4,)M]?;X$XJW-#r-icQi8$hPSH<*94LeFFkqOL7O9"Y%-Y.5L>$HhNh3'A2.?_u8H^,JS,-Wr''#DB^GY`P]$(SE<9-WiZV;UH"bcLaS9W7&09?fVfof#M5E,;n#WWrG:+LJf,@#"W/S.SiO%!W'2Zqds:&MQ&'[F1+bk8'$>M&e*>o&7=@i'a?=V&4VL?9aRltY7MrYGb1gCi).M&O3fhuh%I[#@0bC&J1=ROQm-:52<72P4sFX?%Ku8F:`l0!_2MVRI;XAp@*DpY[DJ4cYa!cEfO#b%`O$=^>Bh8*HSEbi7T\]5LW,`%6ho/L\7KgSs<[HC4hO.`ZF5uI39RGAUL4t<%%`>\'AZ`k-Rs8H1BS94`kTS";op:sA-XZh6JUHa.t5n%<*N>-g9DYfC)fXBH_@]%L#E,9L%?&mo>V5j5<DcsK!B@^Y>S8-f:r=mop%*S4@U`Yo'"@][s?2L`*u*'b;`En<:oqbs=r#*_uRgl?FA=03D&%#^V45E-c_pea_#%=I3#i]Nsh35,cr?r+jPeWe[.>)^=,V4?jP%0EK.*V'pT^9q3em$`qrf`C3I:/3*:fBm'7gH\)*>bHk."kZ3O#D1UOmHn:a9\FRf9;;J,r^PMtjT_$iNr;fiIGJuH!oM"s2pK.3.%KGKZ537@Ct'5VblSlO$6P-`E^Z5ps#UkkNdH^2#o!/Gk-M`Z)c,ed'oQ+aagcecRW#/QpLlWIF*We^oP:=9cBn&u>Jq.ic::*t!j%`:Y,E%DHM9U@L,;Z8[*uT/JT5(2QnkfT0%Ch\#"K?9j:"@j9BT2[\]g_j=dI_4%_T-Q;Tf^[pgC%T1lR_S!..c$-Iah5r.slu>pr%nOI-SLt@B$=N%7!htlc(@G(shk']3j^3bl[3.m^ZD+><!I]UL$l$>Y58:HP4(Eu&,e2':DV0D#'IF8)G:bcFA1*@p</uo9p%aJp;%*'\scm<NgX'$T"DK8M7rN4ZoFaH2#iI#r@!QL4Pe-H9a1D\Jfkp$Wh@\q:*qds%+h`[eL7DXTmTVu`;BH/_A#lN>b#>achPK>t`J%VU\j'iB]e:ebHdd&lcsA%K?kWeoHonZQ9k/O9g.m%3aqjm*2UiO0KpTR(jti[r)2go1*VBehBs]*/Xb*d?8!OQMJr8dPRP]`$m9k%5W)Oaj^W5DrDKd0ej.NPF+H2)+`1:I*7UP1=h%Nu,:)MG-U0[-@cJcC`<#\F*49UZ>1'MJpi>6McCP]UglY<_NDG=A>69()C'N=!%Ysknki$N;e'imeIMcQc;!uU(rikJ8Na,CW86s28B2mgK(9KbF%X:(k[Zk*Hg3](s@$"D+([7FmL[D8\tRg<"bAlW:UI6?nMpKg=R%"U`=m$f(EN,j.OX\)J;Q0%Z)O;Sg)OIW+Ml]Q^f_XpFm.f,G&1:\01BA#FQoKA$l3A3l%@.[Bce(#\BmA9n\gV#k-rr6/DQ[W;&^%p3ABj;"/pc%;mJ;+0.&gROM3Qo66k=r:ueY+.]FH<Y#5E^[50]V"?c]NQTIilh*l-Rlf9>B6rT5klIDfZK8dam)A(JP3bkl:?'9=%J=L"sQ6/&+#I^*3?]iCtqPlV[INU]Z64/jD/@gl0K\SGc\lR5h6S6-T[VFCc4>DN>h_+EZ=V\F]K`V\eb.ZdD`aXN4`Xn3+NfP64%[5SV56N+pGEum]DIRJT*JO#Sj*Z)!Y.\/J,lo6'`phXS7#W4,P"=A,Q:6_8P@$4Oq]iGdg/TbFHjMj3e_(QB>`DEhuE17ECL;]B0%<VCuH^O@pJD^kP<LSPrEE@TP<&cDNp-Xuh%I<&0AZrmZ4G@Mmb#iW+&eJftE2J\[gWL6N`f.+)[\LC4U)ICbt5\B\[IQu/Bq8u&/%d/0:jltn6WgYHLMb[^tq/X^b"2NQVg(M@Wd<!tppMU1(a&2(BnL,bp#,MWp58*Q^ACbu4M<)*X5Xnc1^11CoTBK$0FfU^Jh\m$*@%")n"Y=NH!"3<Sql1%4b0?i8/dE\jH"pguC(M3S13re_noAgY5cf-BlE1SoSPDWu\(kq=!#a`).nI,<gVRgXUEQ#EG<N3(O:`@<*"%EYI"&[/":=2;gOY=B7E'qmu%]*K"?d)#?O)]GIgb<@ijA1IW!a,'N+=qtZ[NEQ2Y5F/o!FHKC*L7U7?0Rg+n:?gBALd,XKuq>u("%'^q@@S<U!e6-ST'oC;uf5OQ1*gc$/Qd7_l6YbjTje)*C\\6=k!RkG8NoP"k'8^iaArdpYija*Qjf.$uqEW7(;.+/^f32Z\(Q94PC%MW>0s@HMKg3Ymc<D58"a?14(=7\#4S0RA!PR8#HDT\.cb)[#[u#OCM?Pp>ATc(IcoIdh*%5$ubls16s5q+(tA[_f#2@"r+Bk3LB@%<Z3'i9R\#"R]YuDMRlZfUV'>XY5s:B@^K;16rOe30gBuf5G,-)NpLb7`6!YAlc@),Mau#(;X*;*rm[rH@VI@W^hh4`d$mr5r<_r?%(`leB^;I@'R,?geG&W;XHAXO@6uQARmf@ZqHo"taT'ZBeqi5BC]$HgQ3T)Tc/A%STn)M&d*3L"G5Tbcq2@NtOQiXC,C,3a8RLedp%eDpQ<H)Lnlg1C/'MK_+rVEga0$:nR)BnO*lcis[;P\m`aW[UhI@e$2:I:026ngt$2=Qoq]^#B<5[fumX>>N=sHUS7`5d(k5(NAQ'%bg3P;>];aRYeFE#l;Z::]A+tFAS;0.P+&kkK+Ok07kKTS\o%tt%d`5_kR9F;37!pO>ZI9l%VeP7CDUs<=ob;n)H)[9;QRGUUH0j^%`>Jg\ni]Z/rS"gn"aZnqXp@\bI.IE/?[EoVHqA45G#qqViWBasdf;7q0sTo6cb\^_J$W4[EF5H=5-U&eNlsbaqS>>0,RU/m!_6CG%Tb*R@5g1H"1tSeDoL]MIbD*;`_ZqaR]f!u,;)g!m/I$d"Gi&!t=2LG2?X`?pkO[;r\Sft)*D4W=6.B5326lgd&0;,N*ZY(Ub&C;#%NfB]'Z?Wt@]//WBO#rRDdgH\5_Xq*fNK7S$Wg!ck(#9rLVi0M[IZj^\>*d_&XDl!Qk=p>L]m2L2JY.^0&T?0/SBlRdhX>\uN&X&@%\,U(+`###WN>9(dnC7G?6f5N:h/]L>Tn^mLZ0m5R2Y7Dsj<"moSJT$gc58aD>6L%r*%WVD*R1ef^jhu_!r+t*h%gKtZQ#`q0OJUF%*nA1&BQ%Mclpl-d/9Q@9?bIM!GrBDm`NKfUI8VP7IcQCY1rdi5hgX*#T?s/=GJoA:qZmm\1lN>Tf\]J_4NCaA?,-T>^li1-oJ#9V%X%'%$3`j]^/q<RcoVgeBN)k1CY^`,5ZEJ\nfaS>:hksPV.f,W:.3n4Vd+.\F""A*;kiZ#dAg%hc*a56hD0EI)8F)W1rTbK:Xf),E%n75V9D];oo(R%pY\,,tZ=X25NG8\h3:;l$ACAfQH]kLA)S@%#a+]qiG2_oaIhmY_U5E+Z1B6(f?<jZ`fWEr>%,d;/<07)hto0#FS%[uD?7R'Y1\Z:"*H;TNck3D4q+T-1Akm!7I&YBf,S7h3QHi]EqLRGZ,C3?ii%,Xr*#JkEr[']<sT^oop4[GW.*-j8s2Mur*O4s+uT%,*!%_D,1psC7@o*'I8JLE:unP0`Aj'6.8&R9RsZD#Y&atioL_n$%1MWYFW`4j\0G$O_AJ]):N'n7cf%$1^/dnpc?BMIQn>$>cCt"%U^1fJ&F6%p+PuVXld!?##NWV%agk_XY)?\Wa;lGXU\frO@uSieruAdg<tlf3kpICm^Oj(lQ>EARKcA!f^t0%K,'.tVG9X;Eb*V8q%"P]"3oU%kO0qe2?$%5;6j))aBO_84f"9cZ`?MJp5*Gnrl/G/[VnUbGPAPkBq>ACG^EaIY6aHp)@N$9\:$EfdjJdk:mJMr+6l`a+;%Ft9/-CjG[4LbdmYeDi--D(kd=pN</R$Ht2l%tIfR)Al0"-g6*h!qe4el=DX/j)J5*p2W+=r[2Sh^Kad7,acId'4i4gGc+<VehdGd%jTumYqQ6Qd+J>7bNlM/p&^Q?oj)lI0W;3!u%'LO>k5KI/mKHC^(B<pD?#k8)4Qo-K#Y8\;s-G^pahWPB>0&nn&r*!O>.-`DZuJ9\%9,@#nS;YdLpih3OcZA?pM'e.Xi^I[<9P$<Ti<?I8^ee7W8f*3[qg>\&.dF22p(6&X`\(%c+I=B(lHU@@a>l:5lFM<qiQJoe`PIZ+%!j\s&IUKA!huR'e;QIqd;k>1jW2MM]f9AM2qd2(#ZRMuC(4glV(F_sj?>`%2gtMZ2ZX@6SlOa3dA3js)ae(r2d_I_&RN>NR[@o\k%J5r%#C-a6]N%#l7a]F`)6?Kg.7#7Ql$CaH,:b'2i.C:0=n)SnUmXKZ50r(I9gNM#h#<IF7;gVO(APHB'CIRS,B7XXe(_fA>Hl8Zp%ViYl3kSKM/Zd@ehMZAq>MA6JD8XQE]CB'!'*=#':SuUOfJ'5:-C!@2K@c=)$9&'b;^fi\7<5t&?de>?<>)l(?]njWuTt\3Ckr3Vd%!o'(>i`XBM=pj#E;<*]cY<$fZT!hjPZ0U7gK+qr##nH+VS4RsZk)eK7TiK?L5/`<%D48hRrqY)RYN_s]*i2br#K1/9pIk$lO?RI6%bPRcigp/dhI"]UP"'`#Z&>Vf].IB+(PKV&8E/qM!$s;bq<U7;[Pf;OmAc'E.DC*#1aiYDp&B;3o50q_LpKd+$)-2uToQ,p_K0PrK%\a;@ql\&[/@:_=Yr:;oX:0#kLc1*0f/;4fOg,^K?6#sQ7bMH_kp!m[X_-nQ/.FnMuWJ'sW/RJ8gBiHks&7r3CXK=S'.-TV,g2Lur%.9$Q\S8V2Wg;CXDK\<CA;rm.1q_=nZ=d0*$&BRmg+OuL;AV:l2ZsHt8B4*C.iXKJoUK]");\3)j-%Ro,2f/qQD!M:Mg)RW4UMBst%Tr_Jt`P.FBopQFPYSia\[@$C4EIhSaZC81[?grRD;4c;kL3uR$*KG'!e)]\-U0E>u8nq-MnkE<s_&YNd[?.O'l!+oC]nHh9ntdeg%52%S`X'Gj1l!6l=#C(aQY+pJ1cYjsIpG<uK`A_(2=<jN0A-&%flg-4Olcf?&[LgDc]XeJ>d>r^DZE.4BH)h_7&"h2F?2IT'f]/4#%_V:*M2nZ&8D4U[lB3T\0>oHUR_f;VtpU-iY#]Hs(ic!ad5@%]6"`r]<B`ou`jO:\5HCqBd\hN;7MG_LmRl6!>DrqQc]o(6HgO3T)%eOP<[IoOf_D:?)BoN-t$-,/ESO#ot0SgcEq>aC&*3j%rr9lU0dM%m_:>0-N=HU$rT]#mpgmHRcq*uU.3C4Xo*EV\t??N:W'Y-!Nc%Z]Rd9oJo7JTYkU)k9V3LLgH#>L_R3<[q^;8,bO*ZoG5g;-fA`Q!/!/*n?4,mo<<j<rV\RF\J5aNQm/6f'TlVVH,!mgT+4=JH(=Y_%b"<0kVT(sDKDt`S:/0G6`^:;Y%OM42C?%%KmPo[#@8LMPN\"PlMXf`_r>-6+B0FeRP+qgMqfs6X!Z)S)5uaSmC#`_Q\s[*Z2#;$f%aTRffV_IPLmoU8aKel3Q<DSaq"YD$D,8"oZ+6O<V!Jj0`j9*BIiSO2eS$P_*O`J&d-++s8'+E6[Riut7pif+AYY`:2)0#_6\G!bm%a+d<R9/D^uFe,VbZH7DVg\gr;hNt;)MJdB@ZRE]OQ43,qm;90&jJ-_AStMrc<AId$lE\))4cWun<Jc-ja'qY/8&UpFSIK&oZp_@i%k-b@Y+:aHRlf0[kj"#+P*5S2bB]Z%jJdD4W$?<*JC>L."k-\+u`[&NSO"TrnPO9d$.Cd]a`=TjnBU^%b8s=uVoL=$_a3b^P`o/,"%8o`(<j<-sZ-0ishVZ#ijYCUk"RpKg8@m)R,(nW6ZRm.R.^;kBo#4J6M`sYZ_`9#.aL[E_CpQQPI@NOa!N.gaU4BeE%(M_i9a[R]L%d3i9uKT/MXgP.A#dsr[nadB;;Pltth*R@sMie\V2qQVYN2fQ(QF^>oBjT7Z=BD'If$Mbh?9u#F*>rK:JHceOd?`dEai(>!Gj/;mr%8629rF:cfI.S&_=4qFiiiO[5FYAj\`Tus'1Z=I:Bjq<0VjDUJd.i.mc!B1/X[,oPoKJ9l^f`Utp.>sggfC?V_Uta3;=l`:d!*54[%)7>s:^[S8MceJ/$0&V9>TYW;3nq-b<Q8<?l[0Wu/?B((TC>5h!Wu*$sctGu3cfZrC7=.B,1m.Yb0j^ADdSNjZDTS<N::A1P6;JX@%iNJ44#H[rkO+u,D-&b*^pHP:21K!+5n'Jo:0QM@-i(g.(l6$(rHn$LC?\s<5TKK0-TgR)ieVN\bU"B`pqlgd+2*l_$Ng@WE'*tla%Q$75ikBuc<2,M\LPZ<Derc+ej\AERcC>n,\&IdE@4`,k3k>+=-:#]eSYNYn@#5OjVepYMjH?#6Z;:$9O]5f*o*/88/G,-MGd<n+!%cu7VlB@Whhkn'[SX'eg\VVq>Oo6Y4f4sJh+]iGUt>6*8,Kt-llO*ecrCA;BX('N<[jf:7O_Q?8Kd<t)3opr4qlC*8[E%NoK*Y*)D%(68:d=b#I.B9VO8<d^iu&?Lpb_HdPacSn`:cuJC)$8`<?<;-R<Xd0^[8?.BEO[[^f=K&WNHO@J?e+/1Jq)%/t^)LS&+Kq7ldH?5T%nm=M^m.`(XT0oXFOTuHb3PJMO=sXZ@hMH`Ra#kddTIf&WnE7,VI[AW#F#`7/>,Ym=s*!<S/HQ/),;,GKGmCZUVrNH#UI\tu8I_`Y%cf[<\G8.X\EE%iTcR_IBAnZ7Elsho!%]Xk?>#]N)D3:_fSrWFG7@/#6Z$oK@rQjZucEN;E,q;J*;.t"@]AcTLJrOhDFdg!dLZ!8_%/=?72mnFA:(5F2;eXDp%eK32a$E$`G6P<(9XeQj)R!g(o@;2X&&qHOa>e>!Daco)nH9#RRSh#9WG;8GeMgr.f:.aQPhIDgd\NIXo%#*G/,HDkT.X*XkB?Jd'Ldsh&Pn#WWj96(>W]h1jpRDn,1W\js/\n0oBF>KDIL[AT,;O^`VA&apT`?_LFVg3P5iPFQ_bA,>V3,?Xm%;c[-JSa_4<0s2V?1;SH3YmcQdC_t9^[8*JDbCMfL69ZID=o`@^>74+t"IhDW=+)ZR^AiIA7k&EXd*l1mZ(XU`#tGcT;c3#UH[=k>%:)CR2R_dObQr_u2CJL5ORPUeI=Hi8o@VRs$3F#WQbbeM395'CS4.5p:6q+S[@,+"/Q'r14CYI=9+'/dAmc-\k,6+_k9B#0VfpKC`%C0Oa")XbKa%3W&=jH8F4RDM'^>tA`[qI0\lrI.<a9UGu47&'6+[Yrc"cZK;`Eq[4bff5$F=N*/;NBhYMgm+($]gImjKHsE1pqoXD%%JcrkXjZh2_%2(9MRH$T.*tHqd.R'Ha=JW>nIcNk.cCA@1ql[?Z)EkY#`o/@&Bqa)N3U^L*Pl6@\RjG5ig\<HXM(nj0hUlAB+Gd`%'fR,7q:K@WCRs;[c8ereo[U8T!nPE0%aPkleS@3&R3LV;;jMK:$E5eR;Gku#'9LaL_65?Ng<,2H7t(Fokq8JILoM(KO(tp9Mt.%(%oQJ,)br<+8`t$9frK\baZ-V#aJVeTqT.=PX2JbB$,:=`fj:CLKCtj[Zbfl5_"Qd\.%ER]5JpcfP4qW]u`cWAa3s8%=oTs-/q/=tR%fPQ<bPVA=H-Cpjtf+hPD\5nXQH/q5bm=D]0/HO5rI@6(1bDHlU?n&L`E\Nh%YB_ZuU/J\L,4los?;s;%8S$j0\ejuFgRlfmrr,.M%o`%ACTL5BU6&kc2\#%M#Y$T0E]ER(&NZW[jquND8N?[W\*u1aJl3PZ:,/A18rHObqd*M*A&UHp'g4&&JQO]HQ8`Nkj1*s\;lhJ2#%U4q6\g@BN7,jic3l2:-uIZ%]9J#%_3/Pj\P=')'CORRhp0HmWWi+ItaHJbIOAW\WtSOmR.8+XqA2npHtQ]Rq]nl.sl4nS56]S(E=%,Y>89.nYEg1;c!>r=[$4?MU$e(!t2AbJpojf]V971phHShub_c[,:pOMoH5Q]+fd2]8YrNA:K.CYNVn3!>cj,BDi5R@t-Y^CL%E(%=4*>D>F^t<q,+T+"J*\uZl7#iXcJ+\ZZ*dNU;k:WVE(7A>`em@Nl1JWa*G\,..3_@f"qKU"4Bs^Sr3EK?pgB99e:Da8a8P+D%!i:%PE46LM)-Nl@mo'8*d;Ss5Mn:^X0C2,9'N)#1(gm&+IJk3Z>f88HL;CIb.D$6_.:''.a+)G='Rq\Am`b9j*Q98(:m/)9GCc''ga[0%qMh/Mg8X/IG*$kIA`]:PlT/]7C(Y:^o6GNSRfW30/h=>K3W-!8G=lP[:lu6c+n*]e5`/'68:#>l!qiBH'HR?;YI"l>>\(H1Sp1%J%etZq^aM<5_;huF$&Q#@3]WO;>CWE8<GYul@^4*5B=r@W^%\($?mNg4i`P&l(JXMj.-\^pS\7'!/*#0=3Knge7)Q_STj`*.u>iot+%7!jMjGm)7m29RCt+7DmWGTG8l#21Ab>tjr^%Qn[!69SAH.[t@P\(V1H]CL$sRss59&/=ZY;2\?N$W+"E41>A?op2PJA3l],DH9Yp%qEQeg[&H6>qKpBIWU$i0'E[[*Uu7JI!p"NITTt"\Ag\7&"YY2FPD__"#^=lfQV:"GFH:3eE=nV>0adckTZr2E71H!-+?*YhRbGeI%3M9ge!*<A_:rW3T>n@uOdWo1\Xt'[V)=X:3T\TrDnpTsMXi^Y*D1hrq(,nQ$hPi8YL=/\!B2W>%iXJC>RbTJcQA_qp6tuHI`%@cE%C\?YJps^+ee`5'*;=:lh6dbTjFXsmIaI1`6#Ue=j]&a(N"sj>AHa;.3"4]76E>UI@@tX5HS<0:+0"W0lU(]VbL"21@NF&Gc^sOdI%nXo-ghT;G#LQo(j#mAG8K(A)/*XO>i;$g>aI!A@0*i<U$0j*]J9B=+g0ZBi:l/cq+%]`\NL[nHI^<n?JM#MgmQcp?OdG.I:d?<2.%$kiW&V=,gaj;kB48t;0shocL@Yn]F;ihX1JHHJBWLXS=X;mC8Z?_6GN5t30WM7Q/&,B#B+;,^3NfB;<XnmuikTua0+$'?>nhOQk*%rVQMnO8m4^d.Trf!i6B2SLR"8V67Y.fu\#^0V=\Fal"ie4&Y.Rlu\N1>4_?*VfZd%o9ji#\n9$JI->NnHKpI3pHLKb7qW^!G_aTk%Jier2$B!pfj$0,JAA]kV.jHa`aad5*0a78e(:L\W/D/Y:nio#NkWb,NYRQ5,Cdnfhf-Mqr0*@V,T6CFc/C>Ek_`(<W^k9H0^uN5=%<MRE/B1LoahlNqi8J=GaZMiIBjL*in8_,P?$#3,fZ<[@r:2hETHSGf`19PpErX&V=VX4ss!+>Gn>!fsn]Z"pI4ZJrp^iE_MCSPcR%cabf4J#^9`=kS&2N9ghOT[a[!i_4\?LM(n*QZ$*P`a:B1G2L>U]&SPH(\j5r@*JSf@O6%0Ze9rS'(jrRnAi:5$'$mHU9]EMA4$^"%RHr84a_u*hkLJhFFqnqY5I25Z64-iOrSNr(PIR(5dJTOZg,!MTfM"Yr(gA#_k!j/9YuCDG1S2Oe`0a-,\Y(B-?1(&krp_hkSf5GZ%YQ6n4p*c)2"q[G.,KPjmX)]V!$I%LgbO[HM(,9KPRN.2H3s5uRoQIZuqsW^Y-gjOJrsL6cEiY!>aBDu:a?ksl-"FI2Gs&O5'N-_:%[oZ([QKmXLXCXmUagoQ@+>'M;490e_,:M#`!jS1-+NS(BIm2`;YC?F1<!t0dbm:\3"$5TP<Ea+cSPPfCElFIBkN0*!XmYW"c4shJ%+5I+<k1L:C&moI+FsiVSN6;GXR"?m'2=A@/\nh`;h<24DIqN][Cmh6<eCSU4qmof>XuQ7[[G'/c9cK.sO'_Wp^aBrFe5n_RD^ARX%9)BLL-_]=U6`:4\Zl`sCMT'i\Y[31(AO^jboi53L5"db@'UXtS:(qbcF,O;*;=ks6q9M5<*Z<kfdqgds0Nj-S'c=Ko(@7OV!M@d(%o1W;\A?:`00/I3B*"!B3I6Pq0;$)Dk$ram._H+?I&&PsoZbjb\p:-&cJ`5iZ&8L$4!c,B*QVt`YA*7<^ledcpq/?O66C[[,ED03U%)6PQ%U36,!EghoE;NH*#`\5-*R\L+[6UK3K^#]:/KS0;PSd/3'c9?u>.\2%;#5nr8QE_EQ,t(1dV/jQ=%f>[dqj/1205kF7AkY<k%m\Ls2,soZeR3d1`W""e=8\`KJ/`Z66JL;8#=f44,CK9E3iUYZIZT$I!+HR9F8#l:l3Z9\Mm3cigphprb>!#k>):PZon`"%=6\Q_$%VnhYm=DKH]#md`8(nmE78&-d\bOAn\Yu<Gm=H'V;Hd2(aK5Z!,\d.Y1c63ju>!tBn2ClELr4)K:k0V(>EYd^nV&nNAjuo"9Lo]2t%ap9oq#f8EaR#N5WR>m&#"RXScU&#M]gj2386<J>J]@X:mZoH[Zm'=7KVNNQZM:=k^Z0J-TSK5*DbfAB6^&1H[GEuA0=Lllf%&9-+%]lKVuk::(m/:E$Zk3as8*+0/(XufKfCL=N]K!1*GUP.!5ZOTVlQIS5iP4L4V8p5L]cI06+]M6#+-&?_0.0'6[B<a5i3eotP(+\iW%*p4B6*V!sVSEc39A\rR\jkVk@!<&0!bg]=1<=:3a\esIbT?!A;EV>nUeja_[AZ[4D*3G24TIRu[XFCH"oneUB+]I7==HWFAf)F3!%!&+*:lTjis)d>E41a4Hhdtgtg<D`7B9eYQUNR6#%g109\K^Vo`[20b]N)'K>kOWu>F*3cAH\IdJ,N=60eV0!?b?2o,KR5af32X=D%&nWNnEIZ&#:sX4DMH[@#_=+<#%<#]c+O8fW/ZE)dAROoUrNR^.DJ1O@CAW(Y7n>ZEFVs0DLUWet079/#8tsjb4;?$"LX\N*I`-9Z%2G52oms]D>kC;`p2.BJG19LHpX3NJIn)YU7iu>WgmI3"cA>L';nS#1Ig$L7E';pbZf2Z)YPlO3?VoNsUos%g_bK6*YR#V[t5Xfc8%8+_uC+en]')PP$5SQ$gH/IdKrfUi`(!G2R@r+3$cXa<`t^t#h`%r,+[*r=oL4'3=:6HBCM=JEFP:^keh`aB$\D</bBr[W1%GSuo8%g[0H6YTgZBKkJLU$(Lt@ds`f04:sV(-iHTCNA*\AMF?L&^Fb.GYFraXMQZb8#[.RhFdKa2D1=aA`mQL_AW=gPkkoV`V'+>A,%rlr%d0m%iZOMXUAa8CVV`*2;b50CKDAQM;7mmH(%B,2N92jW]D6]P.FG[eKN=aVDij%CmKlNlk9>+F9aLDl=a_()qXONm(^Y/hSYICqX%rcm"J`.Ou^#WfC[W5#t+,`jT2U#XUr#bl$.?<1F%_cSP--<5GH</c>Y1VWkZ]3d,&N\<8ooE5eq,9b$&N+0;8^eAD_$.dYUds^_D%7I&nJJ*4^E"iU5`RH(M^8rRp;[g\mZ+6eR4M^K$C`!C]`C<1"5cP`;Kqe<^\c\=qXE;`=WhOulP%/Ri:qOm))V65BSlc\pJYbKSK%9h,c.KYRi<MYA,.G%:!I,mAs:<D0j=+<UYLI^b,J7I(_Z7W72dSS6h%=/9fCS:24'#(`))!pChKD1RgnOSrHGle>17OSEtS+WI:g%\gI"br2NXs/jM==S9dAd*`jR72Fk&[D6@UiViT,6Mna#B;TD]1s%Q]a=t,0PB<..(nc;(e\U$O9OEh6A<15CMQhQVq"'m`H-`urD%cO08'^;A')RauF_<=5Doed+6!06r&NT%-rpog_'YlRE_2'[!.$p[R!5U#+W<kA4P5J<Taekof.oQ_V"JN-*edI_fpg$Yc[m=UShF%6J:)tSBKh`[<,*e'd`QWU;e6h?cpW3NsR%/[?jo))oTVd6*n6:;D=a3C<U_W,1[$5c7R7&.lK0qZpe07VUN^gcSdKCT:NjWB\#]&%lf&lYmD@[I,^_pjBhC[iW1ZA\;g%]$lRr8<])3=^Sm3Q!W6?6CLTQ8>;]Nu:DCp&;lRJPGh$%Nu(Zc?+s*;MG`JV/N%S/cWj!3aM%!R9.DFaDhK]Y:EbO'aGTFW5W^!Gn]g+p\a=]\XTe8hR6dWHb]9VP?)DNQ-F[e(->$C&4B])Fg:hMp5f$TkBh2[,U]O3B!k12g]q(%^M2HlTEND7cI4It)W2E+79Vh0mTZW^,Bl&)H;u\CO8*%NE95utH,\(3'P_J)U'b\T(2C"m%)Q&>Me(-t:`gDUB0hS+m2+A7JTu2L%2I^_m1lq$mM_O55I4X.s]W+ou&P$N;_He\cCb8m$d1nO.F70h%9+0B9M]$#+"`[@kYGp%^Y>o^]i2nn_ZV$g;Rm6bfK/<`p.!;/2%S0fRqVh>T2#rN]e&E"\K*cleNgpEpEDD4\eVDpPN]e8?\IG^)I$@S`!:]EGBr&LXWB6[A+3A'3HH2otOc!5o-]4m4";,(ef!<M3Y%(q%(oUK,R+a6ac"\<Og2KKa&\J%VZ1EQgklY7BV&QSV0J7lN^QiC%!^Z5I/%:\XcOJjK?XlFu*TSV6alT*P#]QmQmM8%D^QH\(Rm%4JX83X#K+kf>Cc+6dm`a&in5)ANc3%q>$4d928\;`"0sIPTn.3b78[GO"NGkCs-^f?FR)(<@ZL.43@O]1"/kp5u(ui94jY@"uYX4%&Bc(Zl#hBJc-B>*AFBH_m;if9MaYS%3>q..r84s>D,lp7gCegaq%!".5q1;-cB3BT:.l-*oYSJVPJqLG'c_SDg0;P*pM5O*&NS9t%+9!/<bKS&K3:oT(X^PatUMriu+0-9@j'oM;2[Uah*As(qmd'OTFu\Ps7<BtV3TA[bJqTd]hk&`i,]u1=IR[F[W6UC2ma+d%3Tp(B%V^b`cIUkd'k;m':LNQ9;_!C`,3'02&p:[W>`ooYa*kOiIL%"3rT#J@0_EA(AQ'cUN5$^S_-AeXE'dXDAe@dJk^(DXgW]>D<pa`@$%)4b/(g$<WT^F8B,Et2NVGQSd^Y4.\,WZ8\tTYd6$F4jK2;2JlcD2!5tVS!I9P::aHA/gP]SFXP.pLbKQ\hI9CN('d\f[!<5O"?F;%f_\>EIZ[0G31K+eIRV#*gHM\]fY7*Yk8=A#QOt%f8urZCY5gNCA^p;Q0"]e0!%@T"[]V3WXI_<OL`K+M.RK&fbhE>1S%#KF$E<mL%nFe2$H6D2<Fma!lPNqCg$.&sY:AVsU^jQ`M%$2fp*\H4lgcs(XjmEb\L)Km$Cc57D&t37'p^U:]N4nRl7;9/!PCZ8^+tEgg)C[_a%;&W>t7<O++)IV.r_AKC')Pt-)7E$#Fqh7?QirS/_Z`1#p>1"b=9jLkDSnk^0/f+eWEp!u#X6Nn<OP?k0cI0=0AN958H!FCK:W'&a%804FA;.u_]JQOhC,*q(sOe4G$4lkgaW4eT'+"]miDr\G:R\lE]\:AEEAk*7)'A,X"Y@U4*_.GeVnF1tc([@;$T'Xq3$>fp?Kh559%P/n);-dbuMr%>Pm^K_?O/"Y>(fIg$jI]EQNII,B)jJuj%1l3uA-_?UfVP/ldQJ.^5PH2tfVS=fWIL\luTZa%L"NO$5=i56SG5q>N%9dH6T08=)c7Mqn:iiX&pql6HrflHh3Z]#kU`eZ\Y&<#3O&u,Wo-I:$`%_t#UDB:/XnJYeK\EUe)3N;H^(H/c?"E'.GJ$VjsWW3I:%V<U,WpL4H@m.BlT_f#m%"Ng3aPSqd60U#iSMo#qnGo+/o>jU7@Os&c#pMeVM43mD&@BA=="!Fj7%2s25B4;^Y5nS&u"DdC*pRmLF%ii"'s'7-;k?WXo[]kGtgmL\.D@$jT]oLr_J^W]+n.8nYEY,VN6j3$(%(9[3e`G$<X?n*2Kqe75?PDi?D%uK`qV(@RZ<8k\9,H3>D%WN_LX%(d^t0Q<$bg#E!%0$J=7?pthofOn=*G8uMH0!Q)qj3&YV)TB2J'^P;H:K&?iA3/=#qTU,s*@#H39Ho':0ir4n9!KRDLFC4g%`b#9eQ2qS>'-s.0D./7-)aQuk.\V[o6<L^`A<%O9,AWCa$cm7AZl$q,B,/u!Ou5d/P%`gk7fmhZ][S.6&$RhK,I,J?b[%p8NC.tH%V5b*d"2'Q</+.ol"h[s4`QM+cN3?-,*P$jB$pl_p-IP9l^tn$rg6JhqM1OMcJ:\_7B&(3ZL6N7kW0.d`i$/Wd04qT,>"6hh?](+"%g](PL+PFdH;CTh`E,#44X;N>.Zkm//fqn,;aP+_5dIuiJe7^nQ[*IW%UV"PQa>Og>hr0CL:.6=1@2sf-^RH9fhc_bqd7Oc!0&!$+%()i?XF:qrS/>J6s/<d+2kT]b/6DNARn)@)dBX'@\E.2jnpYk5<RtTl'md:0Ge>cIB_;d'KZcpHOmQ.pKYbUlgf2Ydp?cQ-A0B4+u%OlOGN\hQeBD8o,0GogT@BrUNHgZB'R%Co@Dl+tHQckQpsn9ZYXO-j1T@L6H?'dmlO3Z+8eD_Bu1_(Cg[Zk7MZ1QS%V&3RIFH>5V1%l`.JiI,1Wo;OZ@9s!WcbCO/L^?M-cdO)rh\\tDGC=A_[g99AJ&b2>7#=]A;!9TI+Z=4eY/.W26.*\\5k4@dOlA@sK#8W58u]U9`M%Q.MGLNg(D_/+,ZqNr?fA9>MUR[QR!PaSh>!j_a[2:8s32.$Tf6gdfBPP*fLa&adc'[O!fN/RqlG]<8)YY9l!&;)-!]mLp+kj4:"[%+2_!JL9f(b>8WNW(sRWUk.2,d2Nm%^A5_R#R0DVlqY!1?<0KVD)AVbGHPgf0FnCZ_ahdn8OI$T+alLsQ^h-;b$3="3E['ca7ke4(%*Sf'N6(+?T`PTA@3l^P@YTf33:^kimm3gjt*))NS+o-,!Mn,0J#]'0=EEa#SM%PVV__%D(ZHg15M,]$R,V0/;dnA)1(9@hk,)s6P%cS)Gm4KEi?D-mPq:[R_3$,\ur,iQ74MZ1SiJ5oi"%Z&%88M1Bne;%iAVW>h*=%-MU2LpWBMdi<9dBJ<2*43LE-,m[M,$"=kT_,;$%&/uaG3[),_a'`\cXSD1GC!r-?SbJ#'4Go9>F4+;\g<<"lSgn1pFSIO3L,N'$J\sG:rP0Gti9rE?]#'m#-heb=h3QHbf-4X[6H#ps%9tG/5lbM,'\3',m6k'uP6]6+k$3gpH:n&'K+d*2W<;_U\o$D6i%S)gZWL-qd0B<Zms%*s#=[e6_!roE,,.*.9HTuCt5,jLFl*JBJ%kpk2a+'F,lMfk,G/HXX&0-E-s%:Og,F"u]L9@8:],%oRfc1nD<72A>0/6f8BFF)Xf.,7b`oA(mW(f<e,?3j2W<&]c/K"i?l/Ni=D%3l[jGEu-RU'PdME-[P;p,ep!s\&QgQP7T\<As[=]Xhq)?Xq^.*7b/BoT0:5mVSo\S$:Rj5Yco!ear@7*4I<i83!`kbWbsFYUhN=]%_p2")EP#mVAm&0$QU!K@-jLhE@$&aoHo#"a]p_qFKOjc:0q00<HC="QhJ\`c77l>pn$Y,aQ!X+X(>+L5)NVDYXe/:XICP6S,.E.;%gN84_5hugJ-Hq7i_B1Y+os_YZMJDZ$K\TWs)`J7Z:V6#Z?)E)f3&X3Vmd&sKJ]o_sjrl1W(ms[Z5^AAD";tiV;4'%rhp]-Kc#pod%V!B[\^Qc-m3OtpCLNaWkOY#Rqc+oBE/YWc(oolYgS0dRIZPn#IpSY,q#7`+;i*UaQhQq!g)0RrQJNk"*1_9+V$0jtdJu[:X$?6u9%o+L7jSSs1RBN/mu^Z,(Kk(>r#4Oq'18i#4b-J=6t3R*<pj0bp[?lb=2*>1H1T>goNEWh+kVHlXE8WhA1%-FoSKnGaPBO++1Q>(O5%[mM]=eXfnZihdWQk_"`/;c,<2W*"YK\s&Nt;_e<nOb8s'h$=rOM9ii=*fZBS3iTL\LF+PGPjb`Mpa#NglouQDP4L*ul97JT4uOBl%,t/m5C[70^;WI]j^8uZ88R2o>jDX<"LjohKJAnrF\ZDr<B;DDL4:bs+J(0cJ)_J;R;@Y6lC-o5MeI0[kbi7,63VDZ(o1o6m&=VCO%:N/FGj(f"Q=1=%0SH.d2nOXJ-.7(&BUF3SKhEdOO68e?A+'"YJ8tFpCo41G:)C]g86jJT,\6ae*YqRrY*l0O*bm6,%92M?6gilf%%NS[A!7'kFC(j7?uC+20bS`f)?TR^kh:S$&dnMio1&iUqY6&[nq-=R%.NQdMISpj$XK4]2PdRlP!8'^#>b:>>p\<Xh1KCH>bPgb4$%m>4(\K0/Q#KYpd%\-]7u]tL%l_gopbJ#";tO*K@m0j?*2bWsW2)m@>W"+$!A,mL,'O3CpGN+3@D`J*KreXM4?C,_S58ZLgsR?5Wn%/B@=mRJ=Z.cFSS4ECW:pQJCurFO$j)Y*T2\)iD@Vk@/7i#Z-Ho:LTF!3#n<5GWdFOc:O4>*@D<>Ir[4AITbjpQmFF$`8IeGi>sM2%.?OfF*TO,$Op&8ic:L)aQf#5GMG+)-gID]gC^*0QS-MIphe+=iFW.pT9;Ku/l$@:V1AXI((W<K!m8t;d0i4u*npDBe2iY[_9+$"H%_GJ+q,o8+_NAK>CMX.DoNWb)Q=J?>l]f%HG3V?HENbefo?:db7g^1K[i%[c\1)r\rQ.Pm>NU(i-=qa6_QL<)ZkZ6,$X[J[G'Zr)b%8dHi(nQ?E,b_q4>5[_%AnT6(sEOmnr1Rik_hn:TQBF;Ua'>5AIGU"_r:,5;Z=MR4_c4i<IM"Zqu_`7ceP/JAoM5I#qWp1c\5^N$A%fo_OB5r*l+4%bZ%-D<4U=g]7F)\tITq[5H-gRJs`,El]iaqRDGoaOkUEZ+Wl]8hd8A2-OmbO1T*=Y3K][s'@08a:tuj!>31->Za=%^!8)/5:dX,`G;KMI&hk&P(FO+Eq3f-EFEO'k>0d^=<V\gE%Hq7o)3m)Nlu>cZS=0FUBoMf88b^]Cqf/hJV^JQe$H\%e!<MH/Q:`Q%E^-m^O%t4'a6i/;q\EOb>e:_d<&/)gm"^-c6B\9Yj5_PDjhBAgJu0BG].J-%Hn3'BALpX>4@\OaaH)IIQLCtANUVE^a5bA)QQ5R=%Cg+W)ecu^$(r4r-9$[(PXS\6^5Ol(P%L<4*#X#lFjg\WPQgoO[K<0Q>!J71ugeV51C/t37dDG`[=)I7)&ps4]#skkf4C"rA!pM5C%Wn6:lM4062ASAg^qc6Tr6EV$kb/KK@p&VRkD*/:.juHs59mn>O)!%BO/>Ue]Bn;?hfS^g`ZVfYFY4+7l,i^YBb>a3j\G>';3l@ct%$'?\R87`pB()Mhqm0MV8H#iG4\;7XZFXbi',+_7i`_hGB\h8[SEAp]/jiEsq:8!G-/&*:aQFrC42k?uCe'nX"I4O<<4q,PH.8UP6%!HP6c4"17C/Xm[CQsfD5=i&<\5s8k#(L`D!e\@[k]-`)7#DBH]K.tEkATF4s^tM;BMm&41e?WG.52+S1KH;7'WAQjN,]J%61-.eR%We</T*$:>5;kXfV<ImVOPknZ)#TYU37P';J$uSA1`mDoEqKfoIWd<U.>_8"Mb@O^_BJskYf9FMiS88@m,&(R2See21&mX%q4$*#'%-G77'G/ro_K'sNm\P@=aGBaTRX"4h%Ls9K\XH&Si$N-/Z_7f1o:FSR2h>MU:/P]%^+F9:E4oFH6<"d2/_P(qHSCD"Ybg1_Bog9BN%`Sl$mP#Ff*6ZIt!iV(4O>OX#F$s<K"7uS&9khoYFV(%L#O9QpEgs\6pJ@;14F"mp<!q]C?5k9YR++J+EHhU+@3%!Zf6/=oB2'HZg%/r\_>]\t3mP/d:gSEAOL%=lDr.h1]PeQ2rlN#[rLK;[8p`m'30cT]@/-.L)k\f5F'SK=$n-u3b/Qa85!gY4os0"L8c;l1gUHX`cj%>6>\glX@X-.*"p40irD>>C!YV>XcNrbF4>?`+W.h9G^G0N`i:S1t@^GV4H^a)bbK=N'fie][IaW!Ir)hTK)AI8:$A'%M^Gc;X@Ln%18#28akCE_L8m=Q[#Al)?A607-8%[;TU3ig*$QRJ7b21$/";5NmVunOG%+(lUQH@iZnn$)5SV/<nT>(i&9B'F!R?RQ#)^@XN,ZS*%W-I"Wi(X(r'lPb06h#^TSD5#g5"nim;pnbW/2Y=R-<4emo2d_\=sTW)YLirH1?gc4BUDC[V5Zm2il4a_4A&b<"%IgfE\$)'P]"LS%5JE$$25Qf4X)YbYMt2ST:b.[\Jg1k_?Rfe^/#(a?6IrnLCDKEPBhn*^JF"ag35>]"$0/aRPi,MP\5mcf(%io+[7#6ZJ?nMK(+ob1%6!R@*o-)<%^i-LQ$u4NLm;#g8o&@"'MDR^0'Tg1ZhCq%nqu6MVl!X8j$0JW0Q+nI?,;<<qkU09'@=P#$8[isn38?$:=32fp+QolK%1c@Cm;=BoS&JftJPIce-)MWrCVLMZooTI6]`=O%dGiY.Ymik95js4T[VC"Fa*YB6gc#7W"ZO8A'.A-c.QT!@d[d&4sRO6,lL7SXt%d^0:A'/NRH*!hQ?:tcPK9i4qig'=mC#5!=Y:A\Et3AuVW@;@E\on"5A>-O^->=**fS'XJ6VK7Rr7XZ.?7,JG:OC<r6O(H.biS!q'%I.?Uf2Q0NZ:0pD?5bMHWTH(I6C8MfZ4r>^GMIdO8&b?T]<3kR'242MuF+/7]iF7$]juaQ:ZKB>,jK3IOb$_ItG5g6P?&:hQkfKbB%4q0/Hj4na5$sRK11i[.na:65pbsH,a-E7Gm,dGH'7$tP+=FT``.\7lCfTICq>U_pN2^UKM_30P`-0Msp]$Wg(J?(mA!dsd&2m;<<%NQBN:6/YQNHGDKPgAkPgTC0m\#KLOg\n0C3ii+hnOQt>k.";[h&$c*F0TgH4-.-Z#:AJqbkSfYJX(;f5gl(CgE9`\s"+$K_H71`a%bRVPqr2E"H""\a$@SsjE5\Mio']=u@FeDArF:muk\F"[Ph=C_jV87+JMD*YJ,f"8QDF<QW&SSRko-cBH^4*&@_j#7`o1npaVQoUb%NDRi3-NUEf((69/ZAPek:"QG=gJh?E966=%JS&dJF,K>b_:laJ?*9`%@gO2=9,f18KA]h4c=76AI>ee+#5`C2>*eGBTY2O"duTdR%Tkq*Ap^?SR*k28h0iKJ%3a1=*E[9CX/rQ@a:hZ`MMegVSQ>c%t&F>H9.Oq-GD^pq]-u8o%oG]EK5Et+te]9ACs.G&L*P<%3LV"P3%"0]kjqA;EK_>cR-ZhJFWOQpK%AY?Jk>R9Ln"VO[6h0o#ujMnJXOLiZd/mW^`@t^,*RVb)k<hbcq8g0:9<!WlF:$(/>b;<(sWp+%0%=F@+p=3!5:^4OL`9&SMpFco_hZc-;1\B]V9g9_-+*\G9[qUa>_m6CTM"H_MDJV#eX/sW&nX_f0hHWTE]"UA[?$ouXkh,.R;@.c5%%aue#,s7s/hVL$I=%r=;.^Bk!`[!cpshdL^[:gHtYm4gn/1"i(RP@tG:5'#'S@7AI]h*qgI>ULE-VdpTmV8I=5HPElSLLi!,l"m;*%Z5ebhdHNpN#+hq."+-:Ac^#If-n2&;Ji3>pgS=7o,F)2Pr.Hq$UMK>6GeHR&U+q=MS.Qo0;m]B4<3mMGV+GUH6Q"NHc#C^ZNf56b%&(^sJs%!Nqm'b(*hG9?!($BShM;R$$<L-u[Vh=r8)HE<*$s=f/T!!-_iFJdPZ2@NoD^IJ]U_(05IU$\u<)u4;pLn&2"5en?#fnl/%joHkC#tg5baCf$cLSA+F6sO+gjnVLMO8AbP/;6\h"AJN2mhR*XXBTKQ<F;+*nS6<p;KEht)FL:!#E![1--gL0A.0W9rO`jlU)8:O%YILe+]&DoSj-tMk1Cu*X'#M'OB%s.1D@>p5W02lCS]8bAqfd-2>:>u3!:^M%m%uZ%k2)/W)L6g9Y=-p^&(NAE^'H;a&90&58Nj4<%l?^&"#&MI.e0"BXYkPrb5l>FX_!.tbPQiThlEWKK`D[M3lU&6*V.TTm$#]am7NR#D*3PSN[_^",,8;V_Q\E!<H19Xk5$N_@7hlh+%jVhSn*Ed/WHFUt*;#`PC6'5^U_-SLf!_f11(KZ't,E+dM+@JloJ[tVrmA?qA?(W62ma8*e>7Wfu3ni5g7ghKYG:,7:Q]"rK_UB4D%3Yrd]j3/^i'immJO1D-^,J1]?"RFbZS#At:+c5W:5;%0]=Q"\3EZ?j2CMU79@?rs2;B)E9,1jtd8"WM")W'L+!*(\EI,\sh4mnAf%h]d&,_s:ORUhl"%Zrt5r-<(5+]hl&E0&$u':D6B8<W+f]KHbOMf*'lof>H5CVunOge1I<Jg'S^?\^W0R*!T1HejTno3h@i%9V"nq%T[YERiUI'hVZ6J!0JBr=cdWY?`E^Z%]%D`[T?@Opi]"""_n;oK0rS\N`19lu)(!q=kIo033.Q!X'Q7,XSYM"3KUWh<k+P6<0S2sU%9Y,<hd;fIKPE;d<j)b>mbQS_5>uIV7o9QH,!(&Qk2st:m,LP&DJS'@9.t^Ff^"^B8f+(fG[XLG9,;CH7Yr6$io(e]une48-?el<-%7fBds]B_qA,'Agnl"j0^pN`&&EfRc)Kj`(T*bH_+]'Fcq0!6f;M-'p:dOKKYWoV13,SeG$pu_NqH=[f-:Ic1IRl3=?J?%jWOT\`l%W&^]807?e2W!h'X`^Jb4AOmkO'M?+]V.Fn.Z"$f"I<0*LLP\ZJNO9-sP0No)KtP;c/?P=t8@$7=;9&?NPa!>!8?S7_:V.X=!)DX!%XVrA9>eS\V6AlB+btrhJ0+;,Wfl\nL6VHYN\#tJKbNT_>8p[S]lgKOUV6NVl4B!=mRlTMgXqE]%W!UN33]\PbQjmS<([-+Y*i;d>%#F#6\@IQV$1BNH)IO?s'$0"I2O_RM]Ou1/Z8E+d0-'0Us`ig)80ClsL)ja.aYV-A_VX7j\pLNE-%%F=lms[apFgm0[IIh5"iVP5!%eq,$$&^u\P&N*@j"2pP-jZ;f',t7^`$0Cf:!)pOm(1eWt)HW%'_:+2RUdq`N;L%oca08F#CiGWq2JTPW,pPEDS]CM^eL[&;($oE.%Crm5g?"04NmaPcUB/=,4Su;*o)qN>K)ocfpG):>FU1Cmsj^!et.4J/i^tN^,n5%TPG527pimcB!jQnsTHc2D)M^$1:MPpLj@<P2'%@I!OI+YGuh_Dp1\A1fpF>)4WW2B$7OSE[)SIkna]fAsc&16=s8[isbRUVmmS;]/sW_D9pJdc.4&KFc9;m^4)U&)a*%Q>/qS'cQ0(%j'grJo2S9h*CX`^<<Z'9Pl]f$5'S12EV?QS=uS[)3jg0>Mb7-0nY.>$:I'T:6ek@S71Ncc`<3DkKY6>6<'EFP1Au6o%@odX8bumY%H6:W$\83ElLabSp,IqnVG4V;c:YZF(i_<NJPTrtZW<n\V6V[D.!fs&)95(&"p.C+JC"Z.D$?^.5O=;V2]Uni[j=ZC0,O.UQf.`mb%WUm^P@8_e!IREbGR>\++SA:ra)HtiGY&tf"mdW9I4!4@1cgokkDlL%HNEX.0E*)N^Bns_!^#abdS"99t]lt*ST#iUKk4/=o)MoZF%n!^fES4^/=fga+R=8d240Yg;[K3"T00hfHB[6u3>m(1TH8%,A`<+WS0E`g"+A7Q-6f0p9C%@8\^GMh3b;a5sA.+9b/0,1h6h3b(=%=*T[9e&@&/(8ir_K3o?l!:WNt<;jN>/6'B55#4""/gsn5n]b;tG;<c0ki.ruK!ApCdbj'_3RWQ@,J'<c$,_L&6dF);.HL03i#5L4%):Q&fGm>$H$n8G<XGcD"kX0eC$pRo4TfLO^'O.^-.F0S\$P1k"0jCk8>G+XG4F7G_gFh0.(d#c\Pi?t21X:DL74F9B&/3T\3*u)1%3=CW,G>P##?B]O"UPs9Zki-$6eE1m9A)rh/?>SSZ5\Wm^'"T*-T>k$m0TuSG73&Ul,MkbO(6^=1U+8(kfnM`n.4Z9\7gh,h+b,95%T!)O9i<b0$8>ZZ'1Aj-'G#d&_8O7`0Xac+sJaWiWjeN>OT$6:GPl6%B;Fa(FManj`#9N,5"]\$JZ>Q#NTpT=PZ?7INMKrN(I6qQ=%!C/r-9;D9__'T1S.Fq""Kd#fD"pn*],+sXn=2GMOF5_2)Ir<ebAg,9J,s`4V1.B,'(>GF6[M3_mQE9-PIT/;/POp]YdSt:2$dumY%h7IBuVatkf+l5hW+?LKTSOXh9PC?f*S^J_nfi>2.?8Dl/qiI1nO6#i<gO@?])BYWqeXf]6gqC54/t7_^@@4qZO#rO"P]9b^EM64'%a`6hYC5$>&/LnCcJopMsdO5i!6'$)d#UH22PZ(#][(M)B]gL)^/t4ibRj@eAZ3N!6=+#lS>N:2+H<D.dFX2:Bd]sL:3\qm$9(43C%IM%4L2ddo$jUa4pG,[$=G[nWd0UekqbYnj5+\$XV*UG6I\Zpe6$\sjHk@9afZttaXD#C:E3X!i5=g:6!E`F@k=hj\b'pa@PTc>TJ%Rr+e8_hKsid&t>s1S[4R+n9%gZL,57>Z:A+AK;tQi,qTTTS4q+gJiOTMf!,>?cR&hJBHo`[W_gnro$qt^Ik;AHbEc7j7!',GenHe%16,0o75%@VHR:C"BlTLm[X/EG\$iJI;D'8EU'f%0L,U:r06tu=JO58q'*OQ8/DJ+cC()XQXj%@FgP8\m9&D.<bh)$(BD*<%<L6u7%U)b$:gpu6<3q[ZqGYKCDkAe;(l.3r+l#An*37\)8J3prBU^AeNG@C!C'mB#fT6JR^f8O/"(j1S1lctd(%@nZe%b5oTHKED`>E&od%<JhTqjks6n\AYn//1jC&g19>Sg+4Pf!7*,&_u=maen?7s!F,q0+2qJY8bnL&]qGDr7D:ShE6u<FqH_f7mW(#O*A[k9icHZ>M_3,2%bVh\S33h&Ir8Od)Hf^haPrIb29%<nIT@-E&7%7ZBMD!^Sgg-Kopa39_YiF,?#q;1jbs.ZDhNf$:,G-j@$aFce<Y'D;R=bj`a51GV%RCJ#I6>9*<VHo.UM+C^=89@iPNBs6lLQP9G]<K^'7FfLmWq[JZ@0GcFXE/g%TQunGC!J_N$t$\Ihe>.H`4Q8_V3t<d*4Z(&WH/rT%_pgbL1AT?a2DH6D&"Y?E?*&UD1B$[>W=L\;pE>,0QrBAQ")=&Rd+cL5U41j^<)<;AL6J@X*%Q&MbU[ohJg1*4_]Bh3.cXD3PWe%Z%M?1C]$t7d%\Z@Cs?CsU#IVOg5j#R?A?YATK8*TQQ&:eHU0oV<Pe2:G-P.J?&2dUU3<)t",N@%+;#?AamQH4%a\'\*TpO58#a5Iq4%RoAT?]=\6/Z2H-bLa1"K)0.@Pm>a?&?basm;Y8Kcaq/n5`t!)r[%pQJoY!jm:(0!.rk3?"L!OX(Aq=#:<@qo)hk!*cbjJZjF]S*>%%b+ppF]3Mq5;%9=WsVq=86$X!gl`uqc/5AHE,p,0&%T("B[Ve!WuC'$Q=h9a.!QVWja@5*b^sjB6[/_lSr$dNb/+[MH_5>71!Qj+%EkX6k'7iK$.=OHUh]5-lf8oB,@rW_4I*%c6#LGCu6>W,;S%=Z8J>YK0[d$kYMnl:8qf*-Hq.1q`gi\u:82>V;TJJK&'T:WYBR;nI%9XL5(L&3+_<6),W(WkS#H''@SLKg$)$;7^70;Nqg*#!CjlW@KgV\Q!rBeshj(r2&CIIKt#AVeVF0^h^'D([#!`T9;fnL=-*9d-;t%f;k*%oF/"9**W],TNX<9O="J.C3P&.0SNN;[-raT.)SWgnS4kMe:p7*me*q7PiXks87kuJ%)oMBJ5(o,1t</S4M&R]*X\^pB8l1l%+ogOoH2`\;0!FGd3T%%4A8kCo.m9<<"mO0)hMM>V,J.k#8KE4e$8]=65*:qK"q)h27>1BGDEF%I]<a1)?]g-VU]_OV`g/cES$-7P%g62?m<+AciN>idrd'E$sDTMLdBr(4*$kU^H9LH4DkDEu2OgKT5U#)Q=I1p$Gmuh\]2</g:iC2F55\O(-">(hP4[0dXS!QU/r7(3Z%L<]D'%FH^jT,(RC]atAIDL\f4i$sVjP6S7KPpmRu]Lj1t"43:%9CdcON^[PT(/Ih;kZBt%>(d[DQ*dU=]]\mAXB"gT*sDdIoq)<8%$P:+5CoF;*Y)Pr]s3H]GgJc<+$ICidTc=U)TmeL7e:m)S-7%&X6:1S%(3fnV+NT5hICkDu@8tp'&;_Q(L'66iH->W+(Q7&hL*89I%$uXHlCf8&/*+g+rHom]pX:V#>2@]oL7/%!*6.V.;oD[)r(3Yn83k30c!mS4bd:J]KKPkT?1`_(!hZ0=hhc3O)rfI,D/Qj\h.u&!L%n?Q>`6lI[6)jW?e4b]3=8\&GmR\jKOS8Go4@GGBn^DY)E$<WtC]Qi,2F>GGa<+r]_<3Vt&]LiU$n23020kP*T@*"j0j-j.Ob7O:O%,O6AGR"u<K0*8S^l?'C0<9QFQ`t@YNCCU>.`"-.IEt.W![eDY'.Y0n7pj#2gTGgn=.&90gm_:6W\@MJ@'Z>l\1")U86W-chQt:SW%BT<,b<7b]X'XrppmP<i!Ac1nDgAZ&$Wh,)bjDYsR$k\jAe:[sh"PP#f!NHM)>h=e?AVca!E(PP2GG:>ikAf+`k$rjK9E6Rdk['3t%!6lmn-&G.)<a5n2;j_c_f=n)DQ^YY+]VVZThpp9el1Gj:C2>uk(]A.[Y)f5):";@EfQ%j:O4.\O%*d;m?tf&!D,*H/e`joE13I+]%au%Xn*[_\Y.W'\gIU4F.V'?JCrSKEW2?L#?l>92^&@gMZVtE0RjSb?Jh;/&mGg[#eAAUd`5^]_!?VPE<67c1oFPt[IAm;urS>bA>%S!d`CSGY4nf:q)+O'((-8k$L-M*OI/FW>jOcht#(n?e=9gc]p+=JO-%@q#DLQg?eKOJ?uP"^'Yu;jAX#8%IMTN<ks/g!,Y"RqoVY%glOpt5`-J5'W8'a$N)eLUpF85S4ljTZ)kO'8t:?/_2_W)8Hq;&R03tUdiL!*+`m^NKujQc+\Mdk<oUri@!iJ:/'B`N63@LfU9k-;%<8tE*h+7Z*W'W"WSlm,C&T9cbdn\o6g3lj"4:fLIBblb8J468_*-OP'O@+`>9,&L([RG,8\c=(W3O[p66fJUg2N4_ZLfi"0b8A:V%S8f9A[:i/H'#0'IA)&OXkJ4C#$T$oXd$)iLWA[eVTKgBi@d>CE-#&<U4cTA\\1EPUk;.lXD.(R1rl9GeKcOhZ.[uhITgkZe;7K<:%/[r.TnT(/HQ.7*!+`eZ<P2)Qd7df2(ZX[q3K&FFfo<)S7!>LC6Ae]]F3"(KoW%Y#0TNVd=bglQ;RX$=oh4ds#T!qiW^WJS?ScM7k%#<e%djgZ$]cn*OBiDl)0M?3fY;p6j2Z-(NpO"e0]%'D+i((U5k8C0,pk6f#`_-[YBg+5'*J,:5&AumbBl%#>ig/Oo$1FKdQ:$WaR%/t>B07Y/:ebCH0o(aC;QMW>aOiG>+1*!$3p<][4CJjOh!puBFS;0<b%J@WL\>6haG\GR'h4g*fO"<mp0=`K>7^T:sqB`2?niEfc.%lV%PK9lbWJe]>esD>P;?N]i`HU31al+DotIJ0TEaSKES6)+-6tU1-HeVGk/Pq0VM7_7fMeS)Y2\0]GjlhJH4O+*K8;MoP?J]PsCs%c>$3+WtE1Cj-7UgL8qQ*I:`c"GYm*AWCdng>$gB4<FQXoAN54u8.+c[eb#,U,a!CEQd9^oeN[D:LLlUJ-]`@_i@9T<7'^#k?]%j4%LEjum*8Q3,T>tN"bYpB1"\epShFePmej)"WhW%G?026jKoLY:mG2(le<8;)CHuI!p^I^1WMN(eN_NVL8Q5tUDZ#25dML5R;Hn"@h%MLf:o7`b;TdklMR>`[(Zs(:"@U/fc%X'?'mhs"hY*8h>\F1S5`P=,e:o\"81pce^@9K`;(TEQOsa+kdY0]&3jr7+NpVl8[!!6YI8%g3Ao?i?Rpg6'@TDNbb6nMYQ;5ni+fuh%FT/Cia3raF8J!/I'R?ZkAR&@b17O(kp!1B(&k0k9KqJpP0]>4[%V`4WOB^W2;7?ae]O>%W:[!%4^D8\"+8H-X=!4fES/<AglDRL;pKJ._cm\^F+IUrq-%WOE=[eRGQ9tFeVED7;CP(Q\knJ;gJ8rAa$M*odh[0pn+Ve#&^]1k%0(I#2G>X"LUg11upM]2WP"L=aMKkOp1@TkJY<(:)`-97q)&j*GkT941s*Hom\0Bg%I4"CmIa\J2.*CJ_]-f^@Qe?j@pX19H>RcYm%W(Vohfi#k#h@]";bi16o6A`9&*.eSV]q2-./25#i$PShARnJ?,(k:QaDVXW^H_^dJl(`$#(lC2&VnQiX^Rl9029^aFN#Q4BUKjV@%1]\e`Mm7P4&sEBO$6hh1A3cUb0?LWVADOd1CS]cW&tDh^3W!#o]WYgNC_sY8^M^&>2oo_Sc^V6Ad2Ee\G@R]kL[3ur^XsV:7IBhK%Vj&9s5#[d#1e6*VT#795-L&3T!Enqg@#H5D&a0tgM7NV9bq-[PZ]?+(WeE>'nOnPAnhH972ng?2NAbMrO7cOn!-UkhC6HS"2)UW5%Ao(inI(E0C&iS=BPl;c?X\*r\Z28j;(B%2n@-pW[q0oCXIp''Ec"i(=pl<E7esM^l+/$k52t/VTq\RkLCa2hAY>_$JJT/.FK_(Zf%_#T(-%9uLG$am6oSZ2,210FF3(.t<?pLffjkI^!-<u74An-K<QVn`0VoGjq@n,EFq!:qYTlGd%m[L"G3mH_o"Ha[.Mc\p&6+t/Ll%mt'ZHecpb>+gcXj$&ZDrabn<h]!pEZ9;qCi55Jhaf8V!f^L::-3G3<eAIDkD,Xr9H[[6WuRt25D.3B?(2qqRjON`UhpSQWP*6:k7%K-Vq!*PkGE4K[qGD-*G5_75NNBZdpQQo/B'IMO'2"([R(<jAY,cYgaZiB;BRK"0,7cKMn1/=>:Eg,Ono%d4rVO#,"((4DIN9m*SC%pX>@>]`kQBF6T02mQ^4-6gV^N(hFG8e\Eu5"qG<a\cFE-LV8ne+UY#"<eG'Q](S27Fj??hIib8tY@crB]*HZ2`b@q>o&17%Hj%hj%,0(ordk!1(P(JNrCHY1>ChHA"@d:fF"s4\_)O[J%rQK:&adj#op#J^ZctFjXQ\&<Ig!\[$Y>7@)*2+^c@1b9=A--f"4-p*.9,F^/%p?B]gOKkq1Mdc4/;6oS@K.@/mU"t_mZX,UUR"],dNBjP[em^h09DDFR!K9Z@0T,&lE6*t^2X`;l=lkg8,CRQi7QW<@PYiQ%;"kPn%a.?adeH'iM]e[/F7l34Y%SEeaJ@?XK[k_HPX=;&;X!Z%ZfFmf`0W4'_pJeT@J[?Z_Ik<p32I/*g18_N--4hhGJ=O[)F_sgNEK=0D%00tgZFPV"/6=&!51>5-mNO$o:Hm2[BRr&NjgqX0OkK_iN8@rE'F1fciD-/C$[2"b$$1<4%WCS%oPtK=sqbUkD$T:=.i#ZGr!t/.U%T%Dg\LDV%\]NMJ9Rpg0S^+ZHOdjJP/iX-;e(kr=Lm]jYT\%W.c#cV0ci$iB2;;KU3aV#9'Q9.7bb"=4DSL52pP=FB'.1MYG0,=?g%llbE=Rpp?HFZo:^>+l/>i(h_&=Q%R5</f_k_o3UPU?GQ$\VINRofPs9kn)F.4,&Q(ZR)148$pJGI3n.D/9oOIOXZtAq]J-&Lcs^[%%Inn97UdfgD2SGBr8EpAF<rA"S['Cioa&>"52a#CSTN(_m&``9^*!*2b2+Y(9aVR9Ls?X%bHqM:qo"fOag6E^rPc?@4SXblcsGp@%-`6M$ECsc>O;qK*QR1=OS#Cmg.ecIYI`=`!<KbE__N:NahL2e/>"^")ULa^[Hs?p7Q@0k>5N5EFd_uXMU0)3G!1Q[Snf![]'"n\i%4sd+iWmo@RBF7YR*,/WW??i&I+sh^I8V$T!p5l)WXe:WP?^`[EJqL<[q(te?fahTibkGHk])Z)T0Ud(gUstZG2<)(1EC)qI@iQ3h%r7,n^\_I7-IQ!,[0PU%TVd968^G>^6$3'FC4#t-nFr4ItU+qa^`jVq8Emh-^Pi3tafJt@sA>Tl?,+X8Q;5%,J^3NXI*[0f!OOD6/%%C%$U42nf!fhKGSDc=h(*7E&qNqu#nEeq>HAcmHWc*fW4hm+CbgVp![.jH,1S<`ZV=X;JO<OfjubS7:m(=*$7cg8(t#3B0lR<R#)%Z<cj$boPU-<Ujs#)U9j<2U,0u,VYUEoI@oAW[6oV`Y`abg',#-js2ZeMVFcd&:ScXHJZ]n<ro9`S7G;[?hHX1/O<30;1rJf@c5/G%]L]l=q>:+*'\,9[C!9TZFQW(GD`@"MlX.8T$I%\=e?V(IOKPP^V446\VNI8%"rTA?f>BF,+uKqIQuD-D'82T.3i4p<b--L5oT=LX%q\RU\ADous<MUaaHd=ZMa/Q@k3,?$N1[9Oq@6k%-cV(4F^AFnYX."'n7P.=G*57[6`HTkk)o5p`6Gel#qU<WKgemgfKNIMGWG!a#%dM,.FnE8ik"C7jVEJcPXQ,9Uk8qb]aVI?8Y<MU\^/mP7`+khT@gM'8nIYh\qno9O7M0L8Km2f)%9uB3uYm+DdLI%hZ#nYnK>J]j!%4Z(+;UZM*MIIB:RhmY1ap>F@%,Tr'uW-i%2)(YR2bFj8]_0]]AboT[A+r2\s9#/'W&eo-b5fR`bWhTp'onZ?hiL*8$-#4VXk-Gr2%rr4Sq3%aCW\XTsi^=''K&aiSdEdrAAM;2jW/sBjqbR0%m[gU<=A"a)5:)nguklqR<p"WQ$gLWemX#ToPBbXibi'[r.[(GVsW-9h;%"AnbC)@;:u^E76P=e;#WcX%)W+c.Q\F1RGkoMS-JF%enZ;I3+7dbf(dC=b*BMZM3Ip!cQ>g<*iTX=6LkeT#AtN1WVC[WbMi91^%r%ZEYM$?1?fdd8rB([S\Hr])AD;+<[=U*,cH`%2q1Y#3BU)=R:$5pe:8hZi)X3SJW+,Yl>]/VkCm2k-1;4+Dh5_RX*61I[(8.eo'Zl%O,uG<Q_pfBahWiU3SWU<-@BgXmCnd.%:;MX"@<NqN(Z/rB3Z'6H`?$NjN3N&a<\p'55FT*5RnF,cAKl&`7/i9r6RXGTaoUQ=fpU<%,c$fI6I)H+gc$LdOm4f&@k6PV+bU'Pq;^ZU!=?@XJD,c5&%%W:1D-jp-eCO<*)kSm,<m;t&5^*R9ZWaHQJ-N9JJ.Y/d,In$#4UBf%JOEGkAZdEI3<W$h`_q6ml>al;E*^R$BaCG!M:j'Um":i1eqBT0!r>BFM)'%8-*U@;6S/pnGWd]f^N+Z&me"c4X*NmU@J+VRlEpMj%[<dEN([/+cTXmf_OSh"L&s\E)4YP#,A`21NLSfCp!@!6#6+mi$8#stC'WP9(UNJoYi0'o'*u/t&kGTFG$7mFCp<E.l;&s)FOa!RQ%=aq@_7a@E%YdtWGl]*4[;Zlj>lR5@^bo)"9[u$W%<%fE-64QW3[G.*(OE%%b$>XIuMcGSh`dngCd#sX=&kTt+m=HuZQ=iVK^/\pn%E7'V":[lrDTqs$bSI25C`ZD^c9e&$Hl<"jl&ZJ$!pW*bAeqc\*)-gVcd:Q/c)&em0`a1OH()"'-V[?5T@9RIK+4R&iB8qF-]8uhl%B`m%V5X_5C$EIp#hsV-`-X#m#Fr5et-.*o$46CW,Agq--?N;(26'0d(Z!<7[S_-WOq@(SQ5_-(.W'LniDo+Lq9HsIk<kTJKKE@%>%+Hg<$&c@:NCrfC@6FVE!s22^)d6sd*@<<jPU%1p67dgPr+f97g'nN<m3mL>_U1eXTA1%ac2<SeMg9F-h:f>+Xi?p<:L#&4a#l6ML%f6'Y"nQoK43?CYkSCC$W*V!6sPEE6cph.s@BF\g/J\1L^6^0<lj!4jF?$pGsS5FBG6s0QpY&PIijbuqe=o0qmp\orA4Io6>[_(>c%3EsAR"Gq:*jdN6'^iu3en9$:96m'Jn`V;)FW$Lql(!d2rj-PWU./>a$V:9*"[ANOl4.*<LPY,&d9-mQ=JS851*5aY%5GrSh^*MlK%3=YMe873VOEcUMDZ@:(A;2l4[A"c=[&7Q*jUiB\F$o@`"O'A0"F?p=eB++8#mr&-/h+c$9gR\<u7Yfdb=T?@5Jgk#_,_k0(&oc`9%N".o^F&]t"J2*F4rdI)u7i.]N;&>UA+RMB6*ONn](rG[AZp,J/#UWunZOi>s!LLG/Z@hG)D4FqQ7S(>7Dk7N9ofa@JWDNN)Rm6C5%hU.<Q\t+#5k2%g/cEJkCk/l7\3+2G''b][sd77.:$2.ZU5Fs7ll?p&L*4f=q@lUPGbgFW0pUcmqC2m:kl"*HK$$3SY"[@s+ULAOW%:a4448kEUSDQ5)c&N5o5'0dZ6\X(N[1[N]I.S=(mf$ZD(;ciaQq\9E9(=Ub&SP'8&Iu)Vn/[b@TdU4`/,&-3KTo;X2-/)HbWeer8%Z%Pn0I/VdCXQrBU98T5E:++8@Pe'AH&AN5S`gD&RED#f8<=J]p$cl$Fl?pA92m$k9L%60^.QC>c<HmVqj#=+P=EB@Nb2L7.P0C.g%\sK(oL1bm4gCTiFVMZM[\5e;dVOoN@f,oF"gju^0b7`m%h;$3</C*aXW%-l7oc(5$P^di61;!BKQs<a52Nh==$oj2#o*"N30n<l7%]BO[pn![5g+N<j6G>\E/V`dP%GKNlR"[]$Kq':&!6Q58\gk/aeToGlkl]%r/QDR,GT(UG"Gd?`\k'W"*)YD%,@=u';M)EX4?#ZJj%RP3SQKjWrIQCT%pH#Pi#gPZA,ddPY.%/`2'7;na@ldMN=Wtl'X"Q/&5_,5AlG:9XI@>:-i<+&%/#3nTI)%elUM^C5M-&1a_a:6%5%n!R]</Z4!OZH2+L'2*jOb/c#JF:lIn+UsU:V.@/S/:-_6KcHuLC<)V`e\'Mg`B+J*!(<ob&TPP*G/l9:C<Te:N8YD_g'An/j*Vcr%W0l]XB+%:2kba^;qu&KWdTnI.CGr87#^VB_P?Sse=(KcVHptU+FWCfs<&4Qd!u>LNC)>YRZ&GSOm<^W;*>K_j4r\?lJ>$Pcg5/'C%OA=m,prlE#;c/XtF>?K_o:s/`mKO:PWP,?CO<<(l<ZO68mdQ:.+k[]h>rHemOU#8Ea:mN@,"a&,3Bc59*FBY\O*dlObohj\3WOc=%/e)\;:$3<'6s\ueWTLi!mPJ4\Uf+A74EV-+%qJ@!$3B5P0hQMFS3Oa'g*WhPdV'esBA-uD[>/RX_I>i;QDll>e3=27Z4;1!fNANT%m;c-G/XNXb(51T+^=:+>hlVfG!iC*["k;c4E#>dY?a4R2"6Tma%BmknKm46"N@7gQ&8FVADO8rd/;a+"Xk"5"j*G373#,dIAm>Us%0c)sS@>YibQ6#)n<RMak&cDcL'OO-`*NreLn#I;08-JKfD3D'-LX/R<Q5f>j@8hru)8WC/2ng]b64th5;\eIq2+]>V,Xa*3J/PK"%-r%%A(Qr0@MJ,I1fN1!6ZR8]S-$*3c!F-p.]]i-h?il:>N._W&G=aHT=Bq1,)#PSGTZhMb-0nHd?BCRuE=e!?R,4=h3JYA&,P)[b%"25lTd$!Z[&WK`_.^J3:gtr^^<aZ=`AdS!JEap_YA1$t<Zs9n%3OhgV*.Y)b,E)XWi3J,Kq7jl'd4hB7,)%R\<a?^L4/nquB\@Dr%.8nQO>u]6M6?nP:k."2"$%]5%/?H""#["*e*B=R#s0:jM9+>FsRjqjm7#D7>RA=@Z6(T2SJUktIZo[>NQe6Dk`K7mG,OL%5=YKbh%?IG'\1ia>D;Vo=-N!>K$mopfUStY6/`uS*$MJd8<rgAKK?uX?]&;9[!)%fA?kXi"(mTp/"E@3-d^&,F`8R)%=#iH3_(+(PtU.oA5%bBb6GKjbLlmmQ]b06WM$+cQ4f=!?49Tdk6Y6]Z5c#Xi#p^a4dW9F[e2#bYWL[1aE*=@_M)_5AQl*\:)YhE(>IgX'1se!XeRR!%Z#%@S#_/i72]P'K24DTI$SG+Je4Ug"[&(7uS!rQ9&ho8k,UmN`/O@lt:Ni!nYh16@As6(S8YYlL&;MUkJS9GV9c@l.IE4qXI&.SrbE2%@l)NmUr<.E9AKae/Aru.):?9-Sl^,iTc_=,T],)]4%4Au"uu?U8onO6mm.e2NP/>giJjPKrtp,Ih7EaN*nQPb`T*\L<$Y_J8&Jla%n[Kt]I?4lL%9cWf7Q44j0-"L.9j@7(S!@iW1rRb8#\/)TE:5.[fTdF#Ta[0.dEQaL1!kq'S%+c9[\e9=\=$ZY-W(sP\Zphu7lP5H%`qJbc@hUBu!;'ArL!*TC!]hPM[mBpY*!g-=6R]DuaolHNSrVIL\H7*el.f]9;"B-.&IL'd4=clRp2_Y[Tp&r+$IN:P-X/K)F1DgH%*`,D2ESu^N\_-JLQImdtq1g=;.JNU"D2_E`<4jiq*=!RShe]mZZp"J8Vg'.I!eL)S1!_=\kY9@JQ`.-f((H=L=ta(V3Fp\kO5U)T%6YQFaD[!p5V1H8#pisg+`9rLbXFc@j,0Ru)(kilT.Q8CE.YmA`\gI@E@sN%ZkdQH#"kCYmMa]t4VXs&:F$hd?#Xs710*2hf!e@.6%C?4,P`BJq8gC_0pC1"^k)W:4g@<;K(]fbk^RLo#&@pt!>(kl[;'7Vbn(fM@bRHr7pl%^%,`R..bO6M7.;Ke@?6i)Q>m>E.u&ibWQ%,7[<#$hWd6PD;1GjX[@t=&tnI5_d1p$)o\U:Q&Sb!1WL4SJKb_n1SQ/N9>J_\r?t5TONmLnf\T8K=W7poHj=jXN?qiHu2>N]+s0g%ZWJk\3G<)>Z]==X_\@W!la0:n6k>:An4d$@na>JEi#t4RDkZh!=f:pL$"(C47S:1t*4AVp0dnhVoJ0MN&7M(eo*(k64\oD`iXPB-%I;?,#;@9HQ4'gu.L;bfh'RGNQ5]P%pVs+OLL<I[@M,%;jGWnj$e832K'T!Cn5q997*/lccGT]9jB4IVa>6C$J8K.!_M2:5;Sk__i%&J\0#%ah@mW`Fk!G-Zk8_Se&;+/cW2R)Y9L@?kGsVC3H;J+t5m4S"rYKEKsZIO32Wl&<]62n]T[>:Q!--N17/m=`:pV0ssp?a#DA%WL7;8pJ;mKbb\KdT<]%Gqk2A_8#9G%+,2W_5c#'%h.(5=-3PL$?mE20/g^tEE*[P`0V(ncg(#87BqeOf"PZmorH[36H#JHm)XWbg%m"pnqq0'Hr0o*Q33DGW&.:lCICN<*['je481&W0Z`%JS-<E4Q,br.kg8I=0=U(`qgrTQsC)%bA,Zi%@iFg9rE[P;'PGQ]=4?1LT.%@5Y%^+"JsDD'7/2reRqL:ddPQ0auB)r2trAU^=63&Re1O&HK0D!Vd').)atdRJgC&qk^RYH/PAjMCpmlTW:?A4AAknH<;dM>K7L4%"K<[%Bt7k=f8n/Po"KBQ$,2Wq77U&aLZ3Qr?+I[P<X?o/iX-q9n4p$+aANl.F>ZJ9.\`10Or&iD1WRDa(YD@bI.=!\B?WIe^Z=lV%<nMZg`?,=V]cmoOX@iu@18]IQ=cnW!q@)g.'5*IW/5uPA.=uh:eIF0q/O^$r?N*cB8TOO#=MkhgQ:&T6a-6np\g^I+U4]J0RZq$r%'i9@1/PLU93M"@R\gc)pc]cr(g@([MV;.52d-p5#j)0SaH<"/%<?@oMq%;g?YbL0('\GcN<_2M3Ej9=<;G=eh[S3=CHKXm]A=>nD%eM=g/2`+K4D+gSVYC#ptfRHmHKp6s`AL3./8/-W""tAY)WM3cQr>#AoUiF!o^&ZO:EE&@[Jps2[0@u'Y3cJq%7>J<0Fe&QA<<uNd%VNFF:#YP4IbM%oCK/TjcQ^[VChQNgf(<*9%V5#MSQ0'VBk4nj.h1i6RjEG*+oSt>Tp!@-,W*5oFdSAP"E2I(WJ_0LF.OY%V@Y@*B%3JK(1/I8_*&mBn>OMD3ZVc:7<lg,nMh3E^j]HO;FA/rS(Z+uD]8iup1n]L[UhJa(^TDto.A.IV^++4R[e'I<icV9t?S?P(HW*1W+%PH.&98Q<P8L_J.oDj\0N@;1m0":RBI*/EYS%N*PrX@M#A[Hl4L!n!cSKicbQi55OU65m4Nj7<aM-qV%1jkaf_m<7kjQmNZ%EV8Zm%*nf#oTKMHs[LphgUo9b?_RWh5I*G9,*9Z59m7Ege41j(UoN="0MTV[MO*csIJ1WFU@.=`#KqVn+.La7hVn8LtrTUd<)!UP=FXSYH%#3?)EK+E<D35psd%T9<V-P89SqNQd:(.aJU)?eq*/YilB]@/%<,Z5p$`3o15rNmZl!7m9S6an(dgfh6a'O29<R'JGWkuiFb>p(7_%&h,l\?;f>f/Kaf[BosdO+)>Xp(rM:._k;Kj]T8dthQe[^)%_qJap*u&pJFUaE."kRD@o89Ib_8oI^k\KV=^C@G6nLD>&!9(_4s=)%bF.h[17rt_Z[>nQG,1h!"]B1f,$r]E$-N'-'Z"e[MKfQL$'I)\%%MDC/h3,h@&UBfl&&BmRZkT=/MdikP"U1:gk\eb<ItTW^'Yg7%$mm-kN*Ra+fSIOU@#X/o,j/kKH)2phMlNmC)3)MX"W7:cNnE1/<W_`g:>TAOT6!Nf=;l3;Kflk382=9e(Nd<D1l%Da0ET6[aH7or%\00SP=E*%1K4;VpA&>PZf*Qt&d5?Z]:o%F;WZU]=f"<'tZ'No@7\XZhXtf!`hrhmXUp<n0b-=p&+eX:33gqSITiH<NZSVMuMTqWb%TSCGiY>\#@4E$"PELf^T(t&V2''=(5"7:_N;AKEN4=SAX1i/WM_q""q=-W?@e8b@gqRVRH3"_'E0cfpVi[%'77tp^WC_t/R0^T<5%bn91B@S!0$aV`[UHXI&V4p,D4EoE,dD3:qsJ^f"R849,Mj]g:gAU[du7*]2I:`&\7q6gdC;JT5q;18cTn]`K`,tFHGjiX$U:'1J\%U@C`V(#t4./h#A*TGrsaiB!%S`l'onF^64_)I1*./h]'Zl2P+d`sh7^fS%bt>3uDc&JJbRKjk,tG?-9)_t5sX<,QZc?ANb08*RGC%Bf?O$a%-K97$0lX!lUCBT\ga$mh/SVrZYSe@QqAM+a@>&4q0DWn*5t3$!n@"cD6DbN7MD-gV+5(1%6VJLcq7l!:=VP8N/F."LjX>%Fj#KW]fR)6Q=]Z6R]O&9>+;8t"L<4LOqhLaU_1?%rCNko[UG\1h1[2pg_gqljHFk-AeQn"Up,;29sIGa!q]tr?1,f#lnAGFBiYNO%6a+F#fcA\tGH4\nDthY'E2XQHWrZ6h7YEPn)=Kn]GZ4)ojNGoEJkO+qmXDCF*[#4Sh4SB5\_olC[a;SB]O"Ae*OV?Rb(JS&\]bYe%;gIRi?-/'AeoIlZag2XZ=nU="(?HEWbBi#bh9j664aP)do'WEM;Bh+;_G>7m)(m7f(q)Q5n0tACL/VO)s4-FT09MnB\`Y6!`LZA'%=nH_Jbb!MJ)BTA:]VYfZ;]>9BWhX#ICHEO71j0sOD1fPS(-*7GFq4(.$`%D,1Ok,&8ID^07V!,1pb=8(\<)$ac&#=RRg9&JfTO5N%EZpJ3);40RTK9MPSA<&V4-IH&X`_deIQZr>[]_p>RV6MQNodQKNhM5R4WBj-2Y!bSIpXf=\-5Pao`Uo.)"$X'1"giTX:M#H/tWa'%C1&8W78#KA'GceRC9_cs)l]9.Y[ahTY1-)M$4YQd%LCJM"XuLDO!1MiJaRc/)dlY(h9@<:18=<ej/oVAVE>F._Y3o*:#:EOR1IW/%_VrJ)B-dmblfIYC9$Y/C(C-65=jLCg;lH@k9dspWe=PE^dU:bhd!H%P%W/I+LJ*jU,\D_mcf_u*A<Y"iH)sS/a-Cmb(JtVf;IP27%ip40*o3EH6kbrB-^0E#OKL+)`I85=117;b+*ojH`^Q*&Lr.l-62!>o@86Lnr67pI7&20Ac^q^PN.ahHiL]T]Z`Sh&JBUjR[X8JfS%Hr;jE+UU>m1^.]:0=f^Qg7Yn+CG8+A>IsLqr3o,&M`N3GGq/p=Z;;A>R%gnC[MXJ4!Wq1-/,6,\1PUIrPb4!E%O</Yp\'WLjmuP:%Y_ZS%`p&MJ%kQdY`lJ(6)r4KO,0"9<D)4psR+W;Fd6+#<:+=JaDbN&BFigM_G`[Ds;Wgq47aH7a%jhIQRj*/l;'c8$@Dq1H-mMIj%6YZmS!a7#D'^C]XnqE2/?6V8Za=USeqOTC`dt(G]mM.4pKG+41b9tbF7'dUZ=qPZ3hAC3B&9=.%Bif6>iD\UdA(+=WQ<C;p\5Sj2%hiE\'[M.4^-S4scmppa2&X=GIC\>5B(iQ6I8StW/CJ:ufUm#mc1(q?hNfH[=f$NOiSY-(X:/*fIXLik&o7onKIo*$OBq,GOUEb7q%Ad)^r?km7,8tAhagR@KFO:+QD0pR#<_kZg^;k3`=5<ml%csaX)H6iR]YS6NoVq-8%WG\14&T%`Yd"Ils7C/'Wb6^J4ST3>K&V@dG%88,kf+pB0:r)&)3,.'RY(XOM;pt1XiE`"S"GH+V'rR&_XF,RkLA?&-Jb>%CrK%-/nD3j/`XpembNOT^O(g!4.\AS4s<[pRrM/[Ku%U'$XL?!"-X:#+IG\a$Ds]'X?rKjplC],9lY4rS2NqCu@k^d3u7*SP>Uhq#beHe2ep$[k#P5edbPB?;O`=gq?0I,8qJ/Rj3-+b2s`%L,%Ek>$X8<Rd+c]]B_V=o2@BE:QLJ`,df'H#K[V\e04asf@,?:7:_hfPn?pKR(KFO*"--m4!QK<&7X;dU,W9s5,/<[0=`tS_hSfb%"t^pZGoX/lnmnHnd.*X6%2>5-mp=$'WJY+$B)O=R5;g1ErN5hIm]HS]K(YHai7=2iK`#EB&'KVK$cHd-4HXOSlY/SXWWmZ^,'cKh%-*A-FTE5><#.XIL*EqZ-C8k#\Q#!OAejqHL_q_EPn&ITA.)X!?5aW(Nb<-M.5H,2]gbkp1gW!@!QsGW7.I_@Pg=e+d.o+<f$6EeC%()/8?L,#>.d%PWVH"EHEn7O,$A@Un%h)Lf8'$>Gj.Ag0&?sk*F3?=Nq@g8[0l6sskXZ+7kM^b.?S0Co[_@(3+SAD,]c3j?<>jik?%_KRqgR)I&)R?H+[i^jpBB_1rQ,(no*4?,S)'WD\:0W-d2o$i8.`<&<Nk65W'8Tb3!*Sod+Eu<l^2Je"<=72B.)01Y>3'PQm>R"Yl%a:=,2""TR^opkh4oKYT@a'RL`/2Jn',E&emh9VbM\=&os9XACk*4IBJJ]82JS'MY;XkY!?$\:Obfi&r5+#iIq;S[e`6M5f_P7X%d%IUqV2Ao>UG42NJUWNjrs<m5]APOHk^6ecH1@L$1u_L"L"[UQj$]+`hSg"W<=0)&?)G_(<UmJ/5\ff(/F:YZ4VMl5kb*e_TB^E0;p%'\_p:A8:8P!Lj[8g2RgRG&_">ArNH3S$@Nh0OeQ0I;cCoZlG8b?14]1fD)kIH)E:e2+6QP]L5\Ijg2d.hRuNCA(deC&\T81hREAW%Dd<uVblI]?k'>c480KjtLas[S%eAF>Fa'"P^&&];Z*j56X+%)d8`s/QLn#idN:J5%q(O8L=E(%^iY+HXK7]j[K2g/8VB`!le!`Se%BPT&hs!WJdS?Q?9.Wp7#`gWo(NlAe6_UF"KfT02$6+>s(qrObf_!*4s>>j[%WsD/YOC,I2&!N_Q<c@+o94kDV4td`r*?fUJJN3[_%f>Dt+j8s;]^-.>:P(JUF\K1aB;\;u:"JFW@I1[@Yl4;_6n+ZFF]Qkn/YT+52PC-`YYS#EUP3XY)`6NE/&'sNkA7k[Og[epaKN3-T%l>@.<<*`S;f=;UCG%0rR2kRIfO_,<oR(s0^DIMM!p9$i@^pq[Y'L4L1C@bA;XQ/&=PYAa7^edd!CH\:*Ldrdof?FBe37S=:bRGZ?%kgjl@C,qflQ8^EZ)mg2X$DaC/_PepE;M^cii&7F0`2GM.b"/_u&gP6Ic"H_;Adk=lN$AM-KjTZF#Ph2_\F%?9pj<O$T1%b#C`@O>%jBdp;;#Q'C>ChJQ-A`HPfR6p;-1C0D^@V"jP0#CV#b.h<E+PGO]0o&pX7+ao7R0u2&K??E0k?@L-,j^l,.f.O_0gD4&"B&/R"\Lo%X:=Cu=i5T^G4mEVBV6ZX@e6sdd8k8.j]U-6lbK2B789.M'e9'tlf]8HH#,j+O@C@B788ksa)Pc[pq"Zd'7ug&eTYP8*@]4K`S0$.%YceV@D[`8u,@@oq6$Vg5,-YB_R$qSXZiCsdp2Oo=8TbdQG>kb@obj+lf3_H&,Xs0tgT*6dDpncmDP@I?`&c_Rar9:'G"o8L=eW=[%f[48_+9kg;b$5%\"StMiPc3XtP)V<><&h]:0['=!PNmE_Fk=S;Z;g=_D&8T?d>;#%&1iMN=IukK6iIbMiflM6TH>[pE?.1q8fSRo%61WH?[>iuMMHg`c$6-DiWN;6O:"NOTq:SR9rkJHY^XDTNp=EsV!!mh-l1W7^agce^35j`M`30^m@U8qFWef+F)`,SPVfG=XIc3e]%.E6J(%Qhs2GYqJJBYWF86Ve'`>D]tu%+[SO:%qKs@8B"HMs)f,XB_&PfCN$VU('E>$m]@l2i]5"&JhafT#IDu^OA%T*b/%j='?>0%,tnNp5]ml9#`O3hU*,="_lq=Hg:M3LJ!L/gkK'5&$<H0V5r-dX*7+i`%ZR&=]Fa(6'M,oh7LX5:m-C:';NNO'J2m2U1rtBRogL)0%UJ?n'g44bB(hH$@U%sNOdhDLQ83_PRcf"-1LIn!@<r*g>lgV\m.tpe@3M17<KUd#;0`3#q!c4%>O<^0tJWmn8iAVD$BHfa]F^::@%IO/LiN]dJY4R@k(WfR]1kF$'l8c);de4YLFQhaS,TTV?\puI)9=O3<t*@"@Hq7PDrP`H75o4cki-$6bt5*Y&HA7^gj3bhc\7sAWU%nD;cacg-I(9c8K@(X@aG>mfL1O$c`Foq@V$+Sfl\cd0X7fT>eb>&&lZKn^OH<'kGadP=m%aVj4#.K@LaPa&^,?BBOOah0$MetjkC%5UO?'GruU<@\Y+g\PnuR7<)TlpB[p3=;$9^"KPd5`l-n_lhs_[lWn\/.9"3REGN#Co*OT*/qmha?)l6OT24/^S2j\bXDg[\'_RtM%>;*9p1_QMOA)6^9cqjIo!#UiHpG0b_=:-k:(?!pI42bR$"U"62M]5OI,.d8JTLiD?"N&*"PA)MtRT!\b;Ou<BZA2BCFBqA$3OCNN%gdp$`3=6V4H<h8F+:U2.Td3>Wbu^/1j$r)_i0"-IOu;f!Mi;1\\?7eNN)*-!=\@\:TA"=gd`G`>jC%dm?6.34naDe])(:_iH[;*#%J#P&?*&!NKX2\i,PbR(B9@,sX'A@H"]0lBCMoU)?5m;(^?1C&&K?l+$2L0Mq>)Dp21d\(b'cSE$9`!n.rbN'cM0C8._P9PI@r+I0%#o/RScbTJ`f4Ej>Ou!*Q8c@5Lji54881<hl,UL1l/W_;_A3U+.8:ET$jccP\D%Y#*Q">R')]:pMMTe\_;=IK@V\Y<!r&N?5Di.@J%<X6o+MdE`LA4q+^b7;f-(.k1<;L>mgs4FlgoA*M(XMlJbXZ,tjlP"Il.6l[Z[,c@S5Nd;iS[j8I%''p-i(Z>b#G=nH'43A3a)rX?%.9@AY\.d%X6h:Z:<C7q7CES(_o+Quu>l7uE6AoM<Nm3<^X>/W^c#FqpmC'+MHSeM+C'g-B8B!p%##3K_9U*"o;^#mI3:?oMSYB>*%Mm+u+6[0D7N3W9O2a-j*4<WfM]k!]Z:!tm@Rp8%t<D!33i%^06.XqjJ)bIdgP+Jm3''WXGdX\Bj9g%KfUUkT6;$DL'$d%&;n\3/^%Mf86gOY!kYGU?a[HbZO_e>9OWFi+_A^BIsP7N]dtlg:-`+^Q8,L0Yr0_48dBZG(fs[>5b+]31nW$O>4;SeP*<3\9VJnH+2b0C'TQ%B+FH6^[of-<5a5i0SSLRo@esmTpSU&k"[>\:!D'KGAS1sTAO<jLrG!4YH62Bd4aQe0:tg9Gr]'npXK#9Lu3V"@EEdXABcV`\JH7q%j/dHem10l#V'7as0"(2tl:/Y/J(b#1`#Edd8%P*L*X(#'M6[4NX+rC80>/DeVQlkqT18r4FI]7D-2Z#bOW3:^W!L%H)6HTu<"QgO%Uhu8Rru;Xu[bXF=kDbG_^j1qa[n>LF)kV`KAE9jAX+<,^akE5T4esricrnA'Yc>'FY4.Y9@j0n<o*G<cCuGhb17DsL#aG`?3@gRQ%-%gt=QL$MZ->BT&$*N_?D&Tc8<P:qqI,3m>3^Wel,0;aK#5YpRn3b\al8h:c/ckk=G5T.n^bi\pRe))35[,1+-id;*EX2^RVEub#%/WqQ()0iu?^`VAbl(i2c8O7LR">QuKGn')B1[=Jo-FFVk-GW75cdr?+rjOl=H.d;+%T+Fc.Y>rG;HKfd=4)M2a,oKCq64UTJ!q4V%JjL[uo8t1fpbA:i0i<?5\OZ.r,/(915/F?o0`NSm>N"V-#;3VT$Z!>"S1H())('5F,8"*CrfY("0'^?TQj5-.lUW*e$PRmNGgGWQ%9u:g:"eN6TE>P%r\-n0bpTo#h:IV+CBY]cVX7.VI*bN4t.LW"T4tEnbp=X:^SOLIIn'po2_MGe%4R8b9YKU:.8=1<g4JTM>*W,Ob%9m0eg-3YRIXK/EBDt2s)^@gMh;8cU'j?HY%c-!1mMm!2l#VSj<gnGS5+@:3P?;p@P6?Q@EVVob<k58AsL]mZ?.@McL30fgb(s^<(%@b-6_X^YC30do\`^F8!?o)U)a,a<2Xhb;=;#Qs8<qW#2=%R3tF;0DjFnZ_Ge2afs2\5%;2H!PV2!+8AX[29Rsq1PlJlu4k,5Tg'A%30m>-9L<=;:fOSPjQLAO(rOQQT.bZ]WGY`?]^R4GAF4IsP\_iuOt^7u::M40>TjK"VKd6+U:=mgPu)#P\8\#%//.iP7&_'I+XrbV%JrKm:%]?.kGl1g5_Kogo)F40V/T\f,4SI*S*AMM'=ZZseiI[26o0=W87!R+s1WQK7"TOpZ]$<oL`?hC;gP]n#[C9f]fgQVGj19-_%$r/ktYNXLnZbAi>^k6UT!qD\TpTm%Uf1dd+fXgI7_L>r!D6iB;\`S`]QYA&ZF\qs,FPb,f^@93Y@ArFKEQ<GcS[Pt=!cJ8T:SM=-%IBu=jBKQ_Skp\6EgmIMI`>_oj5$+%<#"!L>L&rn.Qo1E5+picdSZ"HmLl$^u=ksd@k+WcFN&<[>eG)+B^5E%hqCuKaZncrim<"-N%-'[B^q.SGM/>UsP@>-YQSDfj0=Dbr?qr4Yfk!p;u_Z9umRKJr%jT^)lU8G/XlEJ6OM+EfT+5['12:6SjTO?*31@t*O5c$GjU>u_Z%4kY#4*Sse[(V+o&[Rkdcg=a2GfNXZMk7,:fqgKI>#l33b<tH+F\#MF/<G>8gKRsngS>GMgOe>FX;N)'&V>U(*rkuF*c67Ri04*e.%Ulu'$'I>m[XFhbiE[elk`X_Vq"n190O"1KWZn!E;r!PD*_;t,`.F,/a,:mCY.MapU;DIj5BI5d5M%W,dTU""J9/.f(3%r0hYQ7X`%Z)B)?B$4hqlUJ6Srm23UJ`8P/F0Hi\Ed(]b2Vk+"5),H>P3ePC6Lh')/&]Suoc=Y+:%l8>k[im]5s6ZJdH2]3dW6u0@[ZV/Y8(!U%")eVMK$1Wp.(Ui1@LI&,-IK;4:>t%rK3kE@^sEB#91n.7G[pL=8)N^AX7&08\=<&ZA!6>eK*g]MrDG]LnCfTQE`\akOS;7^`mDDj%(VQ2n9eht-bnelp:s(B(iDm3ND]K6)proRf0W66e5<lHZI?I1BJ[fV%bUDaJ&*n,e?UNe4D03Q<drN'`$YR[hb&N/R[5,+;?=#"A%'Ig<k4!cN2r$>rGmR\H$D0]<EJgj*J<3n]Ie=k<ed)R<1_m[aO&PPTT]@=-MdXB*>/o,O5a5bqgmEu[oPiLSFnuAR!J!P$oFBOl:%S(hn#d9<(m95JBLGL9Y>1Hd>8"OABP"'P]i'Eg%Dc5!XoP!eO).RQMj7uQ@GkB0.LX<LGk&IM1+QrQj5#C^`lV]1.+4pB!R<p6ee%N$+'Llr"rpCpH$q8eTSqgVZn99-Tfp[92Kche'i)k_b_cc!b\M\r8)r0k1Pq;8tMYB@G<\bVEE4SOl@%D\]oQHPIMH_Z1+l()U's%jN$UQ^4Y^j4])^Y3uBS_(''ce6uJi3L0ZM0'ok7qG0gK>-et7-d?rn'g)$Y3!iqPuk[rK*C10qpTk?#[ahY`DU4b/e`(972*J8uQ%B#P@\EksnS,^IT91D9YNOO>9TNA_)/(T#$riWMVgjD>te>=oi*MGQfUm2B&KZBR)M6U1<!mV?s-L7-`mZa80pP)W0^GB??<(kEOs%WjRS]jPp#%RfG:OR8aDCMu!p:#k3oi:uD3:[0kZ_-BKcDKh>Snc0FVu?E3HCq"ZlGGE%Cr?!/0?22+@^Ylml47,Ol%#LCug"j+:c%2`7*%LZh'L;E'No%u7bD0;Fq(;Q?%^QGSa,q6V8:YCX8/&KKJ8nD)oZEU`pEI,fT'4*4Hc_,HQZ$ce?(-\044T:cAlK*?eB`9_]-%>F@d<4[7CL.Al^ACSF/a<f;@lU[5)WE+XMA9N=Ji"GVc5d1rh;jiE6?N?PG9q.,Ro;*"WX$A':.Lm#n650Xg+Q\\,Y-],j<:W0/.%2o^RM;/AtLbO"e>A1Q;*Q,MMh^#WC$)oj!*4HPF:DCHECaQ^[:;^D$cI0>"fU/L?ar3W[86,e%GZ)T7Cpfg0c4,gL+<9UZ(S$dtr%_EUuc%@:duIQm2?o[o_U<s/N#X5)*c'I`</6UDi((C<:Z<'Yi>#g[h*\-B5=]U^p6,h5p$IH+Wr&>6.9-d$'.1I&21FFC=M5.NYe%ah%BD]>Y_%*o(bBHul0AN>)OhaE4*dPmY-fQZjes\EGDcF0&-Er`s&7MLi:oOhroBFH)@Q%o'O6(-BXWcmJl<K*(>g8PPQb!</oA%7*f'ce.MA095ff&(P<BrkX%P<\hq?SDq1F90a)8#>e<?PQIk.RI+(]g;'>@&O3/2G9n#<:gER6$VkkD7o23d;2J?OWWuq[-\`P<;%Zt2hVlZqba`:J1i`pl^2TuBHdX(@:VL;deH3A<e<j7>'2W<G/:a!MlFnppAq*p(P`2E4%rGEe4<#b=D4G?.Yhpb4J\!Ia`8[nB9M%Lqd:m0+A$8Po`?!lh`'LDb59#XY%W#;=MGd(XcLOau`Fs^%LD`km:gp^ti^@TS5EWYNIp>qO`8n^]3,>p%uN%cbKJ.J+MtZs5C`]%s3#oikPt3>rU'X`q`k)Y^]3tn^\j.Bqkq4/:]L4Es8INGr?&fRl!OJaJ,fKAhu<GDs5i/;p2>H\5<jYnrD3IgqnN-b^\m-\^]3tV%qj7<f/Y>\qkC<<NJ,CDf]3kR[!`Af$~>%AI9_PrivateDataEnd